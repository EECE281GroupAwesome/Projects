                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   org 0000H
0000              3            ;mov SP, #7FH
0000 020AEC       4            ljmp PowerOff
000B              5   org 000BH
000B 020A2A       6            ljmp Interupt0
001B              7   org 001BH
001B 020A21       8            ljmp Interupt1
001E              9   
001E             10   CoolConst   EQU 60
001E             11   ReflowConst EQU 220
001E             12   SoakConst   EQU 150
001E             13   CSEG
001E             14   
                 -1   $include(math16.asm)
                428   $LIST
                 -1   $include(LCDlib.asm)
01F8              1   ;This is a library with LCD functions 
01F8              2   ;
01F8              3   
01F8              4   
01F8              5   
01F8              6   
01F8              7   
                 61   $LIST
03D8             63   
                661   $LIST
08DC            663   
08DC            664            
                 -1   $include(DisplayandMacros.asm)	
08DC              1   ;
08DC              2   ;Functions for displaying the time using seconds
08DC              3   ;                   for displaying the oven temp
08DC              4   ;little useful functions like wait
08DC              5   ; Beep to make short buzzer pulse                        
08DC              6   
08DC              7   
                  8   Display_Any MAC
                  9   	mov x, %0
                 10   	mov x+1, #0
                 11   	lcall hex2bcd
                 12   	mov dptr, #myLUT
                 13   	; Display Digit 0
                 14       mov A, bcd+0
                 15       anl a, #0fh
                 16       movc A, @A+dptr
                 17       mov HEX4, A
                 18   	; Display Digit 1
                 19       mov A, bcd+0
                 20       swap a
                 21       anl a, #0fh
                 22       movc A, @A+dptr
                 23       mov HEX5, A    
                 24       ; Display Digit 2
                 25       mov A, bcd+1
                 26       anl a, #0fh
                 27       jz Ender_%0
                 28       movc A, @A+dptr
                 29       mov HEX6, A
                 30       jmp Exit_%0
                 31       Ender_%0:
                 32       mov HEX6, #0FFH
                 33       Exit_%0:
                 34   endmac
08DC             35   
08DC             36   clear_hex:
08DC C0E0        37            push ACC
08DE 74FF        38            mov A, #0FFH
08E0 F58E        39            mov HEX4, A
08E2 F58F        40            mov HEX5, A
08E4 F596        41            mov HEX6, A
08E6 D0E0        42            pop ACC
08E8 22          43            ret
08E9             44   display_Time:
08E9 85373A      45            mov x, seconds
08EC 753B00      46            mov x+1, #0
08EF 12001E      47            lcall hex2bcd
08F2 9009EB      48            mov dptr, #myLUT
08F5             49            ; Display Digit 0
08F5 E53E        50       mov A, bcd+0
08F7 540F        51       anl a, #0fh
08F9 93          52       movc A, @A+dptr
08FA F58E        53       mov HEX4, A
08FC             54            ; Display Digit 1
08FC E53E        55       mov A, bcd+0
08FE C4          56       swap a
08FF 540F        57       anl a, #0fh
0901 93          58       movc A, @A+dptr
0902 F58F        59       mov HEX5, A    
0904             60       ; Display Digit 2
0904 E53F        61       mov A, bcd+1
0906 540F        62       anl a, #0fh
0908 6004        63       jz X7
090A 93          64       movc A, @A+dptr
090B F596        65       mov HEX6, A
090D 22          66       ret   
090E             67   X7:
090E 7596FF      68       mov HEX6, #0xFF
0911 22          69       ret
0912             70     
0912             71   Wait:
0912 7B64        72            mov R3, #100
0914 7AFA        73   L3:      mov R2, #250
0916 79FA        74   L2:      mov R1, #250
0918 D9FE        75   L1: djnz R1, L1
091A DAFA        76            djnz R2, L2
091C DBF6        77            djnz R3, L3
091E 22          78            ret             
091F             79   Beep:
091F D2AB        80            setb ET1
0921 120912      81            lcall wait
0924 C2AB        82            clr Et1
0926 22          83            ret
0927             84   
0927             85   display_Temp:
0927 85463A      86            mov x, Oven_Temp
092A 753B00      87            mov x+1, #0
092D 12001E      88            lcall hex2bcd
0930 9009EB      89            mov dptr, #myLUT
0933             90            ; Display Digit 0
0933 E53E        91       mov A, bcd+0
0935 540F        92       anl a, #0fh
0937 93          93       movc A, @A+dptr
0938 F591        94       mov HEX0, A
093A             95            ; Display Digit 1
093A E53E        96       mov A, bcd+0
093C C4          97       swap a
093D 540F        98       anl a, #0fh
093F 93          99       movc A, @A+dptr
0940 F592       100       mov HEX1, A
0942            101       ; Display Digit 2
0942 E53F       102       mov A, bcd+1
0944 540F       103       anl a, #0fh
0946 93         104       movc A, @A+dptr
0947 F593       105       mov HEX2, A  
0949 22         106       ret 
094A            107   
                108   Set_Any MAC
                109   	Inc_%0:
                110   		mov A, %0
                111   	
                112   		jb KEY.2, Dec_%0
                113       	jnb KEY.2, $
                114   		inc A
                115   		cjne A, %2, Done_%0
                116   		dec A
                117   	Dec_%0:	
                118      	    jb KEY.3, Done_%0
                119      	    jnb KEY.3, $
                120   		dec A
                121   	    cjne A, %1, Done_%0
                122           inc A
                123   	Done_%0:
                124   		mov %0, A
                125   endmac
094A            126   
094A            127   END      
                 -1   $include(adc_functions.asm)
                 -1   $include(HeatingandTimer.asm)
09EB              1   XTAL           EQU 33333333                     ;Clock Frequency
09EB              2   FREQ           EQU 100                          
09EB              3   HERTZ          EQU 2000                         ;Buzzer Frequency
09EB              4   BAUD                EQU 115200                       ;Baud Rate
09EB              5   T2LOAD              EQU 65536-(XTAL/(32*BAUD))
09EB              6   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
09EB              7   BUZZER_RELOAD  EQU 65538-(XTAL/(12*HERTZ))       
09EB              8   TURNONOVEN     EQU P3.4                         ;Controls oven
09EB              9   BUZZER         EQU P0.2                          ; buzzer pin
09EB             10   SERIALRATE     EQU 10                            ; Readings sent to comp per second
09EB             11   
09EB             12   myLUT:
09EB C0F9A4B0    13       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
09F0 9282F880    14       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
09F5             15   ;------------------------------
09F5             16   ; Set up timers, 
09F5             17   ; Does not start them or enable INT
09F5             18   ;------------------------------
09F5             19   Initialize_Timer:
09F5 758911      20            mov TMOD,  #00010001B ; 16-bit timers
09F8 C28C        21            clr TR0
09FA C28E        22            clr TR1
09FC C28D        23            clr TF0
09FE C28F        24            clr TF1
0A00 C2CA        25            clr TR2 ; Disable timer 2
0A02 75C830      26            mov T2CON, #30H ; RCLK=1, TCLK=1 
0A05 75CBFF      27            mov RCAP2H, #high(T2LOAD)  
0A08 75CAF7      28            mov RCAP2L, #low(T2LOAD)
0A0B D2CA        29            setb TR2 ; Enable timer 2
0A0D 759852      30            mov SCON, #52H
0A10 758C93      31       mov TH0, #high(TIMER0_RELOAD)
0A13 758A81      32       mov TL0, #low(TIMER0_RELOAD)
0A16 758DFA      33       mov TH1, #high(BUZZER_RELOAD)
0A19 758B96      34       mov TL1, #low(BUZZER_RELOAD)
0A1C D28C        35       setb TR0
0A1E D28E        36       Setb TR1
0A20 22          37       ret
0A21             38   ;Buzzer Noise    
0A21             39   Interupt1:
0A21 758DFA      40            mov TH1, #high(BUZZER_RELOAD)
0A24 758B96      41       mov TL1, #low(BUZZER_RELOAD)
0A27 B282        42       cpl BUZZER
0A29 32          43            reti    
0A2A             44    
0A2A             45   
0A2A             46         
0A2A             47   ;--------------------------------
0A2A             48   ;Decrements Timer Every 1 second
0A2A             49   ;Checks Oven Temperature ever 1s
0A2A             50   ;--------------------------------
0A2A             51   Interupt0:    
0A2A             52       ; Reload the timer
0A2A 758C93      53       mov TH0, #high(TIMER0_RELOAD)
0A2D 758A81      54       mov TL0, #low(TIMER0_RELOAD)
0A30             55       ; Save used register into the stack
0A30 C0D0        56       push psw
0A32 C0E0        57       push acc
0A34 C083        58       push dph
0A36 C082        59       push dpl
0A38             60       
0A38 E59E        61       mov A, SWC
0A3A 20E102      62       jb ACC.1, Continue
0A3D D204        63       setb killBit 
0A3F             64   Continue:    
0A3F             65            ; Increment the counter and check if a second has passed
0A3F 0535        66       inc count10ms
0A41 E535        67       mov a, count10ms 
0A43 B4643D      68       cjne A, #100, Return_int
0A46 753500      69       mov count10ms, #0
0A49             70       ;send the info through serial port
0A49             71       
0A49 12094A      72            lcall room_convert
0A4C F8          72            mov R0, a
0A4D 88F0        72            mov b, R0
0A4F 12097F      72            lcall oven_convert
0A52 25F0        72            add a, b
0A54 F546        72            mov Oven_Temp, a
0A56             73       ;lcall temp_display 
0A56 120520      74       lcall State_disp
0A59 120A94      75       lcall SendTemp
0A5C             76       
0A5C             77       ;lcall display_temp
0A5C             78       ;second has passed
0A5C             79       
0A5C             80       ;checks if oven is greater or equal to target (can be moved to adjust rate)
0A5C C3          81       clr c
0A5D E545        82       mov a, Target_Temp
0A5F 9546        83       Subb a, Oven_Temp        
0A61 400A        84       jc NoHeat
0A63 6008        85       jz NoHeat
0A65             86       ;activate oven
0A65 C2B4        87       clr TurnOnOven   
0A67 C200        88       clr Ready
0A69 D2E8        89       setb LEDRA.0
0A6B 8006        90       sjmp Heat
0A6D             91   NoHeat:    
0A6D D200        92            setb Ready  
0A6F C2E8        93            clr LEDRA.0
0A71             94            ;turn off oven
0A71 D2B4        95            setb TurnOnOven
0A73             96   Heat:
0A73             97            ;if timer is active    
0A73 20010D      98            jb finished, Return_int
0A76 E537        99       mov a, seconds
0A78 14         100       dec a
0A79 F537       101       mov seconds, a
0A7B B40005     102       cjne A, #00, Return_int ;FFH is -1 in two's complement
0A7E 753700     103       mov seconds, #00
0A81 D201       104       setb finished
0A83            105   Return_int:
0A83 D082       106            pop dpl
0A85 D083       107       pop dph
0A87 D0E0       108       pop acc
0A89 D0D0       109       pop psw    
0A8B 32         110            reti
0A8C            111      
0A8C            112   end
                 -1   $include(serial.asm)
0A8C              1   putchar:
0A8C 3099FD       2       JNB TI, putchar
0A8F C299         3       CLR TI
0A91 F599         4       MOV SBUF, a
0A93 22           5       RET
0A94              6   SendTemp:
0A94 C0E0         7            push acc
0A96 AF3A         8            mov R7, x
0A98              9            ;Sends the oven's temperature
0A98 85463A      10            mov x, Oven_Temp
0A9B 753B00      11            mov x+1, #0
0A9E 12001E      12            lcall Hex2Bcd
0AA1 E53F        13            mov A, bcd+1
0AA3 540F        14       anl a, #0fh
0AA5 2430        15       add a, #48  
0AA7 120A8C      16       lcall putchar         
0AAA E53E        17            mov A, bcd+0
0AAC C4          18            swap a
0AAD 540F        19       anl a, #0fh
0AAF 2430        20       add a, #48
0AB1 120A8C      21       lcall putchar
0AB4 E53E        22       mov A, bcd+0
0AB6 540F        23       anl a, #0fh
0AB8 2430        24       add a, #48
0ABA 120A8C      25       lcall putchar
0ABD             26     
0ABD             27            ;Sends the goal temperature
0ABD 85453A      28            mov x, Target_Temp
0AC0 753B00      29            mov x+1, #0
0AC3 12001E      30            lcall Hex2Bcd
0AC6 E53F        31            mov A, bcd+1
0AC8 540F        32       anl a, #0fh
0ACA 2430        33       add a, #48  
0ACC 120A8C      34       lcall putchar         
0ACF E53E        35            mov A, bcd+0
0AD1 C4          36            swap a
0AD2 540F        37       anl a, #0fh
0AD4 2430        38       add a, #48
0AD6 120A8C      39       lcall putchar
0AD9 E53E        40       mov A, bcd+0
0ADB 540F        41       anl a, #0fh
0ADD 2430        42       add a, #48
0ADF 120A8C      43       lcall putchar
0AE2 740A        44       mov a, #'\n'
0AE4 120A8C      45       lcall putchar
0AE7 8F3A        46       mov x, R7
0AE9 D0E0        47       pop acc
0AEB 22          48            ret     
0AEC             49            
0AEC             50   END      
0AEC             21                    
0030             22   DSEG at 30H
0030             23            ;ADC STUFF
0030             24            ADC_out_buffer: ds 1
0031             25            ADC_in_buffer: ds 2
0033             26            last_reading: ds 2
0035             27            ;Overflow Counter
0035             28            count10ms: ds 1
0036             29            count5ms: ds 1
0037             30            ;Universal for time
0037             31            seconds:   ds 1
0038             32            minutes:   ds 1
0039             33            hours:     ds 1
003A             34            ;math variables
003A             35            x:                 ds 2
003C             36            y:         ds 2
003E             37            bcd:       ds 3
0041             38            ;Oven Settables
0041             39            Reflow_Temp: Ds 1
0042             40            Reflow_Time: Ds 1
0043             41            Soak_Temp:   Ds 1
0044             42            Soak_Time:       Ds 1
0045             43            ;Universal for temp
0045             44            Target_Temp: Ds 1
0046             45            ;Enviroment
0046             46            Oven_Temp:   Ds 1
0047             47            ;LCD Variables
0047             48            ;LCD_Temperature: ds 1
0047             49            LCD: ds 3
004A             50            Thermo_cursor: DS 1
004B             51            Thermo_segment: DS 1
004C             52            Thermo_inc: ds 1
004D             53            LCD_state: ds 1
0000             54   BSEG
0000             55            ;booleans
0000             56            Ready:       Dbit 1
0001             57            Finished:    dbit 1
0002             58            Timing:      dbit 1
0003             59            mf:          dbit 1
0004             60            killBit:     dbit 1
0AEC             61   CSEG
0AEC             62   
0AEC             63   ;Stops Everything until switch 1 is turned back on (Not Done)
0AEC             64   PowerOff:
0AEC 75817F      65            mov SP, #7FH
0AEF 759AFF      66            mov P0MOD, #0xFF
0AF2 759DFF      67            mov P3MOD, #0xFF
0AF5             68            ;Reset standard times
0AF5 7541DC      69            mov Reflow_Temp, #ReflowConst
0AF8 75421E      70            mov Reflow_Time, #30  ;30 real value
0AFB 754396      71            mov Soak_Temp,   #SoakConst
0AFE 75444B      72            mov Soak_Time,   #75 ; 75 real value
0B01 1208DC      73            lcall Clear_Hex
0B04 754D0B      74            mov LCD_State, #11   ; poweroff state
0B07 754500      75            mov Target_Temp, #0
0B0A E59E        76            mov a, SWC
0B0C 30E1DD      77            jnb acc.1, PowerOff
0B0F D2AF        78            setb EA
0B11 D201        79            setb Finished   
0B13 120422      80            lcall init_lcd
0B16 020B19      81            ljmp PowerOn
0B19             82   ;Initial Set up  on reboot
0B19             83   PowerOn:
0B19 1209B0      84            lcall ADC_Init
0B1C 1209F5      85            lcall Initialize_Timer
0B1F             86            ;setb EA
0B1F             87            ;Turn off LED's
0B1F 75E800      88            mov LEDRA, #0
0B22 759500      89            mov LEDRB, #0
0B25 759E00      90            mov LEDRC, #0
0B28 75F800      91            mov LEDG, #0
0B2B 754D01      92            mov LCD_state, #1
0B2E D2CA        93            setb TR2
0B30 020B33      94            ljmp Idle       
0B33             95            
0B33             96   ;awaiting process loop
0B33             97   Idle:
0B33 754D01      98            mov LCD_state, #1
0B36 754500      99            mov Target_Temp, #0
0B39 C202       100            clr timing
0B3B D2A9       101            setb ET0
0B3D D2F9       102            setb LEDG.1
0B3F            103            ;Stop Timer
0B3F            104            ;set things while switch is up, return by flicking down
0B3F 20E948     105            jb SWA.1, Set_Reflow_Time
0B42 20EA37     106            jb SWA.2, Set_Reflow_Temp
0B45 20EB23     107            jb SWA.3, Set_Soak_Time
0B48 20EC12     108            jb SWA.4, Set_Soak_Temp
0B4B 20F9E5     109            jb Key.1, Idle
0B4E            110            ;ready to start process
0B4E 12091F     111            lcall beep
0B51 C200       112            clr Ready
0B53 C3         113            clr c
0B54 E543       114            mov a, Soak_Temp
0B56 941F       115            subb a, #31
0B58 F543       116            mov Soak_Temp, a
0B5A 020B98     117            ljmp Preheat_Soak
0B5D            118            
0B5D            119   ;------------------------------------------------------------------      
0B5D            120   ;Setting Times and Temperatures (Not Done)
0B5D            121   ;   -had thought maybe macro for time and temp, that takes bounds 
0B5D            122   ;   so the time or temp is within reason
0B5D            123   ;------------------------------------------------------------------
0B5D            124   Set_Soak_Temp:
0B5D 754D08     125            mov LCD_state, #8
0B60 120CDF     126            lcall Set_Soak_Temp_Relay
0B63 20ECF7     127            jb SWA.4, Set_Soak_Temp
0B66 1208DC     128            lcall clear_hex
0B69 80C8       129            sjmp Idle
0B6B            130   Set_Soak_Time:
0B6B 7597FF     131            mov HEX7, #0FFH
0B6E 754D05     132            mov LCD_state, #5
0B71 120D24     133            lcall Set_Soak_Time_Relay
0B74 20EBF4     134            jb SWA.3, Set_Soak_Time
0B77 1208DC     135            lcall clear_hex
0B7A 80B7       136            Sjmp Idle
0B7C            137   Set_Reflow_Temp:
0B7C 754D07     138                    mov LCD_state, #7
0B7F 120C9A     139            lcall Set_Reflow_Temp_Relay
0B82 20EAF7     140            jb SWA.2, Set_Reflow_Temp
0B85 1208DC     141            lcall clear_hex
0B88 80A9       142            Sjmp Idle
0B8A            143   Set_Reflow_Time:
0B8A 754D06     144                    mov LCD_state, #6
0B8D 120C55     145            lcall Set_Reflow_Time_Relay     
0B90 20E9F7     146            jb SWA.1, Set_Reflow_Time
0B93 1208DC     147            lcall clear_hex
0B96 809B       148            Sjmp Idle
0B98            149   
0B98            150   ;------------------------------------------------------------------      
0B98            151   ;Actual Progression Through Phases
0B98            152   ;PRE-HEAT
0B98            153   ;SOAK
0B98            154   ;PRE-HEAT
0B98            155   ;REFLOW
0B98            156   ;COOLING
0B98            157   ;DONE
0B98            158   ;------------------------------------------------------------------
0B98            159   
0B98            160   ;Waits for temperature to get above soak temp
0B98            161   Preheat_Soak:
0B98 300403     162            jnb killBit, Preheat_Soak_
0B9B 020AEC     163            ljmp PowerOff
0B9E            164   Preheat_Soak_:
0B9E 754D02     165            mov LCD_state, #2 ; preheat
0BA1 D2FA       166            setb LEDG.2
0BA3 854345     167            mov Target_Temp, Soak_Temp
0BA6 3000EF     168            jnb Ready, PreHeat_Soak
0BA9 C200       169            clr Ready
0BAB 7D2D       170            mov R5, #45
0BAD 120912     171   X6:      lcall Wait
0BB0 300403     172            jnb killBit, X6_
0BB3 020AEC     173            ljmp PowerOff
0BB6            174   X6_:
0BB6 B2ED       175            cpl LEDRA.5
0BB8 DDF3       176            djnz R5, X6
0BBA E545       177            mov a, Target_Temp
0BBC 241F       178            Add a, #31
0BBE F545       179            mov Target_Temp, a
0BC0            180   Preheat_Soak0:
0BC0 300403     181            jnb killBit, Preheat_Soak0_
0BC3 020AEC     182            ljmp PowerOff
0BC6            183   Preheat_Soak0_:  
0BC6 3000F7     184            jnb Ready, PreHeat_Soak0
0BC9 12091F     185            lcall beep
0BCC            186   ;Initialize for holding constant
0BCC D2FB       187            setb LEDG.3
0BCE 854437     188            mov seconds, Soak_Time+0
0BD1 754D04     189            mov LCD_state, #4 ;soak 
0BD4 C201       190            clr finished     
0BD6            191   WaitSoak:
0BD6 300403     192            jnb killBit, WaitSoak_
0BD9 020AEC     193            ljmp PowerOff
0BDC            194   WaitSoak_:
0BDC 1208E9     195            lcall display_time
0BDF E537       196            mov a, seconds
0BE1 B40703     197            cjne a, #7, NotFive
0BE4 854145     198            mov target_Temp, Reflow_Temp
0BE7            199   NotFive:         
0BE7 3001EC     200            jnb finished, WaitSoak
0BEA            201   
0BEA            202   ;Initilize for ramp to Reflow
0BEA            203            
0BEA 1208DC     204            lcall clear_hex
0BED D2FC       205            setb LEDG.4
0BEF 12091F     206            lcall beep
0BF2 754D02     207            mov LCD_state, #2 ; preheat
0BF5 C200       208            clr ready
0BF7            209            
0BF7            210   Preheat_Reflow:
0BF7 300403     211            jnb killBit, Preheat_Reflow_
0BFA 020AEC     212            ljmp PowerOff
0BFD            213   Preheat_Reflow_:
0BFD 3000F7     214            jnb Ready, PreHeat_Reflow
0C00 12091F     215            lcall beep
0C03            216   ;Pass Reflow Time, wait for time to expire       
0C03 D2FD       217            setb LEDG.5
0C05 854237     218            mov seconds, Reflow_Time+0
0C08 754D03     219            mov LCD_state, #3 ;reflow
0C0B C201       220            clr finished
0C0D            221   WaitReflow:
0C0D 300403     222            jnb killBit, WaitReflow_
0C10 020AEC     223            ljmp PowerOff
0C13            224   WaitReflow_:
0C13 1208E9     225            lcall display_time      
0C16 3001F4     226            jnb finished, WaitReflow
0C19 1208DC     227            lcall clear_hex
0C1C 12091F     228            lcall beep
0C1F            229   ;Process Finished, Wait for it to cool
0C1F            230   Cooling:
0C1F 754D09     231            mov LCD_state, #9
0C22 75453C     232            mov Target_Temp, #CoolConst
0C25 D200       233            setb ready      
0C27            234   WaitCool:
0C27 300403     235            jnb killBit, WaitCool_
0C2A 020AEC     236            ljmp PowerOff
0C2D            237   WaitCool_:       
0C2D D2FE       238            setb LEDG.6
0C2F            239            ;wait for temp to dip below 60 Celcius (Cool Constant)
0C2F 2000F5     240            jb Ready, WaitCool
0C32            241            ;set temp to zero
0C32 754500     242            mov Target_Temp, #0
0C35            243            ;triple beep
0C35 12091F     244            lcall beep
0C38 120912     245            lcall wait
0C3B 12091F     246            lcall beep
0C3E 120912     247            lcall wait
0C41 12091F     248            lcall beep
0C44            249   ;Cool Enough (just waits PB)
0C44 754D0A     250                    mov LCD_state, #10      
0C47            251   Done:
0C47 D2FF       252            setb LEDG.7
0C49 20F9FB     253            jb Key.1, Done
0C4C 30F9FD     254            jnb Key.1, $
0C4F 75F800     255            mov LEDG, #0
0C52 020B33     256            ljmp Idle
0C55            257                    
0C55            258   Set_Reflow_Time_Relay:
0C55            259            Inc_Reflow_Time:
0C55 E542       259                    mov A, Reflow_Time
0C57            259            
0C57 20FA08     259                    jb KEY.2, Dec_Reflow_Time
0C5A 30FAFD     259            jnb KEY.2, $
0C5D 04         259                    inc A
0C5E B42E0C     259                    cjne A, #46, Done_Reflow_Time
0C61 14         259                    dec A
0C62            259            Dec_Reflow_Time:        
0C62 20FB08     259                jb KEY.3, Done_Reflow_Time
0C65 30FBFD     259                jnb KEY.3, $
0C68 14         259                    dec A
0C69 B41D01     259                cjne A, #29, Done_Reflow_Time
0C6C 04         259           inc A
0C6D            259            Done_Reflow_Time:
0C6D F542       259                    mov Reflow_Time, A
0C6F 85423A     260            mov x, Reflow_Time
0C72 753B00     260            mov x+1, #0
0C75 12001E     260            lcall hex2bcd
0C78 9009EB     260            mov dptr, #myLUT
0C7B            260            ; Display Digit 0
0C7B E53E       260       mov A, bcd+0
0C7D 540F       260       anl a, #0fh
0C7F 93         260       movc A, @A+dptr
0C80 F58E       260       mov HEX4, A
0C82            260            ; Display Digit 1
0C82 E53E       260       mov A, bcd+0
0C84 C4         260       swap a
0C85 540F       260       anl a, #0fh
0C87 93         260       movc A, @A+dptr
0C88 F58F       260       mov HEX5, A    
0C8A            260       ; Display Digit 2
0C8A E53F       260       mov A, bcd+1
0C8C 540F       260       anl a, #0fh
0C8E 6006       260       jz Ender_Reflow_Time
0C90 93         260       movc A, @A+dptr
0C91 F596       260       mov HEX6, A
0C93 020C99     260       jmp Exit_Reflow_Time
0C96            260       Ender_Reflow_Time:
0C96 7596FF     260       mov HEX6, #0FFH
0C99            260       Exit_Reflow_Time:
0C99 22         261            ret     
0C9A            262   Set_Reflow_Temp_Relay:
0C9A            263            Inc_Reflow_Temp:
0C9A E541       263                    mov A, Reflow_Temp
0C9C            263            
0C9C 20FA08     263                    jb KEY.2, Dec_Reflow_Temp
0C9F 30FAFD     263            jnb KEY.2, $
0CA2 04         263                    inc A
0CA3 B4E70C     263                    cjne A, #231, Done_Reflow_Temp
0CA6 14         263                    dec A
0CA7            263            Dec_Reflow_Temp:        
0CA7 20FB08     263                jb KEY.3, Done_Reflow_Temp
0CAA 30FBFD     263                jnb KEY.3, $
0CAD 14         263                    dec A
0CAE B4C701     263                cjne A, #199, Done_Reflow_Temp
0CB1 04         263           inc A
0CB2            263            Done_Reflow_Temp:
0CB2 F541       263                    mov Reflow_Temp, A
0CB4 85413A     264            mov x, Reflow_Temp
0CB7 753B00     264            mov x+1, #0
0CBA 12001E     264            lcall hex2bcd
0CBD 9009EB     264            mov dptr, #myLUT
0CC0            264            ; Display Digit 0
0CC0 E53E       264       mov A, bcd+0
0CC2 540F       264       anl a, #0fh
0CC4 93         264       movc A, @A+dptr
0CC5 F58E       264       mov HEX4, A
0CC7            264            ; Display Digit 1
0CC7 E53E       264       mov A, bcd+0
0CC9 C4         264       swap a
0CCA 540F       264       anl a, #0fh
0CCC 93         264       movc A, @A+dptr
0CCD F58F       264       mov HEX5, A    
0CCF            264       ; Display Digit 2
0CCF E53F       264       mov A, bcd+1
0CD1 540F       264       anl a, #0fh
0CD3 6006       264       jz Ender_Reflow_Temp
0CD5 93         264       movc A, @A+dptr
0CD6 F596       264       mov HEX6, A
0CD8 020CDE     264       jmp Exit_Reflow_Temp
0CDB            264       Ender_Reflow_Temp:
0CDB 7596FF     264       mov HEX6, #0FFH
0CDE            264       Exit_Reflow_Temp:
0CDE 22         265            ret     
0CDF            266   Set_Soak_Temp_Relay:     
0CDF            267            Inc_Soak_Temp:
0CDF E543       267                    mov A, Soak_Temp
0CE1            267            
0CE1 20FA08     267                    jb KEY.2, Dec_Soak_Temp
0CE4 30FAFD     267            jnb KEY.2, $
0CE7 04         267                    inc A
0CE8 B4A50C     267                    cjne A, #165, Done_Soak_Temp
0CEB 14         267                    dec A
0CEC            267            Dec_Soak_Temp:  
0CEC 20FB08     267                jb KEY.3, Done_Soak_Temp
0CEF 30FBFD     267                jnb KEY.3, $
0CF2 14         267                    dec A
0CF3 B48601     267                cjne A, #134, Done_Soak_Temp
0CF6 04         267           inc A
0CF7            267            Done_Soak_Temp:
0CF7 F543       267                    mov Soak_Temp, A
0CF9 85433A     268            mov x, Soak_Temp
0CFC 753B00     268            mov x+1, #0
0CFF 12001E     268            lcall hex2bcd
0D02 9009EB     268            mov dptr, #myLUT
0D05            268            ; Display Digit 0
0D05 E53E       268       mov A, bcd+0
0D07 540F       268       anl a, #0fh
0D09 93         268       movc A, @A+dptr
0D0A F58E       268       mov HEX4, A
0D0C            268            ; Display Digit 1
0D0C E53E       268       mov A, bcd+0
0D0E C4         268       swap a
0D0F 540F       268       anl a, #0fh
0D11 93         268       movc A, @A+dptr
0D12 F58F       268       mov HEX5, A    
0D14            268       ; Display Digit 2
0D14 E53F       268       mov A, bcd+1
0D16 540F       268       anl a, #0fh
0D18 6006       268       jz Ender_Soak_Temp
0D1A 93         268       movc A, @A+dptr
0D1B F596       268       mov HEX6, A
0D1D 020D23     268       jmp Exit_Soak_Temp
0D20            268       Ender_Soak_Temp:
0D20 7596FF     268       mov HEX6, #0FFH
0D23            268       Exit_Soak_Temp:
0D23 22         269            ret     
0D24            270   Set_Soak_Time_Relay:
0D24            271            Inc_Soak_Time:
0D24 E544       271                    mov A, Soak_Time
0D26            271            
0D26 20FA08     271                    jb KEY.2, Dec_Soak_Time
0D29 30FAFD     271            jnb KEY.2, $
0D2C 04         271                    inc A
0D2D B45B0C     271                    cjne A, #91, Done_Soak_Time
0D30 14         271                    dec A
0D31            271            Dec_Soak_Time:  
0D31 20FB08     271                jb KEY.3, Done_Soak_Time
0D34 30FBFD     271                jnb KEY.3, $
0D37 14         271                    dec A
0D38 B43B01     271                cjne A, #59, Done_Soak_Time
0D3B 04         271           inc A
0D3C            271            Done_Soak_Time:
0D3C F544       271                    mov Soak_Time, A
0D3E 85443A     272            mov x, Soak_Time
0D41 753B00     272            mov x+1, #0
0D44 12001E     272            lcall hex2bcd
0D47 9009EB     272            mov dptr, #myLUT
0D4A            272            ; Display Digit 0
0D4A E53E       272       mov A, bcd+0
0D4C 540F       272       anl a, #0fh
0D4E 93         272       movc A, @A+dptr
0D4F F58E       272       mov HEX4, A
0D51            272            ; Display Digit 1
0D51 E53E       272       mov A, bcd+0
0D53 C4         272       swap a
0D54 540F       272       anl a, #0fh
0D56 93         272       movc A, @A+dptr
0D57 F58F       272       mov HEX5, A    
0D59            272       ; Display Digit 2
0D59 E53F       272       mov A, bcd+1
0D5B 540F       272       anl a, #0fh
0D5D 6005       272       jz Ender_Soak_Time
0D5F 93         272       movc A, @A+dptr
0D60 F596       272       mov HEX6, A
0D62 020D67     272       jmp Exit_Soak_Time
0D65            272       Ender_Soak_Time:
0D65 7596FF     272       mov HEX6, #0FFH
0D68            272       Exit_Soak_Time:
0D68 22         273            ret
0D69            274                    
0D69            275   END
