                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   org 0000H
0000              3            ;mov SP, #7FH
0000 020AEC       4            ljmp PowerOff
000B              5   org 000BH
000B 020A2A       6            ljmp Interupt0
001B              7   org 001BH
001B 020A21       8            ljmp Interupt1
001E              9   
001E             10   CoolConst   EQU 60
001E             11   ReflowConst EQU 220
001E             12   SoakConst   EQU 150
001E             13   CSEG
001E             14   
                 -1   $include(math16.asm)
                428   $LIST
                 -1   $include(LCDlib.asm)
01F8              1   ;This is a library with LCD functions 
01F8              2   ;
01F8              3   
01F8              4   
01F8              5   
01F8              6   
01F8              7   
                 61   $LIST
03D8             63   
                661   $LIST
08DC            663   
08DC            664            
                 -1   $include(DisplayandMacros.asm)	
08DC              1   ;
08DC              2   ;Functions for displaying the time using seconds
08DC              3   ;                   for displaying the oven temp
08DC              4   ;little useful functions like wait
08DC              5   ; Beep to make short buzzer pulse                        
08DC              6   
08DC              7   
                  8   Display_Any MAC
                  9   	mov x, %0
                 10   	mov x+1, #0
                 11   	lcall hex2bcd
                 12   	mov dptr, #myLUT
                 13   	; Display Digit 0
                 14       mov A, bcd+0
                 15       anl a, #0fh
                 16       movc A, @A+dptr
                 17       mov HEX4, A
                 18   	; Display Digit 1
                 19       mov A, bcd+0
                 20       swap a
                 21       anl a, #0fh
                 22       movc A, @A+dptr
                 23       mov HEX5, A    
                 24       ; Display Digit 2
                 25       mov A, bcd+1
                 26       anl a, #0fh
                 27       jz Ender_%0
                 28       movc A, @A+dptr
                 29       mov HEX6, A
                 30       jmp Exit_%0
                 31       Ender_%0:
                 32       mov HEX6, #0FFH
                 33       Exit_%0:
                 34   endmac
08DC             35   
08DC             36   clear_hex:
08DC C0E0        37            push ACC
08DE 74FF        38            mov A, #0FFH
08E0 F58E        39            mov HEX4, A
08E2 F58F        40            mov HEX5, A
08E4 F596        41            mov HEX6, A
08E6 D0E0        42            pop ACC
08E8 22          43            ret
08E9             44   display_Time:
08E9 85373A      45            mov x, seconds
08EC 753B00      46            mov x+1, #0
08EF 12001E      47            lcall hex2bcd
08F2 9009EB      48            mov dptr, #myLUT
08F5             49            ; Display Digit 0
08F5 E53E        50       mov A, bcd+0
08F7 540F        51       anl a, #0fh
08F9 93          52       movc A, @A+dptr
08FA F58E        53       mov HEX4, A
08FC             54            ; Display Digit 1
08FC E53E        55       mov A, bcd+0
08FE C4          56       swap a
08FF 540F        57       anl a, #0fh
0901 93          58       movc A, @A+dptr
0902 F58F        59       mov HEX5, A    
0904             60       ; Display Digit 2
0904 E53F        61       mov A, bcd+1
0906 540F        62       anl a, #0fh
0908 6004        63       jz X7
090A 93          64       movc A, @A+dptr
090B F596        65       mov HEX6, A
090D 22          66       ret   
090E             67   X7:
090E 7596FF      68       mov HEX6, #0xFF
0911 22          69       ret
0912             70     
0912             71   Wait:
0912 7B64        72            mov R3, #100
0914 7AFA        73   L3:      mov R2, #250
0916 79FA        74   L2:      mov R1, #250
0918 D9FE        75   L1: djnz R1, L1
091A DAFA        76            djnz R2, L2
091C DBF6        77            djnz R3, L3
091E 22          78            ret             
091F             79   Beep:
091F D2AB        80            setb ET1
0921 120912      81            lcall wait
0924 C2AB        82            clr Et1
0926 22          83            ret
0927             84   
0927             85   display_Temp:
0927 85463A      86            mov x, Oven_Temp
092A 753B00      87            mov x+1, #0
092D 12001E      88            lcall hex2bcd
0930 9009EB      89            mov dptr, #myLUT
0933             90            ; Display Digit 0
0933 E53E        91       mov A, bcd+0
0935 540F        92       anl a, #0fh
0937 93          93       movc A, @A+dptr
0938 F591        94       mov HEX0, A
093A             95            ; Display Digit 1
093A E53E        96       mov A, bcd+0
093C C4          97       swap a
093D 540F        98       anl a, #0fh
093F 93          99       movc A, @A+dptr
0940 F592       100       mov HEX1, A
0942            101       ; Display Digit 2
0942 E53F       102       mov A, bcd+1
0944 540F       103       anl a, #0fh
0946 93         104       movc A, @A+dptr
0947 F593       105       mov HEX2, A  
0949 22         106       ret 
094A            107   
                108   Set_Any MAC
                109   	Inc_%0:
                110   		mov A, %0
                111   	
                112   		jb KEY.2, Dec_%0
                113       	jnb KEY.2, $
                114   		inc A
                115   		cjne A, %2, Done_%0
                116   		dec A
                117   	Dec_%0:	
                118      	    jb KEY.3, Done_%0
                119      	    jnb KEY.3, $
                120   		dec A
                121   	    cjne A, %1, Done_%0
                122           inc A
                123   	Done_%0:
                124   		mov %0, A
                125   endmac
094A            126   
094A            127   END      
                 -1   $include(adc_functions.asm)
                 -1   $include(HeatingandTimer.asm)
09EB              1   XTAL           EQU 33333333                     ;Clock Frequency
09EB              2   FREQ           EQU 100                          
09EB              3   HERTZ          EQU 2000                         ;Buzzer Frequency
09EB              4   BAUD                EQU 115200                       ;Baud Rate
09EB              5   T2LOAD              EQU 65536-(XTAL/(32*BAUD))
09EB              6   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
09EB              7   BUZZER_RELOAD  EQU 65538-(XTAL/(12*HERTZ))       
09EB              8   TURNONOVEN     EQU P3.4                         ;Controls oven
09EB              9   BUZZER         EQU P0.2                          ; buzzer pin
09EB             10   SERIALRATE     EQU 10                            ; Readings sent to comp per second
09EB             11   
09EB             12   myLUT:
09EB C0F9A4B0    13       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
09F0 9282F880    14       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
09F5             15   ;------------------------------
09F5             16   ; Set up timers, 
09F5             17   ; Does not start them or enable INT
09F5             18   ;------------------------------
09F5             19   Initialize_Timer:
09F5 758911      20            mov TMOD,  #00010001B ; 16-bit timers
09F8 C28C        21            clr TR0
09FA C28E        22            clr TR1
09FC C28D        23            clr TF0
09FE C28F        24            clr TF1
0A00 C2CA        25            clr TR2 ; Disable timer 2
0A02 75C830      26            mov T2CON, #30H ; RCLK=1, TCLK=1 
0A05 75CBFF      27            mov RCAP2H, #high(T2LOAD)  
0A08 75CAF7      28            mov RCAP2L, #low(T2LOAD)
0A0B D2CA        29            setb TR2 ; Enable timer 2
0A0D 759852      30            mov SCON, #52H
0A10 758C93      31       mov TH0, #high(TIMER0_RELOAD)
0A13 758A81      32       mov TL0, #low(TIMER0_RELOAD)
0A16 758DFA      33       mov TH1, #high(BUZZER_RELOAD)
0A19 758B96      34       mov TL1, #low(BUZZER_RELOAD)
0A1C D28C        35       setb TR0
0A1E D28E        36       Setb TR1
0A20 22          37       ret
0A21             38   ;Buzzer Noise    
0A21             39   Interupt1:
0A21 758DFA      40            mov TH1, #high(BUZZER_RELOAD)
0A24 758B96      41       mov TL1, #low(BUZZER_RELOAD)
0A27 B282        42       cpl BUZZER
0A29 32          43            reti    
0A2A             44    
0A2A             45   
0A2A             46         
0A2A             47   ;--------------------------------
0A2A             48   ;Decrements Timer Every 1 second
0A2A             49   ;Checks Oven Temperature ever 1s
0A2A             50   ;--------------------------------
0A2A             51   Interupt0:    
0A2A             52       ; Reload the timer
0A2A 758C93      53       mov TH0, #high(TIMER0_RELOAD)
0A2D 758A81      54       mov TL0, #low(TIMER0_RELOAD)
0A30             55       ; Save used register into the stack
0A30 C0D0        56       push psw
0A32 C0E0        57       push acc
0A34 C083        58       push dph
0A36 C082        59       push dpl
0A38             60       
0A38 E59E        61       mov A, SWC
0A3A 20E102      62       jb ACC.1, Continue
0A3D D204        63       setb killBit 
0A3F             64   Continue:    
0A3F             65            ; Increment the counter and check if a second has passed
0A3F 0535        66       inc count10ms
0A41 E535        67       mov a, count10ms 
0A43 B4643D      68       cjne A, #100, Return_int
0A46 753500      69       mov count10ms, #0
0A49             70       ;send the info through serial port
0A49             71       
0A49 12094A      72            lcall room_convert
0A4C F8          72            mov R0, a
0A4D 88F0        72            mov b, R0
0A4F 12097F      72            lcall oven_convert
0A52 25F0        72            add a, b
0A54 F546        72            mov Oven_Temp, a
0A56             73       ;lcall temp_display 
0A56 120520      74       lcall State_disp
0A59 120A94      75       lcall SendTemp
0A5C             76       
0A5C             77       ;lcall display_temp
0A5C             78       ;second has passed
0A5C             79       
0A5C             80       ;checks if oven is greater or equal to target (can be moved to adjust rate)
0A5C C3          81       clr c
0A5D E545        82       mov a, Target_Temp
0A5F 9546        83       Subb a, Oven_Temp        
0A61 400A        84       jc NoHeat
0A63 6008        85       jz NoHeat
0A65             86       ;activate oven
0A65 C2B4        87       clr TurnOnOven   
0A67 C200        88       clr Ready
0A69 D2E8        89       setb LEDRA.0
0A6B 8006        90       sjmp Heat
0A6D             91   NoHeat:    
0A6D D200        92            setb Ready  
0A6F C2E8        93            clr LEDRA.0
0A71             94            ;turn off oven
0A71 D2B4        95            setb TurnOnOven
0A73             96   Heat:
0A73             97            ;if timer is active    
0A73 20010D      98            jb finished, Return_int
0A76 E537        99       mov a, seconds
0A78 14         100       dec a
0A79 F537       101       mov seconds, a
0A7B B40005     102       cjne A, #00, Return_int ;FFH is -1 in two's complement
0A7E 753700     103       mov seconds, #00
0A81 D201       104       setb finished
0A83            105   Return_int:
0A83 D082       106            pop dpl
0A85 D083       107       pop dph
0A87 D0E0       108       pop acc
0A89 D0D0       109       pop psw    
0A8B 32         110            reti
0A8C            111      
0A8C            112   end
                 -1   $include(serial.asm)
0A8C              1   putchar:
0A8C 3099FD       2       JNB TI, putchar
0A8F C299         3       CLR TI
0A91 F599         4       MOV SBUF, a
0A93 22           5       RET
0A94              6   SendTemp:
0A94 C0E0         7            push acc
0A96 AF3A         8            mov R7, x
0A98              9            ;Sends the oven's temperature
0A98 85463A      10            mov x, Oven_Temp
0A9B 753B00      11            mov x+1, #0
0A9E 12001E      12            lcall Hex2Bcd
0AA1 E53F        13            mov A, bcd+1
0AA3 540F        14       anl a, #0fh
0AA5 2430        15       add a, #48  
0AA7 120A8C      16       lcall putchar         
0AAA E53E        17            mov A, bcd+0
0AAC C4          18            swap a
0AAD 540F        19       anl a, #0fh
0AAF 2430        20       add a, #48
0AB1 120A8C      21       lcall putchar
0AB4 E53E        22       mov A, bcd+0
0AB6 540F        23       anl a, #0fh
0AB8 2430        24       add a, #48
0ABA 120A8C      25       lcall putchar
0ABD             26     
0ABD             27            ;Sends the goal temperature
0ABD 85453A      28            mov x, Target_Temp
0AC0 753B00      29            mov x+1, #0
0AC3 12001E      30            lcall Hex2Bcd
0AC6 E53F        31            mov A, bcd+1
0AC8 540F        32       anl a, #0fh
0ACA 2430        33       add a, #48  
0ACC 120A8C      34       lcall putchar         
0ACF E53E        35            mov A, bcd+0
0AD1 C4          36            swap a
0AD2 540F        37       anl a, #0fh
0AD4 2430        38       add a, #48
0AD6 120A8C      39       lcall putchar
0AD9 E53E        40       mov A, bcd+0
0ADB 540F        41       anl a, #0fh
0ADD 2430        42       add a, #48
0ADF 120A8C      43       lcall putchar
0AE2 740A        44       mov a, #'\n'
0AE4 120A8C      45       lcall putchar
0AE7 8F3A        46       mov x, R7
0AE9 D0E0        47       pop acc
0AEB 22          48            ret     
0AEC             49            
0AEC             50   END      
0AEC             21                    
0030             22   DSEG at 30H
0030             23            ;ADC STUFF
0030             24            ADC_out_buffer: ds 1
0031             25            ADC_in_buffer: ds 2
0033             26            last_reading: ds 2
0035             27            ;Overflow Counter
0035             28            count10ms: ds 1
0036             29            count5ms: ds 1
0037             30            ;Universal for time
0037             31            seconds:   ds 1
0038             32            minutes:   ds 1
0039             33            hours:     ds 1
003A             34            ;math variables
003A             35            x:                 ds 2
003C             36            y:         ds 2
003E             37            bcd:       ds 3
0041             38            ;Oven Settables
0041             39            Reflow_Temp: Ds 1
0042             40            Reflow_Time: Ds 1
0043             41            Soak_Temp:   Ds 1
0044             42            Soak_Time:       Ds 1
0045             43            ;Universal for temp
0045             44            Target_Temp: Ds 1
0046             45            ;Enviroment
0046             46            Oven_Temp:   Ds 1
0047             47            ;LCD Variables
0047             48            ;LCD_Temperature: ds 1
0047             49            LCD: ds 3
004A             50            Thermo_cursor: DS 1
004B             51            Thermo_segment: DS 1
004C             52            Thermo_inc: ds 1
004D             53            LCD_state: ds 1
0000             54   BSEG
0000             55            ;booleans
0000             56            Ready:       Dbit 1
0001             57            Finished:    dbit 1
0002             58            Timing:      dbit 1
0003             59            mf:          dbit 1
0004             60            killBit:     dbit 1
0AEC             61   CSEG
0AEC             62   
0AEC             63   ;Stops Everything until switch 1 is turned back on (Not Done)
0AEC             64   PowerOff:
0AEC 75817F      65            mov SP, #7FH
0AEF 759AFF      66            mov P0MOD, #0xFF
0AF2 759DFF      67            mov P3MOD, #0xFF
0AF5             68            ;Turn off LED's
0AF5 75E800      69            mov LEDRA, #0
0AF8 759500      70            mov LEDRB, #0
0AFB 759E00      71            mov LEDRC, #0
0AFE             72            ;Reset standard times
0AFE 7541DC      73            mov Reflow_Temp, #ReflowConst
0B01 75421E      74            mov Reflow_Time, #30  ;30 real value
0B04 754396      75            mov Soak_Temp,   #SoakConst
0B07 75444B      76            mov Soak_Time,   #75 ; 75 real value
0B0A 1208DC      77            lcall Clear_Hex
0B0D 754D0B      78            mov LCD_State, #11   ; poweroff state
0B10 754500      79            mov Target_Temp, #0
0B13 E59E        80            mov a, SWC
0B15 30E1D4      81            jnb acc.1, PowerOff
0B18 C204        82            clr killBit
0B1A D2AF        83            setb EA
0B1C D201        84            setb Finished   
0B1E 120422      85            lcall init_lcd
0B21 020B24      86            ljmp PowerOn
0B24             87   ;Initial Set up  on reboot
0B24             88   PowerOn:
0B24 1209B0      89            lcall ADC_Init
0B27 1209F5      90            lcall Initialize_Timer
0B2A             91            ;setb EA
0B2A             92            ;Turn off LED's
0B2A 75F800      93            mov LEDG, #0
0B2D 754D01      94            mov LCD_state, #1
0B30 D2CA        95            setb TR2
0B32 020B35      96            ljmp Idle       
0B35             97            
0B35             98   ;awaiting process loop
0B35             99   Idle:
0B35 754D01     100            mov LCD_state, #1
0B38 754500     101            mov Target_Temp, #0
0B3B C202       102            clr timing
0B3D D2A9       103            setb ET0
0B3F D2F9       104            setb LEDG.1
0B41            105            ;Stop Timer
0B41            106            ;set things while switch is up, return by flicking down
0B41 20E954     107            jb SWA.1, Set_Reflow_Time
0B44 20EA43     108            jb SWA.2, Set_Reflow_Temp
0B47 20EB2D     109            jb SWA.3, Set_Soak_Time
0B4A 20EC1C     110            jb SWA.4, Set_Soak_Temp
0B4D 20049C     111            jb killBit, PowerOff 
0B50 20F9E2     112            jb Key.1, Idle
0B53 7446       113            mov A, #70
0B55 C3         114            clr c
0B56 9546       115            subb A, oven_temp
0B58 40DB       116            jc Idle
0B5A            117            ;ready to start process
0B5A 12091F     118            lcall beep
0B5D C200       119            clr Ready
0B5F C3         120            clr c
0B60 E543       121            mov a, Soak_Temp
0B62            122            ;How early to shut off heating to account for inertia (31)
0B62 941F       123            subb a, #31
0B64 F545       124            mov Target_Temp, a
0B66 020BA6     125            ljmp Preheat_Soak
0B69            126            
0B69            127   ;------------------------------------------------------------------      
0B69            128   ;Setting Times and Temperatures (Not Done)
0B69            129   ;   -had thought maybe macro for time and temp, that takes bounds 
0B69            130   ;   so the time or temp is within reason
0B69            131   ;------------------------------------------------------------------
0B69            132   Set_Soak_Temp:
0B69 754D08     133            mov LCD_state, #8
0B6C 120CEA     134            lcall Set_Soak_Temp_Relay
0B6F 20ECF7     135            jb SWA.4, Set_Soak_Temp
0B72 1208DC     136            lcall clear_hex
0B75 80BE       137            sjmp Idle
0B77            138   Set_Soak_Time:
0B77 7597FF     139            mov HEX7, #0FFH
0B7A 754D05     140            mov LCD_state, #5
0B7D 00         141            nop
0B7E 00         142            nop
0B7F 120D2E     143            lcall Set_Soak_Time_Relay
0B82 20EBF2     144            jb SWA.3, Set_Soak_Time
0B85 1208DC     145            lcall clear_hex
0B88 80AB       146            Sjmp Idle
0B8A            147   Set_Reflow_Temp:
0B8A 754D07     148            mov LCD_state, #7
0B8D 120CA5     149            lcall Set_Reflow_Temp_Relay
0B90 20EAF7     150            jb SWA.2, Set_Reflow_Temp
0B93 1208DC     151            lcall clear_hex
0B96 809D       152            Sjmp Idle
0B98            153   Set_Reflow_Time:
0B98 754D06     154            mov LCD_state, #6
0B9B 120C60     155            lcall Set_Reflow_Time_Relay     
0B9E 20E9F7     156            jb SWA.1, Set_Reflow_Time
0BA1 1208DC     157            lcall clear_hex
0BA4 808F       158            Sjmp Idle
0BA6            159   
0BA6            160   ;------------------------------------------------------------------      
0BA6            161   ;Actual Progression Through Phases
0BA6            162   ;PRE-HEAT
0BA6            163   ;SOAK
0BA6            164   ;PRE-HEAT
0BA6            165   ;REFLOW
0BA6            166   ;COOLING
0BA6            167   ;DONE
0BA6            168   ;------------------------------------------------------------------
0BA6            169   
0BA6            170   ;Waits for temperature to get above soak temp
0BA6            171   Preheat_Soak:
0BA6 300403     172            jnb killBit, Preheat_Soak_
0BA9 020AEC     173            ljmp PowerOff
0BAC            174   Preheat_Soak_:
0BAC 754D02     175            mov LCD_state, #2 ; preheat
0BAF D2FA       176            setb LEDG.2
0BB1 3000F2     177            jnb Ready, PreHeat_Soak
0BB4 C200       178            clr Ready
0BB6            179            ;Wait about 15 seconds to allow heat to plateau
0BB6 7D2D       180            mov R5, #45
0BB8 120912     181   X6:      lcall Wait
0BBB 300403     182            jnb killBit, X6_
0BBE 020AEC     183            ljmp PowerOff
0BC1            184   X6_:
0BC1 DDF5       185            djnz R5, X6
0BC3 E545       186            mov a, Target_Temp
0BC5 241F       187            Add a, #31
0BC7 F545       188            mov Target_Temp, a
0BC9            189   Preheat_Soak0:
0BC9 300403     190            jnb killBit, Preheat_Soak0_
0BCC 020AEC     191            ljmp PowerOff
0BCF            192   Preheat_Soak0_:  
0BCF C200       193            clr ready
0BD1 3000F5     194            jnb Ready, PreHeat_Soak0
0BD4 12091F     195            lcall beep
0BD7            196   ;Initialize for holding constant
0BD7 D2FB       197            setb LEDG.3
0BD9 854437     198            mov seconds, Soak_Time+0
0BDC 754D04     199            mov LCD_state, #4 ;soak 
0BDF C201       200            clr finished     
0BE1            201   WaitSoak:
0BE1 300403     202            jnb killBit, WaitSoak_
0BE4 020AEC     203            ljmp PowerOff
0BE7            204   WaitSoak_:
0BE7 1208E9     205            lcall display_time
0BEA E537       206            mov a, seconds
0BEC            207            ;Start ramping a bit before done soaking (takes awhile to take effect)
0BEC B40A03     208            cjne a, #10, NotFive
0BEF 854145     209            mov target_Temp, Reflow_Temp
0BF2            210   NotFive:         
0BF2 3001EC     211            jnb finished, WaitSoak
0BF5            212   
0BF5            213   ;Initilize for ramp to Reflow
0BF5            214            
0BF5 1208DC     215            lcall clear_hex
0BF8 D2FC       216            setb LEDG.4
0BFA 12091F     217            lcall beep
0BFD 754D02     218            mov LCD_state, #2 ; preheat
0C00 C200       219            clr ready
0C02            220            
0C02            221   Preheat_Reflow:
0C02 300403     222            jnb killBit, Preheat_Reflow_
0C05 020AEC     223            ljmp PowerOff
0C08            224   Preheat_Reflow_:
0C08 3000F7     225            jnb Ready, PreHeat_Reflow
0C0B 12091F     226            lcall beep
0C0E            227   ;Pass Reflow Time, wait for time to expire       
0C0E D2FD       228            setb LEDG.5
0C10 854237     229            mov seconds, Reflow_Time+0
0C13 754D03     230            mov LCD_state, #3 ;reflow
0C16 C201       231            clr finished
0C18            232   WaitReflow:
0C18 300403     233            jnb killBit, WaitReflow_
0C1B 020AEC     234            ljmp PowerOff
0C1E            235   WaitReflow_:
0C1E 1208E9     236            lcall display_time      
0C21 3001F4     237            jnb finished, WaitReflow
0C24 1208DC     238            lcall clear_hex
0C27 12091F     239            lcall beep
0C2A            240   ;Process Finished, Wait for it to cool
0C2A            241   Cooling:
0C2A 754D09     242            mov LCD_state, #9
0C2D 75453C     243            mov Target_Temp, #CoolConst
0C30 D200       244            setb ready      
0C32            245   WaitCool:
0C32 300403     246            jnb killBit, WaitCool_
0C35 020AEC     247            ljmp PowerOff
0C38            248   WaitCool_:       
0C38 D2FE       249            setb LEDG.6
0C3A            250            ;wait for temp to dip below 60 Celcius (Cool Constant)
0C3A 2000F5     251            jb Ready, WaitCool
0C3D            252            ;set temp to zero
0C3D 754500     253            mov Target_Temp, #0
0C40            254            ;triple beep
0C40 12091F     255            lcall beep
0C43 120912     256            lcall wait
0C46 12091F     257            lcall beep
0C49 120912     258            lcall wait
0C4C 12091F     259            lcall beep
0C4F            260   ;Cool Enough (just waits PB)
0C4F 754D0A     261                    mov LCD_state, #10      
0C52            262   Done:
0C52 D2FF       263            setb LEDG.7
0C54 20F9FB     264            jb Key.1, Done
0C57 30F9FD     265            jnb Key.1, $
0C5A 75F800     266            mov LEDG, #0
0C5D 020B35     267            ljmp Idle
0C60            268                    
0C60            269   Set_Reflow_Time_Relay:
0C60            270            Inc_Reflow_Time:
0C60 E542       270                    mov A, Reflow_Time
0C62            270            
0C62 20FA08     270                    jb KEY.2, Dec_Reflow_Time
0C65 30FAFD     270            jnb KEY.2, $
0C68 04         270                    inc A
0C69 B42E0C     270                    cjne A, #46, Done_Reflow_Time
0C6C 14         270                    dec A
0C6D            270            Dec_Reflow_Time:        
0C6D 20FB08     270                jb KEY.3, Done_Reflow_Time
0C70 30FBFD     270                jnb KEY.3, $
0C73 14         270                    dec A
0C74 B41D01     270                cjne A, #29, Done_Reflow_Time
0C77 04         270           inc A
0C78            270            Done_Reflow_Time:
0C78 F542       270                    mov Reflow_Time, A
0C7A 85423A     271            mov x, Reflow_Time
0C7D 753B00     271            mov x+1, #0
0C80 12001E     271            lcall hex2bcd
0C83 9009EB     271            mov dptr, #myLUT
0C86            271            ; Display Digit 0
0C86 E53E       271       mov A, bcd+0
0C88 540F       271       anl a, #0fh
0C8A 93         271       movc A, @A+dptr
0C8B F58E       271       mov HEX4, A
0C8D            271            ; Display Digit 1
0C8D E53E       271       mov A, bcd+0
0C8F C4         271       swap a
0C90 540F       271       anl a, #0fh
0C92 93         271       movc A, @A+dptr
0C93 F58F       271       mov HEX5, A    
0C95            271       ; Display Digit 2
0C95 E53F       271       mov A, bcd+1
0C97 540F       271       anl a, #0fh
0C99 6006       271       jz Ender_Reflow_Time
0C9B 93         271       movc A, @A+dptr
0C9C F596       271       mov HEX6, A
0C9E 020CA4     271       jmp Exit_Reflow_Time
0CA1            271       Ender_Reflow_Time:
0CA1 7596FF     271       mov HEX6, #0FFH
0CA4            271       Exit_Reflow_Time:
0CA4 22         272            ret     
0CA5            273   Set_Reflow_Temp_Relay:
0CA5            274            Inc_Reflow_Temp:
0CA5 E541       274                    mov A, Reflow_Temp
0CA7            274            
0CA7 20FA08     274                    jb KEY.2, Dec_Reflow_Temp
0CAA 30FAFD     274            jnb KEY.2, $
0CAD 04         274                    inc A
0CAE B4E70C     274                    cjne A, #231, Done_Reflow_Temp
0CB1 14         274                    dec A
0CB2            274            Dec_Reflow_Temp:        
0CB2 20FB08     274                jb KEY.3, Done_Reflow_Temp
0CB5 30FBFD     274                jnb KEY.3, $
0CB8 14         274                    dec A
0CB9 B4C701     274                cjne A, #199, Done_Reflow_Temp
0CBC 04         274           inc A
0CBD            274            Done_Reflow_Temp:
0CBD F541       274                    mov Reflow_Temp, A
0CBF 85413A     275            mov x, Reflow_Temp
0CC2 753B00     275            mov x+1, #0
0CC5 12001E     275            lcall hex2bcd
0CC8 9009EB     275            mov dptr, #myLUT
0CCB            275            ; Display Digit 0
0CCB E53E       275       mov A, bcd+0
0CCD 540F       275       anl a, #0fh
0CCF 93         275       movc A, @A+dptr
0CD0 F58E       275       mov HEX4, A
0CD2            275            ; Display Digit 1
0CD2 E53E       275       mov A, bcd+0
0CD4 C4         275       swap a
0CD5 540F       275       anl a, #0fh
0CD7 93         275       movc A, @A+dptr
0CD8 F58F       275       mov HEX5, A    
0CDA            275       ; Display Digit 2
0CDA E53F       275       mov A, bcd+1
0CDC 540F       275       anl a, #0fh
0CDE 6006       275       jz Ender_Reflow_Temp
0CE0 93         275       movc A, @A+dptr
0CE1 F596       275       mov HEX6, A
0CE3 020CE9     275       jmp Exit_Reflow_Temp
0CE6            275       Ender_Reflow_Temp:
0CE6 7596FF     275       mov HEX6, #0FFH
0CE9            275       Exit_Reflow_Temp:
0CE9 22         276            ret     
0CEA            277   Set_Soak_Temp_Relay:     
0CEA            278            Inc_Soak_Temp:
0CEA E543       278                    mov A, Soak_Temp
0CEC            278            
0CEC 20FA08     278                    jb KEY.2, Dec_Soak_Temp
0CEF 30FAFD     278            jnb KEY.2, $
0CF2 04         278                    inc A
0CF3 B4A50C     278                    cjne A, #165, Done_Soak_Temp
0CF6 14         278                    dec A
0CF7            278            Dec_Soak_Temp:  
0CF7 20FB08     278                jb KEY.3, Done_Soak_Temp
0CFA 30FBFD     278                jnb KEY.3, $
0CFD 14         278                    dec A
0CFE B48601     278                cjne A, #134, Done_Soak_Temp
0D01 04         278           inc A
0D02            278            Done_Soak_Temp:
0D02 F543       278                    mov Soak_Temp, A
0D04 85433A     279            mov x, Soak_Temp
0D07 753B00     279            mov x+1, #0
0D0A 12001E     279            lcall hex2bcd
0D0D 9009EB     279            mov dptr, #myLUT
0D10            279            ; Display Digit 0
0D10 E53E       279       mov A, bcd+0
0D12 540F       279       anl a, #0fh
0D14 93         279       movc A, @A+dptr
0D15 F58E       279       mov HEX4, A
0D17            279            ; Display Digit 1
0D17 E53E       279       mov A, bcd+0
0D19 C4         279       swap a
0D1A 540F       279       anl a, #0fh
0D1C 93         279       movc A, @A+dptr
0D1D F58F       279       mov HEX5, A    
0D1F            279       ; Display Digit 2
0D1F E53F       279       mov A, bcd+1
0D21 540F       279       anl a, #0fh
0D23 6005       279       jz Ender_Soak_Temp
0D25 93         279       movc A, @A+dptr
0D26 F596       279       mov HEX6, A
0D28 020D2D     279       jmp Exit_Soak_Temp
0D2B            279       Ender_Soak_Temp:
0D2B 7596FF     279       mov HEX6, #0FFH
0D2E            279       Exit_Soak_Temp:
0D2E 22         280            ret     
0D2F            281   Set_Soak_Time_Relay:
0D2F            282            Inc_Soak_Time:
0D2F E544       282                    mov A, Soak_Time
0D31            282            
0D31 20FA07     282                    jb KEY.2, Dec_Soak_Time
0D34 30FAFD     282            jnb KEY.2, $
0D37 04         282                    inc A
0D38 B45B0B     282                    cjne A, #91, Done_Soak_Time
0D3B 14         282                    dec A
0D3C            282            Dec_Soak_Time:  
0D3C 20FB07     282                jb KEY.3, Done_Soak_Time
0D3F 30FBFD     282                jnb KEY.3, $
0D42 14         282                    dec A
0D43 B43B00     282                cjne A, #59, Done_Soak_Time
0D46 04         282           inc A
0D47            282            Done_Soak_Time:
0D47 F544       282                    mov Soak_Time, A
0D49 85443A     283            mov x, Soak_Time
0D4C 753B00     283            mov x+1, #0
0D4F 12001E     283            lcall hex2bcd
0D52 9009EB     283            mov dptr, #myLUT
0D55            283            ; Display Digit 0
0D55 E53E       283       mov A, bcd+0
0D57 540F       283       anl a, #0fh
0D59 93         283       movc A, @A+dptr
0D5A F58E       283       mov HEX4, A
0D5C            283            ; Display Digit 1
0D5C E53E       283       mov A, bcd+0
0D5E C4         283       swap a
0D5F 540F       283       anl a, #0fh
0D61 93         283       movc A, @A+dptr
0D62 F58F       283       mov HEX5, A    
0D64            283       ; Display Digit 2
0D64 E53F       283       mov A, bcd+1
0D66 540F       283       anl a, #0fh
0D68 6005       283       jz Ender_Soak_Time
0D6A 93         283       movc A, @A+dptr
0D6B F596       283       mov HEX6, A
0D6D 020D72     283       jmp Exit_Soak_Time
0D70            283       Ender_Soak_Time:
0D70 7596FF     283       mov HEX6, #0FFH
0D73            283       Exit_Soak_Time:
0D73 7596FF     284            mov Hex6, #0xFF
0D76 22         285            ret
0D77            286                    
0D77            287   END
