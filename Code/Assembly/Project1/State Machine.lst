                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   org 0000H
0000 020318       3            ljmp PowerOff
000B              4   org 000BH
000B 0200B1       5            ljmp Interupt0
001B              6   org 001BH
001B 0200A8       7            ljmp Interupt1
001E              8   
001E              9   CoolConst   EQU 60
001E             10   ReflowConst EQU 220
001E             11   SoakConst   EQU 150
001E             12   
                 -1   $include(DisplayandMacros.asm)	
001E              1   ;
001E              2   ;Functions for displaying the time using seconds
001E              3   ;                   for displaying the oven temp
001E              4   ;little useful functions like wait
001E              5   ; Beep to make short buzzer pulse                        
001E              6   
001E              7   
001E              8   
001E              9   display_Time:
001E 853235      10            mov x, seconds
0021 753600      11            mov x+1, #0
0024 12013E      12            lcall hex2bcd
0027 900072      13            mov dptr, #myLUT
002A             14            ; Display Digit 0
002A E539        15       mov A, bcd+0
002C 540F        16       anl a, #0fh
002E 93          17       movc A, @A+dptr
002F F596        18       mov HEX6, A
0031             19            ; Display Digit 1
0031 E539        20       mov A, bcd+0
0033 C4          21       swap a
0034 540F        22       anl a, #0fh
0036 93          23       movc A, @A+dptr
0037 F597        24       mov HEX7, A    
0039 22          25       ret   
003A             26   display_Temp:
003A 854235      27            mov x, Oven_Temp
003D 753600      28            mov x+1, #0
0040 12013E      29            lcall hex2bcd
0043 900072      30            mov dptr, #myLUT
0046             31            ; Display Digit 0
0046 E539        32       mov A, bcd+0
0048 540F        33       anl a, #0fh
004A 93          34       movc A, @A+dptr
004B F591        35       mov HEX0, A
004D             36            ; Display Digit 1
004D E539        37       mov A, bcd+0
004F C4          38       swap a
0050 540F        39       anl a, #0fh
0052 93          40       movc A, @A+dptr
0053 F592        41       mov HEX1, A
0055             42       ; Display Digit 0
0055 E53A        43       mov A, bcd+1
0057 540F        44       anl a, #0fh
0059 93          45       movc A, @A+dptr
005A F593        46       mov HEX2, A  
005C 22          47       ret   
005D             48   Wait:
005D 7B64        49            mov R3, #100
005F 7AFA        50   L3:      mov R2, #250
0061 79FA        51   L2:      mov R1, #250
0063 D9FE        52   L1: djnz R1, L1
0065 DAFA        53            djnz R2, L2
0067 DBF6        54            djnz R3, L3
0069 22          55            ret             
006A             56   Beep:
006A D2AB        57            setb ET1
006C 12005D      58            lcall wait
006F C2AB        59            clr Et1
0071 22          60            ret
0072             61   END      
                 -1   $include(HeatingandTimer.asm)
0072              1   
0072              2   XTAL           EQU 33333333                     ;Clock Frequency
0072              3   FREQ           EQU 100                          
0072              4   HERTZ          EQU 2000                         ;Buzzer Frequency
0072              5   BAUD                EQU 115200                       ;Baud Rate
0072              6   T2LOAD              EQU 65536-(XTAL/(32*BAUD))
0072              7   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
0072              8   BUZZER_RELOAD  EQU 65538-(XTAL/(12*HERTZ))       
0072              9   TURNONOVEN     EQU P0.0                         ;Controls oven
0072             10   BUZZER         EQU P0.3                          ; buzzer pin
0072             11   SERIALRATE     EQU 10                            ; Readings sent to comp per second
0072             12   
0072             13   myLUT:
0072 C0F9A4B0    14       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
0077 9282F880    15       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
007C             16   ;------------------------------
007C             17   ; Set up timers, 
007C             18   ; Does not start them or enable INT
007C             19   ;------------------------------
007C             20   Initialize_Timer:
007C 758911      21            mov TMOD,  #00010001B ; 16-bit timers
007F C28C        22            clr TR0
0081 C28E        23            clr TR1
0083 C28D        24            clr TF0
0085 C28F        25            clr TF1
0087 C2CA        26            clr TR2 ; Disable timer 2
0089 75C830      27            mov T2CON, #30H ; RCLK=1, TCLK=1 
008C 75CBFF      28            mov RCAP2H, #high(T2LOAD)  
008F 75CAF7      29            mov RCAP2L, #low(T2LOAD)
0092 D2CA        30            setb TR2 ; Enable timer 2
0094 759852      31            mov SCON, #52H
0097 758C93      32       mov TH0, #high(TIMER0_RELOAD)
009A 758A81      33       mov TL0, #low(TIMER0_RELOAD)
009D 758DFA      34       mov TH1, #high(BUZZER_RELOAD)
00A0 758B96      35       mov TL1, #low(BUZZER_RELOAD)
00A3 D28C        36       setb TR0
00A5 D28E        37       Setb TR1
00A7 22          38       ret
00A8             39   ;Buzzer Noise    
00A8             40   Interupt1:
00A8 758DFA      41            mov TH1, #high(BUZZER_RELOAD)
00AB 758B96      42       mov TL1, #low(BUZZER_RELOAD)
00AE B283        43       cpl BUZZER
00B0 32          44            reti    
00B1             45    
00B1             46   
00B1             47         
00B1             48   ;--------------------------------
00B1             49   ;Decrements Timer Every 1 second
00B1             50   ;Checks Oven Temperature ever 1s
00B1             51   ;--------------------------------
00B1             52   Interupt0:    
00B1             53       ; Reload the timer
00B1 758C93      54       mov TH0, #high(TIMER0_RELOAD)
00B4 758A81      55       mov TL0, #low(TIMER0_RELOAD)
00B7             56       ; Save used register into the stack
00B7 C0D0        57       push psw
00B9 C0E0        58       push acc
00BB C083        59       push dph
00BD C082        60       push dpl
00BF 12003A      61            lcall display_temp
00C2 0531        62            inc count5ms
00C4 E531        63            mov a, count5ms
00C6 B40A06      64            cjne a, #SerialRate, NoSend
00C9 753100      65            mov count5ms, #0
00CC 120111      66       lcall SendTemp       
00CF             67   NoSend:          
00CF             68            ; Increment the counter and check if a second has passed
00CF 0530        69       inc count10ms
00D1 E530        70       mov a, count10ms 
00D3 B4642A      71       cjne A, #100, Return_int
00D6 753000      72       mov count10ms, #0 
00D9 C3          73       clr c
00DA             74       ;seconds has passed
00DA             75       
00DA             76       ;checks if oven is greater or equal to target (can be moved to adjust rate)
00DA E541        77       mov a, Target_Temp
00DC 9542        78       Subb a, Oven_Temp        
00DE 400A        79       jc NoHeat
00E0 6008        80       jz NoHeat
00E2             81       ;activate oven
00E2 D280        82       setb TurnOnOven
00E4             83   ;--------------------------------------------    
00E4 0542        84       inc Oven_Temp
00E6             85   ;-----------------------------------------------    
00E6 C200        86       clr Ready
00E8 8006        87       sjmp Heat
00EA             88   NoHeat:    
00EA D200        89            setb Ready  
00EC             90            ;turn off oven
00EC C280        91            clr TurnOnOven
00EE             92   ;-----------------------------------------       
00EE 1542        93       dec Oven_Temp
00F0             94   ;-------------------------------------------
00F0             95   Heat:
00F0             96            ;if timer is active    
00F0 20010D      97            jb finished, Return_int
00F3 E532        98       mov a, seconds
00F5 14          99       dec a
00F6 F532       100       mov seconds, a
00F8 B40005     101       cjne A, #00, Return_int ;FFH is -1 in two's complement
00FB 753200     102       mov seconds, #00
00FE D201       103       setb finished
0100            104   Return_int:
0100 D082       105            pop dpl
0102 D083       106       pop dph
0104 D0E0       107       pop acc
0106 D0D0       108       pop psw    
0108 32         109            reti
0109            110      
0109            111   end
                 -1   $include(serial.asm)
0109              1   putchar:
0109 3099FD       2       JNB TI, putchar
010C C299         3       CLR TI
010E F599         4       MOV SBUF, a
0110 22           5       RET
0111              6   SendTemp:
0111 854235       7            mov x, Oven_Temp
0114 12013E       8            lcall Hex2Bcd
0117 E53A         9            mov A, bcd+1
0119 540F        10       anl a, #0fh
011B 2430        11       add a, #48  
011D 120109      12       lcall putchar         
0120 E539        13            mov A, bcd+0
0122 C4          14            swap a
0123 540F        15       anl a, #0fh
0125 2430        16       add a, #48
0127 120109      17       lcall putchar
012A E539        18       mov A, bcd+0
012C 540F        19       anl a, #0fh
012E 2430        20       add a, #48
0130 120109      21       lcall putchar
0133 740A        22       mov a, #'\n'
0135 120109      23       lcall putchar
0138 740D        24       mov a, #'\r'
013A 120109      25       lcall putchar
013D 22          26            ret     
013E             27            
013E             28   END      
                 -1   $include(math16.asm)
                428   $LIST
0318             17                    
0030             18   DSEG at 30H
0030             19            ;Overflow Counter
0030             20            count10ms: ds 1
0031             21            count5ms: ds 1
0032             22            ;Universal for time
0032             23            seconds:   ds 1
0033             24            minutes:   ds 1
0034             25            hours:     ds 1
0035             26            ;math variables
0035             27            x:                 ds 2
0037             28            y:         ds 2
0039             29            bcd:       ds 4
003D             30            ;Oven Settables
003D             31            Reflow_Temp: Ds 1
003E             32            Reflow_Time: Ds 1
003F             33            Soak_Temp:   Ds 1
0040             34            Soak_Time:       Ds 1
0041             35            ;Universal for temp
0041             36            Target_Temp: Ds 1
0042             37            ;Enviroment
0042             38            Oven_Temp:   Ds 1
0000             39   BSEG
0000             40            ;booleans
0000             41            Ready:       Dbit 1
0001             42            Finished:    dbit 1
0002             43            Timing:      dbit 1
0003             44            mf:          dbit 1
0318             45   CSEG
0318             46   
0318             47   ;Stops Everything until switch 1 is turned back on (Not Done)
0318             48   PowerOff:
0318 759AFF      49            mov P0MOD, #0xFF
031B             50            ;Reset standard times
031B 753DDC      51            mov Reflow_Temp, #ReflowConst
031E 753E04      52            mov Reflow_Time, #4
0321 753F96      53            mov Soak_Temp,   #SoakConst
0324 754006      54            mov Soak_Time,   #6
0327 E59E        55            mov a, SWC
0329 D2AF        56            setb EA         
032B 30E1EA      57            jnb acc.1, PowerOff
032E 020331      58            ljmp PowerOn
0331             59   ;Initial Set up  on reboot
0331             60   PowerOn:
0331 12007C      61            lcall Initialize_Timer
0334 75423C      62            mov Oven_Temp, #60
0337             63            ;Turn off LED's
0337 75E800      64            mov LEDRA, #0
033A 759500      65            mov LEDRB, #0
033D 759E00      66            mov LEDRC, #0
0340 75F800      67            mov LEDG, #0
0343 D2CA        68            setb TR2
0345 020348      69            ljmp Idle       
0348             70            
0348             71   ;awaiting process loop   
0348             72   Idle:
0348 754100      73            mov Target_Temp, #0
034B C202        74            clr timing
034D D2A9        75            setb ET0
034F             76            ;mov Target_Temp, #0
034F D2F9        77            setb LEDG.1
0351 C202        78            clr Timing
0353             79            ;Stop Timer
0353             80            ;set things while switch is up, return by flicking down
0353 20E923      81            jb SWA.1, Set_Reflow_Time
0356 20EA1B      82            jb SWA.2, Set_Reflow_Temp
0359 20EB13      83            jb SWA.3, Set_Soak_Time
035C 20EC0B      84            jb SWA.4, Set_Soak_Temp
035F 20F9E6      85            jb Key.1, Idle
0362             86            ;ready to start process
0362 12006A      87            lcall beep
0365 C200        88            clr Ready
0367 02037E      89            ljmp Preheat_Soak
036A             90   ;------------------------------------------------------------------      
036A             91   ;Setting Times and Temperatures (Not Done)
036A             92   ;   -had thought maybe macro for time and temp, that takes bounds 
036A             93   ;   so the time or temp is within reason
036A             94   ;------------------------------------------------------------------
036A             95   Set_Soak_Temp:
036A             96            ;lcall Set_Temp(Soak_Temp, lowerbound, upperbound)
036A 30ECDB      97            jnb SWA.4, Idle
036D 80FB        98            sjmp Set_Soak_Temp
036F             99   Set_Soak_Time:
036F            100            ;lcall Set_Time(Soak_Time, lowerbound, upperbound)
036F 30EBD6     101            jnb SWA.3, Idle
0372 80FB       102            sjmp Set_Soak_Time
0374            103   Set_Reflow_Temp:
0374            104            ;lcall Set_Temp(Reflow_Temp, lowerbound, upperbound)
0374 30EAD1     105            jnb SWA.2, Idle
0377 80FB       106            sjmp Set_Reflow_Temp
0379            107   Set_Reflow_Time:
0379            108            ;lcall Set_Temp(Reflow_Time, lowerbound, upperbound)
0379 30E9CC     109            jnb SWA.1, Idle
037C 80FB       110            sjmp Set_Reflow_Time
037E            111            
037E            112   ;------------------------------------------------------------------      
037E            113   ;Actual Progression Through Phases
037E            114   ;PRE-HEAT
037E            115   ;SOAK
037E            116   ;PRE-HEAT
037E            117   ;REFLOW
037E            118   ;COOLING
037E            119   ;DONE
037E            120   ;------------------------------------------------------------------
037E            121   
037E            122   ;Waits for temperature to get above soak temp
037E            123   Preheat_Soak:
037E D2FA       124            setb LEDG.2
0380 853F41     125            mov Target_Temp, Soak_Temp
0383 3000F8     126            jnb Ready, PreHeat_Soak
0386 12006A     127            lcall beep
0389            128   ;passes time
0389            129   Soak_Init:       
0389 D2FB       130            setb LEDG.3
038B 854032     131            mov seconds, Soak_Time+0
038E C201       132            clr finished     
0390            133   WaitSoak:
0390 12001E     134            lcall display_time      
0393 3001FA     135            jnb finished, WaitSoak
0396            136   ;Time is up      
0396 12001E     137            lcall display_time
0399 D2FC       138            setb LEDG.4
039B 12006A     139            lcall beep
039E 853D41     140            mov Target_Temp, Reflow_Temp
03A1 C200       141            clr ready
03A3            142   Preheat_Reflow:
03A3 3000FD     143            jnb Ready, PreHeat_Reflow
03A6 12006A     144            lcall beep
03A9            145   ;Pass Reflow Time, wait for time to expire       
03A9            146   Reflow_Init:
03A9 D2FD       147            setb LEDG.5
03AB 853E32     148            mov seconds, Reflow_Time+0
03AE C201       149            clr finished
03B0            150   WaitReflow:
03B0 12001E     151            lcall display_time      
03B3 3001FA     152            jnb finished, WaitReflow
03B6 12001E     153            lcall display_time
03B9 12006A     154            lcall beep
03BC            155   ;Process Finished, Wait for it to cool
03BC            156   Cooling:
03BC 75413C     157            mov Target_Temp, #CoolConst
03BF D200       158            setb ready      
03C1            159   WaitCool:        
03C1 D2FE       160            setb LEDG.6
03C3            161            ;wait for temp to dip below 60 Celcius (Cool Constant)
03C3 2000FB     162            jb Ready, WaitCool
03C6            163            ;set temp to zero
03C6 754100     164            mov Target_Temp, #0
03C9            165            ;triple beep
03C9 12006A     166            lcall beep
03CC 12005D     167            lcall wait
03CF 12006A     168            lcall beep
03D2 12005D     169            lcall wait
03D5 12006A     170            lcall beep
03D8            171   ;Cool Enough (just waits PB)     
03D8            172   Done:
03D8 D2FF       173            setb LEDG.7
03DA 20F9FB     174            jb Key.1, Done
03DD 75F800     175            mov LEDG, #0
03E0 020348     176            ljmp Idle       
03E3            177   
03E3            178   EN
