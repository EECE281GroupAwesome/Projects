                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   org 0000H
0000 75817F       3            mov SP, #7FH
0003 020A28       4            ljmp PowerOff
000B              5   org 000BH
000B 020974       6            ljmp Interupt0
001B              7   org 001BH
001B 02096B       8            ljmp Interupt1
001E              9   
001E             10   CoolConst   EQU 60
001E             11   ReflowConst EQU 220
001E             12   SoakConst   EQU 150
001E             13   CSEG
001E             14   
                 -1   $include(math16.asm)
                428   $LIST
                 -1   $include(LCDlib.asm)
01F8              1   ;This is a library with LCD functions 
01F8              2   ;
01F8              3   
01F8              4   
01F8              5   
01F8              6   
01F8              7   
                 61   $LIST
03D8             63   
                596   $LIST
084F            598   
084F            599            
                 -1   $include(DisplayandMacros.asm)	
084F              1   ;
084F              2   ;Functions for displaying the time using seconds
084F              3   ;                   for displaying the oven temp
084F              4   ;little useful functions like wait
084F              5   ; Beep to make short buzzer pulse                        
084F              6   
084F              7   
                  8   Display_Any MAC
                  9   	mov x, %0
                 10   	mov x+1, #0
                 11   	lcall hex2bcd
                 12   	mov dptr, #myLUT
                 13   	; Display Digit 0
                 14       mov A, bcd+0
                 15       anl a, #0fh
                 16       movc A, @A+dptr
                 17       mov HEX4, A
                 18   	; Display Digit 1
                 19       mov A, bcd+0
                 20       swap a
                 21       anl a, #0fh
                 22       movc A, @A+dptr
                 23       mov HEX5, A    
                 24       ; Display Digit 2
                 25       mov A, bcd+1
                 26       anl a, #0fh
                 27       jz Ender_%0
                 28       movc A, @A+dptr
                 29       mov HEX6, A
                 30       jmp Exit_%0
                 31       Ender_%0:
                 32       mov HEX6, #0FFH
                 33       Exit_%0:
                 34   endmac
084F             35   
084F             36   clear_hex:
084F C0E0        37            push ACC
0851 74FF        38            mov A, #0FFH
0853 F58E        39            mov HEX4, A
0855 F58F        40            mov HEX5, A
0857 F596        41            mov HEX6, A
0859 D0E0        42            pop ACC
085B 22          43            ret
085C             44   display_Time:
085C 85373A      45            mov x, seconds
085F 753B00      46            mov x+1, #0
0862 12001E      47            lcall hex2bcd
0865 900935      48            mov dptr, #myLUT
0868             49            ; Display Digit 0
0868 E542        50       mov A, bcd+0
086A 540F        51       anl a, #0fh
086C 93          52       movc A, @A+dptr
086D F58E        53       mov HEX4, A
086F             54            ; Display Digit 1
086F E542        55       mov A, bcd+0
0871 C4          56       swap a
0872 540F        57       anl a, #0fh
0874 93          58       movc A, @A+dptr
0875 F58F        59       mov HEX5, A    
0877             60       ; Display Digit 2
0877 E543        61       mov A, bcd+1
0879 540F        62       anl a, #0fh
087B 93          63       movc A, @A+dptr
087C F596        64       mov HEX6, A
087E 22          65       ret   
087F             66     
087F             67   Wait:
087F 7B64        68            mov R3, #100
0881 7AFA        69   L3:      mov R2, #250
0883 79FA        70   L2:      mov R1, #250
0885 D9FE        71   L1: djnz R1, L1
0887 DAFA        72            djnz R2, L2
0889 DBF6        73            djnz R3, L3
088B 22          74            ret             
088C             75   Beep:
088C D2AB        76            setb ET1
088E 12087F      77            lcall wait
0891 C2AB        78            clr Et1
0893 22          79            ret
0894             80   
0894             81   
0894             82   
                 83   Set_Any MAC
                 84   	Inc_%0:
                 85   		mov A, %0
                 86   	
                 87   		jb KEY.2, Dec_%0
                 88       	jnb KEY.2, $
                 89   		inc A
                 90   		cjne A, %2, Done_%0
                 91   		dec A
                 92   	Dec_%0:	
                 93      	    jb KEY.3, Done_%0
                 94      	    jnb KEY.3, $
                 95   		dec A
                 96   	    cjne A, %1, Done_%0
                 97           inc A
                 98   	Done_%0:
                 99   		mov %0, A
                100   endmac
0894            101   
0894            102   END      
                 -1   $include(adc_functions.asm)
                 -1   $include(HeatingandTimer.asm)
0935              1   XTAL           EQU 33333333                     ;Clock Frequency
0935              2   FREQ           EQU 100                          
0935              3   HERTZ          EQU 2000                         ;Buzzer Frequency
0935              4   BAUD                EQU 115200                       ;Baud Rate
0935              5   T2LOAD              EQU 65536-(XTAL/(32*BAUD))
0935              6   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
0935              7   BUZZER_RELOAD  EQU 65538-(XTAL/(12*HERTZ))       
0935              8   TURNONOVEN     EQU P0.0                         ;Controls oven
0935              9   BUZZER         EQU P0.3                          ; buzzer pin
0935             10   SERIALRATE     EQU 10                            ; Readings sent to comp per second
0935             11   
0935             12   myLUT:
0935 C0F9A4B0    13       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
093A 9282F880    14       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
093F             15   ;------------------------------
093F             16   ; Set up timers, 
093F             17   ; Does not start them or enable INT
093F             18   ;------------------------------
093F             19   Initialize_Timer:
093F 758911      20            mov TMOD,  #00010001B ; 16-bit timers
0942 C28C        21            clr TR0
0944 C28E        22            clr TR1
0946 C28D        23            clr TF0
0948 C28F        24            clr TF1
094A C2CA        25            clr TR2 ; Disable timer 2
094C 75C830      26            mov T2CON, #30H ; RCLK=1, TCLK=1 
094F 75CBFF      27            mov RCAP2H, #high(T2LOAD)  
0952 75CAF7      28            mov RCAP2L, #low(T2LOAD)
0955 D2CA        29            setb TR2 ; Enable timer 2
0957 759852      30            mov SCON, #52H
095A 758C93      31       mov TH0, #high(TIMER0_RELOAD)
095D 758A81      32       mov TL0, #low(TIMER0_RELOAD)
0960 758DFA      33       mov TH1, #high(BUZZER_RELOAD)
0963 758B96      34       mov TL1, #low(BUZZER_RELOAD)
0966 D28C        35       setb TR0
0968 D28E        36       Setb TR1
096A 22          37       ret
096B             38   ;Buzzer Noise    
096B             39   Interupt1:
096B 758DFA      40            mov TH1, #high(BUZZER_RELOAD)
096E 758B96      41       mov TL1, #low(BUZZER_RELOAD)
0971 B283        42       cpl BUZZER
0973 32          43            reti    
0974             44    
0974             45   
0974             46         
0974             47   ;--------------------------------
0974             48   ;Decrements Timer Every 1 second
0974             49   ;Checks Oven Temperature ever 1s
0974             50   ;--------------------------------
0974             51   Interupt0:    
0974             52       ; Reload the timer
0974 758C93      53       mov TH0, #high(TIMER0_RELOAD)
0977 758A81      54       mov TL0, #low(TIMER0_RELOAD)
097A             55       ; Save used register into the stack
097A C0D0        56       push psw
097C C0E0        57       push acc
097E C083        58       push dph
0980 C082        59       push dpl
0982             60            ; Increment the counter and check if a second has passed
0982 0535        61       inc count10ms
0984 E535        62       mov a, count10ms 
0986 B46436      63       cjne A, #100, Return_int
0989 753500      64       mov count10ms, #0
098C             65       ;send the info through serial port
098C             66       ;lcall temp_display
098C 120894      67            lcall room_convert
098F F8          67            mov R0, a
0990 88F0        67            mov b, R0
0992 1208C9      67            lcall oven_convert
0995 25F0        67            add a, b
0997 F54B        67            mov Oven_Temp, a 
0999 1209D0      68       lcall SendTemp
099C             69       ;second has passed
099C             70       
099C             71       ;checks if oven is greater or equal to target (can be moved to adjust rate)
099C C3          72       clr c
099D E54A        73       mov a, Target_Temp
099F 954B        74       Subb a, Oven_Temp        
09A1 4008        75       jc NoHeat
09A3 6006        76       jz NoHeat
09A5             77       ;activate oven
09A5 C280        78       clr TurnOnOven   
09A7 C200        79       clr Ready
09A9 8004        80       sjmp Heat
09AB             81   NoHeat:    
09AB D200        82            setb Ready  
09AD             83            ;turn off oven
09AD D280        84            setb TurnOnOven
09AF             85   Heat:
09AF             86            ;if timer is active    
09AF 20010D      87            jb finished, Return_int
09B2 E537        88       mov a, seconds
09B4 14          89       dec a
09B5 F537        90       mov seconds, a
09B7 B40005      91       cjne A, #00, Return_int ;FFH is -1 in two's complement
09BA 753700      92       mov seconds, #00
09BD D201        93       setb finished
09BF             94   Return_int:
09BF D082        95            pop dpl
09C1 D083        96       pop dph
09C3 D0E0        97       pop acc
09C5 D0D0        98       pop psw    
09C7 32          99            reti
09C8            100      
09C8            101   end
                 -1   $include(serial.asm)
09C8              1   putchar:
09C8 3099FD       2       JNB TI, putchar
09CB C299         3       CLR TI
09CD F599         4       MOV SBUF, a
09CF 22           5       RET
09D0              6   SendTemp:
09D0 C0E0         7            push acc
09D2 AF3A         8            mov R7, x
09D4              9            ;Sends the oven's temperature
09D4 854B3A      10            mov x, Oven_Temp
09D7 753B00      11            mov x+1, #0
09DA 12001E      12            lcall Hex2Bcd
09DD E543        13            mov A, bcd+1
09DF 540F        14       anl a, #0fh
09E1 2430        15       add a, #48  
09E3 1209C8      16       lcall putchar         
09E6 E542        17            mov A, bcd+0
09E8 C4          18            swap a
09E9 540F        19       anl a, #0fh
09EB 2430        20       add a, #48
09ED 1209C8      21       lcall putchar
09F0 E542        22       mov A, bcd+0
09F2 540F        23       anl a, #0fh
09F4 2430        24       add a, #48
09F6 1209C8      25       lcall putchar
09F9             26       ;Sends a break marker                                ;;;;;;;;;;;;;;;;;;;;;;;;;;
09F9             27       ;mov a, #'\n'
09F9             28       ;lcall putchar
09F9             29            ;Sends the goal temperature
09F9 854A3A      30            mov x, Target_Temp
09FC 753B00      31            mov x+1, #0
09FF 12001E      32            lcall Hex2Bcd
0A02 E543        33            mov A, bcd+1
0A04 540F        34       anl a, #0fh
0A06 2430        35       add a, #48  
0A08 1209C8      36       lcall putchar         
0A0B E542        37            mov A, bcd+0
0A0D C4          38            swap a
0A0E 540F        39       anl a, #0fh
0A10 2430        40       add a, #48
0A12 1209C8      41       lcall putchar
0A15 E542        42       mov A, bcd+0
0A17 540F        43       anl a, #0fh
0A19 2430        44       add a, #48
0A1B 1209C8      45       lcall putchar
0A1E 740A        46       mov a, #'\n'
0A20 1209C8      47       lcall putchar
0A23             48       ;mov a, #'\r'
0A23             49       ;lcall putchar
0A23 8F3A        50       mov x, R7
0A25 D0E0        51       pop acc
0A27 22          52            ret     
0A28             53            
0A28             54   END      
0A28             21                    
0030             22   DSEG at 30H
0030             23            ;ADC STUFF
0030             24            ADC_out_buffer: ds 1
0031             25            ADC_in_buffer: ds 2
0033             26            last_reading: ds 2
0035             27            ;Overflow Counter
0035             28            count10ms: ds 1
0036             29            count5ms: ds 1
0037             30            ;Universal for time
0037             31            seconds:   ds 1
0038             32            minutes:   ds 1
0039             33            hours:     ds 1
003A             34            ;math variables
003A             35            x:                 ds 4
003E             36            y:         ds 4
0042             37            bcd:       ds 4
0046             38            ;Oven Settables
0046             39            Reflow_Temp: Ds 1
0047             40            Reflow_Time: Ds 1
0048             41            Soak_Temp:   Ds 1
0049             42            Soak_Time:       Ds 1
004A             43            ;Universal for temp
004A             44            Target_Temp: Ds 1
004B             45            ;Enviroment
004B             46            Oven_Temp:   Ds 1
004C             47            ;LCD Variables
004C             48            ;LCD_Temperature: ds 1
004C             49            LCD: ds 3
004F             50            Thermo_cursor: DS 1
0050             51            Thermo_segment: DS 1
0051             52            Thermo_inc: ds 1
0000             53   BSEG
0000             54            ;booleans
0000             55            Ready:       Dbit 1
0001             56            Finished:    dbit 1
0002             57            Timing:      dbit 1
0003             58            mf:          dbit 1
0A28             59   CSEG
0A28             60   
0A28             61   ;Stops Everything until switch 1 is turned back on (Not Done)
0A28             62   PowerOff:
0A28 759AFF      63            mov P0MOD, #0xFF
0A2B             64            ;Reset standard times
0A2B 7546DC      65            mov Reflow_Temp, #ReflowConst
0A2E 75471E      66            mov Reflow_Time, #30
0A31 754896      67            mov Soak_Temp,   #SoakConst
0A34 75494B      68            mov Soak_Time,   #75
0A37 E59E        69            mov a, SWC
0A39 C2AF        70            clr EA  
0A3B 30E1EA      71            jnb acc.1, PowerOff
0A3E 120422      72            lcall init_lcd
0A41 020A44      73            ljmp PowerOn
0A44             74   ;Initial Set up  on reboot
0A44             75   PowerOn:
0A44 1208FA      76            lcall ADC_Init
0A47 12093F      77            lcall Initialize_Timer
0A4A D2AF        78            setb EA
0A4C 754B8C      79            mov Oven_Temp, #140
0A4F             80            ;Turn off LED's
0A4F 75E800      81            mov LEDRA, #0
0A52 759500      82            mov LEDRB, #0
0A55 759E00      83            mov LEDRC, #0
0A58 75F800      84            mov LEDG, #0
0A5B D2CA        85            setb TR2
0A5D 020A60      86            ljmp Idle       
0A60             87            
0A60             88   ;awaiting process loop
0A60             89   Idle:
0A60 120520      90            lcall idle_display      
0A63             91   Idle0:
0A63             92   
0A63 754A00      93            mov Target_Temp, #0
0A66 C202        94            clr timing
0A68 D2A9        95            setb ET0
0A6A D2F9        96            setb LEDG.1
0A6C             97            ;Stop Timer
0A6C             98            ;set things while switch is up, return by flicking down
0A6C 20E935      99            jb SWA.1, Set_Reflow_Time
0A6F 20EA27     100            jb SWA.2, Set_Reflow_Temp
0A72 20EB19     101            jb SWA.3, Set_Soak_Time
0A75 20EC0B     102            jb SWA.4, Set_Soak_Temp
0A78 20F9E8     103            jb Key.1, Idle0
0A7B            104            ;ready to start process
0A7B 12088C     105            lcall beep
0A7E C200       106            clr Ready
0A80 020AAF     107            ljmp Preheat_Soak
0A83            108            
0A83            109   ;------------------------------------------------------------------      
0A83            110   ;Setting Times and Temperatures (Not Done)
0A83            111   ;   -had thought maybe macro for time and temp, that takes bounds 
0A83            112   ;   so the time or temp is within reason
0A83            113   ;------------------------------------------------------------------
0A83            114   Set_Soak_Temp:
0A83 120BB0     115            lcall Set_Soak_Temp_Relay
0A86 20ECFA     116            jb SWA.4, Set_Soak_Temp
0A89 12084F     117            lcall clear_hex
0A8C 80D2       118            sjmp Idle
0A8E            119   Set_Soak_Time:
0A8E 120BF5     120            lcall Set_Soak_Time_Relay
0A91 20EBFA     121            jb SWA.3, Set_Soak_Time
0A94 12084F     122            lcall clear_hex
0A97 80C7       123            Sjmp Idle
0A99            124   Set_Reflow_Temp:
0A99 120B6B     125            lcall Set_Reflow_Temp_Relay
0A9C 20EAFA     126            jb SWA.2, Set_Reflow_Temp
0A9F 12084F     127            lcall clear_hex
0AA2 80BC       128            Sjmp Idle
0AA4            129   Set_Reflow_Time:
0AA4 120B26     130            lcall Set_Reflow_Time_Relay     
0AA7 20E9FA     131            jb SWA.1, Set_Reflow_Time
0AAA 12084F     132            lcall clear_hex
0AAD 80B1       133            Sjmp Idle
0AAF            134   
0AAF            135   ;------------------------------------------------------------------      
0AAF            136   ;Actual Progression Through Phases
0AAF            137   ;PRE-HEAT
0AAF            138   ;SOAK
0AAF            139   ;PRE-HEAT
0AAF            140   ;REFLOW
0AAF            141   ;COOLING
0AAF            142   ;DONE
0AAF            143   ;------------------------------------------------------------------
0AAF            144   
0AAF            145   ;Waits for temperature to get above soak temp
0AAF            146   Preheat_Soak:
0AAF 12052B     147            lcall preheat_display
0AB2            148   Preheat_Soak0:
0AB2 D2FA       149            setb LEDG.2
0AB4 85484A     150            mov Target_Temp, Soak_Temp
0AB7 3000F8     151            jnb Ready, PreHeat_Soak0
0ABA 12088C     152            lcall beep
0ABD            153   ;Initialize for holding constant
0ABD D2FB       154            setb LEDG.3
0ABF 854937     155            mov seconds, Soak_Time+0
0AC2 120541     156            lcall soak_display
0AC5 C201       157            clr finished     
0AC7            158   WaitSoak:
0AC7 12085C     159            lcall display_time      
0ACA 3001FA     160            jnb finished, WaitSoak
0ACD            161   ;Initilize for ramp to Reflow
0ACD 12084F     162            lcall clear_hex
0AD0 D2FC       163            setb LEDG.4
0AD2 12088C     164            lcall beep
0AD5 85464A     165            mov Target_Temp, Reflow_Temp
0AD8 12052B     166            lcall preheat_display
0ADB C200       167            clr ready
0ADD            168   Preheat_Reflow:
0ADD 3000FD     169            jnb Ready, PreHeat_Reflow
0AE0 12088C     170            lcall beep
0AE3            171   ;Pass Reflow Time, wait for time to expire       
0AE3 D2FD       172            setb LEDG.5
0AE5 854737     173            mov seconds, Reflow_Time+0
0AE8 120536     174            lcall reflow_display
0AEB C201       175            clr finished
0AED            176   WaitReflow:
0AED 12085C     177            lcall display_time      
0AF0 3001FA     178            jnb finished, WaitReflow
0AF3 12084F     179            lcall clear_hex
0AF6 12088C     180            lcall beep
0AF9            181   ;Process Finished, Wait for it to cool
0AF9            182   Cooling:
0AF9 120578     183            lcall cooling_display
0AFC 754A3C     184            mov Target_Temp, #CoolConst
0AFF D200       185            setb ready      
0B01            186   WaitCool:        
0B01 D2FE       187            setb LEDG.6
0B03            188            ;wait for temp to dip below 60 Celcius (Cool Constant)
0B03 2000FB     189            jb Ready, WaitCool
0B06            190            ;set temp to zero
0B06 754A00     191            mov Target_Temp, #0
0B09            192            ;triple beep
0B09 12088C     193            lcall beep
0B0C 12087F     194            lcall wait
0B0F 12088C     195            lcall beep
0B12 12087F     196            lcall wait
0B15 12088C     197            lcall beep
0B18            198   ;Cool Enough (just waits PB)
0B18 120583     199            lcall done_display      
0B1B            200   Done:
0B1B D2FF       201            setb LEDG.7
0B1D 20F9FB     202            jb Key.1, Done
0B20 75F800     203            mov LEDG, #0
0B23 020A60     204            ljmp Idle
0B26            205                    
0B26            206   Set_Reflow_Time_Relay:
0B26            207            Inc_Reflow_Time:
0B26 E547       207                    mov A, Reflow_Time
0B28            207            
0B28 20FA08     207                    jb KEY.2, Dec_Reflow_Time
0B2B 30FAFD     207            jnb KEY.2, $
0B2E 04         207                    inc A
0B2F B42E0C     207                    cjne A, #46, Done_Reflow_Time
0B32 14         207                    dec A
0B33            207            Dec_Reflow_Time:        
0B33 20FB08     207                jb KEY.3, Done_Reflow_Time
0B36 30FBFD     207                jnb KEY.3, $
0B39 14         207                    dec A
0B3A B41D01     207                cjne A, #29, Done_Reflow_Time
0B3D 04         207           inc A
0B3E            207            Done_Reflow_Time:
0B3E F547       207                    mov Reflow_Time, A
0B40 85473A     208            mov x, Reflow_Time
0B43 753B00     208            mov x+1, #0
0B46 12001E     208            lcall hex2bcd
0B49 900935     208            mov dptr, #myLUT
0B4C            208            ; Display Digit 0
0B4C E542       208       mov A, bcd+0
0B4E 540F       208       anl a, #0fh
0B50 93         208       movc A, @A+dptr
0B51 F58E       208       mov HEX4, A
0B53            208            ; Display Digit 1
0B53 E542       208       mov A, bcd+0
0B55 C4         208       swap a
0B56 540F       208       anl a, #0fh
0B58 93         208       movc A, @A+dptr
0B59 F58F       208       mov HEX5, A    
0B5B            208       ; Display Digit 2
0B5B E543       208       mov A, bcd+1
0B5D 540F       208       anl a, #0fh
0B5F 6006       208       jz Ender_Reflow_Time
0B61 93         208       movc A, @A+dptr
0B62 F596       208       mov HEX6, A
0B64 020B6A     208       jmp Exit_Reflow_Time
0B67            208       Ender_Reflow_Time:
0B67 7596FF     208       mov HEX6, #0FFH
0B6A            208       Exit_Reflow_Time:
0B6A 22         209            ret     
0B6B            210   Set_Reflow_Temp_Relay:
0B6B            211            Inc_Reflow_Temp:
0B6B E546       211                    mov A, Reflow_Temp
0B6D            211            
0B6D 20FA08     211                    jb KEY.2, Dec_Reflow_Temp
0B70 30FAFD     211            jnb KEY.2, $
0B73 04         211                    inc A
0B74 B4E70C     211                    cjne A, #231, Done_Reflow_Temp
0B77 14         211                    dec A
0B78            211            Dec_Reflow_Temp:        
0B78 20FB08     211                jb KEY.3, Done_Reflow_Temp
0B7B 30FBFD     211                jnb KEY.3, $
0B7E 14         211                    dec A
0B7F B4C701     211                cjne A, #199, Done_Reflow_Temp
0B82 04         211           inc A
0B83            211            Done_Reflow_Temp:
0B83 F546       211                    mov Reflow_Temp, A
0B85 85463A     212            mov x, Reflow_Temp
0B88 753B00     212            mov x+1, #0
0B8B 12001E     212            lcall hex2bcd
0B8E 900935     212            mov dptr, #myLUT
0B91            212            ; Display Digit 0
0B91 E542       212       mov A, bcd+0
0B93 540F       212       anl a, #0fh
0B95 93         212       movc A, @A+dptr
0B96 F58E       212       mov HEX4, A
0B98            212            ; Display Digit 1
0B98 E542       212       mov A, bcd+0
0B9A C4         212       swap a
0B9B 540F       212       anl a, #0fh
0B9D 93         212       movc A, @A+dptr
0B9E F58F       212       mov HEX5, A    
0BA0            212       ; Display Digit 2
0BA0 E543       212       mov A, bcd+1
0BA2 540F       212       anl a, #0fh
0BA4 6006       212       jz Ender_Reflow_Temp
0BA6 93         212       movc A, @A+dptr
0BA7 F596       212       mov HEX6, A
0BA9 020BAF     212       jmp Exit_Reflow_Temp
0BAC            212       Ender_Reflow_Temp:
0BAC 7596FF     212       mov HEX6, #0FFH
0BAF            212       Exit_Reflow_Temp:
0BAF 22         213            ret     
0BB0            214   Set_Soak_Temp_Relay:     
0BB0            215            Inc_Soak_Temp:
0BB0 E548       215                    mov A, Soak_Temp
0BB2            215            
0BB2 20FA08     215                    jb KEY.2, Dec_Soak_Temp
0BB5 30FAFD     215            jnb KEY.2, $
0BB8 04         215                    inc A
0BB9 B4A50C     215                    cjne A, #165, Done_Soak_Temp
0BBC 14         215                    dec A
0BBD            215            Dec_Soak_Temp:  
0BBD 20FB08     215                jb KEY.3, Done_Soak_Temp
0BC0 30FBFD     215                jnb KEY.3, $
0BC3 14         215                    dec A
0BC4 B48601     215                cjne A, #134, Done_Soak_Temp
0BC7 04         215           inc A
0BC8            215            Done_Soak_Temp:
0BC8 F548       215                    mov Soak_Temp, A
0BCA 85483A     216            mov x, Soak_Temp
0BCD 753B00     216            mov x+1, #0
0BD0 12001E     216            lcall hex2bcd
0BD3 900935     216            mov dptr, #myLUT
0BD6            216            ; Display Digit 0
0BD6 E542       216       mov A, bcd+0
0BD8 540F       216       anl a, #0fh
0BDA 93         216       movc A, @A+dptr
0BDB F58E       216       mov HEX4, A
0BDD            216            ; Display Digit 1
0BDD E542       216       mov A, bcd+0
0BDF C4         216       swap a
0BE0 540F       216       anl a, #0fh
0BE2 93         216       movc A, @A+dptr
0BE3 F58F       216       mov HEX5, A    
0BE5            216       ; Display Digit 2
0BE5 E543       216       mov A, bcd+1
0BE7 540F       216       anl a, #0fh
0BE9 6006       216       jz Ender_Soak_Temp
0BEB 93         216       movc A, @A+dptr
0BEC F596       216       mov HEX6, A
0BEE 020BF4     216       jmp Exit_Soak_Temp
0BF1            216       Ender_Soak_Temp:
0BF1 7596FF     216       mov HEX6, #0FFH
0BF4            216       Exit_Soak_Temp:
0BF4 22         217            ret     
0BF5            218   Set_Soak_Time_Relay:
0BF5            219            Inc_Soak_Time:
0BF5 E549       219                    mov A, Soak_Time
0BF7            219            
0BF7 20FA08     219                    jb KEY.2, Dec_Soak_Time
0BFA 30FAFD     219            jnb KEY.2, $
0BFD 04         219                    inc A
0BFE B45B0C     219                    cjne A, #91, Done_Soak_Time
0C01 14         219                    dec A
0C02            219            Dec_Soak_Time:  
0C02 20FB08     219                jb KEY.3, Done_Soak_Time
0C05 30FBFD     219                jnb KEY.3, $
0C08 14         219                    dec A
0C09 B43B01     219                cjne A, #59, Done_Soak_Time
0C0C 04         219           inc A
0C0D            219            Done_Soak_Time:
0C0D F549       219                    mov Soak_Time, A
0C0F 85493A     220            mov x, Soak_Time
0C12 753B00     220            mov x+1, #0
0C15 12001E     220            lcall hex2bcd
0C18 900935     220            mov dptr, #myLUT
0C1B            220            ; Display Digit 0
0C1B E542       220       mov A, bcd+0
0C1D 540F       220       anl a, #0fh
0C1F 93         220       movc A, @A+dptr
0C20 F58E       220       mov HEX4, A
0C22            220            ; Display Digit 1
0C22 E542       220       mov A, bcd+0
0C24 C4         220       swap a
0C25 540F       220       anl a, #0fh
0C27 93         220       movc A, @A+dptr
0C28 F58F       220       mov HEX5, A    
0C2A            220       ; Display Digit 2
0C2A E543       220       mov A, bcd+1
0C2C 540F       220       anl a, #0fh
0C2E 6006       220       jz Ender_Soak_Time
0C30 93         220       movc A, @A+dptr
0C31 F596       220       mov HEX6, A
0C33 020C39     220       jmp Exit_Soak_Time
0C36            220       Ender_Soak_Time:
0C36 7596FF     220       mov HEX6, #0FFH
0C39            220       Exit_Soak_Time:
0C39 22         221            ret
0C3A            222                    
0C3A            223   END
