                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   org 0000H
0000 75817F       3            mov SP, #7FH
0003 020A90       4            ljmp PowerOff
000B              5   org 000BH
000B 0209D9       6            ljmp Interupt0
001B              7   org 001BH
001B 0209D0       8            ljmp Interupt1
001E              9   
001E             10   CoolConst   EQU 60
001E             11   ReflowConst EQU 220
001E             12   SoakConst   EQU 150
001E             13   CSEG
001E             14   
                 -1   $include(math16.asm)
                428   $LIST
                 -1   $include(LCDlib.asm)
01F8              1   ;This is a library with LCD functions 
01F8              2   ;
01F8              3   
01F8              4   
01F8              5   
01F8              6   
01F8              7   
                 61   $LIST
03D8             63   
                633   $LIST
0891            635   
0891            636            
                 -1   $include(DisplayandMacros.asm)	
0891              1   ;
0891              2   ;Functions for displaying the time using seconds
0891              3   ;                   for displaying the oven temp
0891              4   ;little useful functions like wait
0891              5   ; Beep to make short buzzer pulse                        
0891              6   
0891              7   
                  8   Display_Any MAC
                  9   	mov x, %0
                 10   	mov x+1, #0
                 11   	lcall hex2bcd
                 12   	mov dptr, #myLUT
                 13   	; Display Digit 0
                 14       mov A, bcd+0
                 15       anl a, #0fh
                 16       movc A, @A+dptr
                 17       mov HEX4, A
                 18   	; Display Digit 1
                 19       mov A, bcd+0
                 20       swap a
                 21       anl a, #0fh
                 22       movc A, @A+dptr
                 23       mov HEX5, A    
                 24       ; Display Digit 2
                 25       mov A, bcd+1
                 26       anl a, #0fh
                 27       jz Ender_%0
                 28       movc A, @A+dptr
                 29       mov HEX6, A
                 30       jmp Exit_%0
                 31       Ender_%0:
                 32       mov HEX6, #0FFH
                 33       Exit_%0:
                 34   endmac
0891             35   
0891             36   clear_hex:
0891 C0E0        37            push ACC
0893 74FF        38            mov A, #0FFH
0895 F58E        39            mov HEX4, A
0897 F58F        40            mov HEX5, A
0899 F596        41            mov HEX6, A
089B D0E0        42            pop ACC
089D 22          43            ret
089E             44   display_Time:
089E 85373A      45            mov x, seconds
08A1 753B00      46            mov x+1, #0
08A4 12001E      47            lcall hex2bcd
08A7 90099A      48            mov dptr, #myLUT
08AA             49            ; Display Digit 0
08AA E53E        50       mov A, bcd+0
08AC 540F        51       anl a, #0fh
08AE 93          52       movc A, @A+dptr
08AF F58E        53       mov HEX4, A
08B1             54            ; Display Digit 1
08B1 E53E        55       mov A, bcd+0
08B3 C4          56       swap a
08B4 540F        57       anl a, #0fh
08B6 93          58       movc A, @A+dptr
08B7 F58F        59       mov HEX5, A    
08B9             60       ; Display Digit 2
08B9 E53F        61       mov A, bcd+1
08BB 540F        62       anl a, #0fh
08BD 93          63       movc A, @A+dptr
08BE F596        64       mov HEX6, A
08C0 22          65       ret   
08C1             66     
08C1             67   Wait:
08C1 7B64        68            mov R3, #100
08C3 7AFA        69   L3:      mov R2, #250
08C5 79FA        70   L2:      mov R1, #250
08C7 D9FE        71   L1: djnz R1, L1
08C9 DAFA        72            djnz R2, L2
08CB DBF6        73            djnz R3, L3
08CD 22          74            ret             
08CE             75   Beep:
08CE D2AB        76            setb ET1
08D0 1208C1      77            lcall wait
08D3 C2AB        78            clr Et1
08D5 22          79            ret
08D6             80   
08D6             81   display_Temp:
08D6 85463A      82            mov x, Oven_Temp
08D9 753B00      83            mov x+1, #0
08DC 12001E      84            lcall hex2bcd
08DF 90099A      85            mov dptr, #myLUT
08E2             86            ; Display Digit 0
08E2 E53E        87       mov A, bcd+0
08E4 540F        88       anl a, #0fh
08E6 93          89       movc A, @A+dptr
08E7 F591        90       mov HEX0, A
08E9             91            ; Display Digit 1
08E9 E53E        92       mov A, bcd+0
08EB C4          93       swap a
08EC 540F        94       anl a, #0fh
08EE 93          95       movc A, @A+dptr
08EF F592        96       mov HEX1, A
08F1             97       ; Display Digit 2
08F1 E53F        98       mov A, bcd+1
08F3 540F        99       anl a, #0fh
08F5 93         100       movc A, @A+dptr
08F6 F593       101       mov HEX2, A  
08F8 22         102       ret 
08F9            103   
                104   Set_Any MAC
                105   	Inc_%0:
                106   		mov A, %0
                107   	
                108   		jb KEY.2, Dec_%0
                109       	jnb KEY.2, $
                110   		inc A
                111   		cjne A, %2, Done_%0
                112   		dec A
                113   	Dec_%0:	
                114      	    jb KEY.3, Done_%0
                115      	    jnb KEY.3, $
                116   		dec A
                117   	    cjne A, %1, Done_%0
                118           inc A
                119   	Done_%0:
                120   		mov %0, A
                121   endmac
08F9            122   
08F9            123   END      
                 -1   $include(adc_functions.asm)
                 -1   $include(HeatingandTimer.asm)
099A              1   XTAL           EQU 33333333                     ;Clock Frequency
099A              2   FREQ           EQU 100                          
099A              3   HERTZ          EQU 2000                         ;Buzzer Frequency
099A              4   BAUD                EQU 115200                       ;Baud Rate
099A              5   T2LOAD              EQU 65536-(XTAL/(32*BAUD))
099A              6   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ))
099A              7   BUZZER_RELOAD  EQU 65538-(XTAL/(12*HERTZ))       
099A              8   TURNONOVEN     EQU P0.0                         ;Controls oven
099A              9   BUZZER         EQU P0.3                          ; buzzer pin
099A             10   SERIALRATE     EQU 10                            ; Readings sent to comp per second
099A             11   
099A             12   myLUT:
099A C0F9A4B0    13       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
099F 9282F880    14       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
09A4             15   ;------------------------------
09A4             16   ; Set up timers, 
09A4             17   ; Does not start them or enable INT
09A4             18   ;------------------------------
09A4             19   Initialize_Timer:
09A4 758911      20            mov TMOD,  #00010001B ; 16-bit timers
09A7 C28C        21            clr TR0
09A9 C28E        22            clr TR1
09AB C28D        23            clr TF0
09AD C28F        24            clr TF1
09AF C2CA        25            clr TR2 ; Disable timer 2
09B1 75C830      26            mov T2CON, #30H ; RCLK=1, TCLK=1 
09B4 75CBFF      27            mov RCAP2H, #high(T2LOAD)  
09B7 75CAF7      28            mov RCAP2L, #low(T2LOAD)
09BA D2CA        29            setb TR2 ; Enable timer 2
09BC 759852      30            mov SCON, #52H
09BF 758C93      31       mov TH0, #high(TIMER0_RELOAD)
09C2 758A81      32       mov TL0, #low(TIMER0_RELOAD)
09C5 758DFA      33       mov TH1, #high(BUZZER_RELOAD)
09C8 758B96      34       mov TL1, #low(BUZZER_RELOAD)
09CB D28C        35       setb TR0
09CD D28E        36       Setb TR1
09CF 22          37       ret
09D0             38   ;Buzzer Noise    
09D0             39   Interupt1:
09D0 758DFA      40            mov TH1, #high(BUZZER_RELOAD)
09D3 758B96      41       mov TL1, #low(BUZZER_RELOAD)
09D6 B283        42       cpl BUZZER
09D8 32          43            reti    
09D9             44    
09D9             45   
09D9             46         
09D9             47   ;--------------------------------
09D9             48   ;Decrements Timer Every 1 second
09D9             49   ;Checks Oven Temperature ever 1s
09D9             50   ;--------------------------------
09D9             51   Interupt0:    
09D9             52       ; Reload the timer
09D9 758C93      53       mov TH0, #high(TIMER0_RELOAD)
09DC 758A81      54       mov TL0, #low(TIMER0_RELOAD)
09DF             55       ; Save used register into the stack
09DF C0D0        56       push psw
09E1 C0E0        57       push acc
09E3 C083        58       push dph
09E5 C082        59       push dpl
09E7             60            ; Increment the counter and check if a second has passed
09E7 0535        61       inc count10ms
09E9 E535        62       mov a, count10ms 
09EB B46439      63       cjne A, #100, Return_int
09EE 753500      64       mov count10ms, #0
09F1             65       ;send the info through serial port
09F1             66       
09F1 1208F9      67            lcall room_convert
09F4 F8          67            mov R0, a
09F5 88F0        67            mov b, R0
09F7 12092E      67            lcall oven_convert
09FA 25F0        67            add a, b
09FC F546        67            mov Oven_Temp, a
09FE             68       ;lcall temp_display 
09FE 120520      69       lcall State_disp
0A01 120A38      70       lcall SendTemp
0A04             71       
0A04             72       ;lcall display_temp
0A04             73       ;second has passed
0A04             74       
0A04             75       ;checks if oven is greater or equal to target (can be moved to adjust rate)
0A04 C3          76       clr c
0A05 E545        77       mov a, Target_Temp
0A07 9546        78       Subb a, Oven_Temp        
0A09 4008        79       jc NoHeat
0A0B 6006        80       jz NoHeat
0A0D             81       ;activate oven
0A0D C280        82       clr TurnOnOven   
0A0F C200        83       clr Ready
0A11 8004        84       sjmp Heat
0A13             85   NoHeat:    
0A13 D200        86            setb Ready  
0A15             87            ;turn off oven
0A15 D280        88            setb TurnOnOven
0A17             89   Heat:
0A17             90            ;if timer is active    
0A17 20010D      91            jb finished, Return_int
0A1A E537        92       mov a, seconds
0A1C 14          93       dec a
0A1D F537        94       mov seconds, a
0A1F B40005      95       cjne A, #00, Return_int ;FFH is -1 in two's complement
0A22 753700      96       mov seconds, #00
0A25 D201        97       setb finished
0A27             98   Return_int:
0A27 D082        99            pop dpl
0A29 D083       100       pop dph
0A2B D0E0       101       pop acc
0A2D D0D0       102       pop psw    
0A2F 32         103            reti
0A30            104      
0A30            105   end
                 -1   $include(serial.asm)
0A30              1   putchar:
0A30 3099FD       2       JNB TI, putchar
0A33 C299         3       CLR TI
0A35 F599         4       MOV SBUF, a
0A37 22           5       RET
0A38              6   SendTemp:
0A38 C0E0         7            push acc
0A3A AF3A         8            mov R7, x
0A3C              9            ;Sends the oven's temperature
0A3C 85463A      10            mov x, Oven_Temp
0A3F 753B00      11            mov x+1, #0
0A42 12001E      12            lcall Hex2Bcd
0A45 E53F        13            mov A, bcd+1
0A47 540F        14       anl a, #0fh
0A49 2430        15       add a, #48  
0A4B 120A30      16       lcall putchar         
0A4E E53E        17            mov A, bcd+0
0A50 C4          18            swap a
0A51 540F        19       anl a, #0fh
0A53 2430        20       add a, #48
0A55 120A30      21       lcall putchar
0A58 E53E        22       mov A, bcd+0
0A5A 540F        23       anl a, #0fh
0A5C 2430        24       add a, #48
0A5E 120A30      25       lcall putchar
0A61             26       ;Sends a break marker                                ;;;;;;;;;;;;;;;;;;;;;;;;;;
0A61             27       ;mov a, #'\n'
0A61             28       ;lcall putchar
0A61             29            ;Sends the goal temperature
0A61 85453A      30            mov x, Target_Temp
0A64 753B00      31            mov x+1, #0
0A67 12001E      32            lcall Hex2Bcd
0A6A E53F        33            mov A, bcd+1
0A6C 540F        34       anl a, #0fh
0A6E 2430        35       add a, #48  
0A70 120A30      36       lcall putchar         
0A73 E53E        37            mov A, bcd+0
0A75 C4          38            swap a
0A76 540F        39       anl a, #0fh
0A78 2430        40       add a, #48
0A7A 120A30      41       lcall putchar
0A7D E53E        42       mov A, bcd+0
0A7F 540F        43       anl a, #0fh
0A81 2430        44       add a, #48
0A83 120A30      45       lcall putchar
0A86 740A        46       mov a, #'\n'
0A88 120A30      47       lcall putchar
0A8B             48       ;mov a, #'\r'
0A8B             49       ;lcall putchar
0A8B 8F3A        50       mov x, R7
0A8D D0E0        51       pop acc
0A8F 22          52            ret     
0A90             53            
0A90             54   END      
0A90             21                    
0030             22   DSEG at 30H
0030             23            ;ADC STUFF
0030             24            ADC_out_buffer: ds 1
0031             25            ADC_in_buffer: ds 2
0033             26            last_reading: ds 2
0035             27            ;Overflow Counter
0035             28            count10ms: ds 1
0036             29            count5ms: ds 1
0037             30            ;Universal for time
0037             31            seconds:   ds 1
0038             32            minutes:   ds 1
0039             33            hours:     ds 1
003A             34            ;math variables
003A             35            x:                 ds 2
003C             36            y:         ds 2
003E             37            bcd:       ds 3
0041             38            ;Oven Settables
0041             39            Reflow_Temp: Ds 1
0042             40            Reflow_Time: Ds 1
0043             41            Soak_Temp:   Ds 1
0044             42            Soak_Time:       Ds 1
0045             43            ;Universal for temp
0045             44            Target_Temp: Ds 1
0046             45            ;Enviroment
0046             46            Oven_Temp:   Ds 1
0047             47            ;LCD Variables
0047             48            ;LCD_Temperature: ds 1
0047             49            LCD: ds 3
004A             50            Thermo_cursor: DS 1
004B             51            Thermo_segment: DS 1
004C             52            Thermo_inc: ds 1
004D             53            LCD_state: ds 1
0000             54   BSEG
0000             55            ;booleans
0000             56            Ready:       Dbit 1
0001             57            Finished:    dbit 1
0002             58            Timing:      dbit 1
0003             59            mf:          dbit 1
0A90             60   CSEG
0A90             61   
0A90             62   ;Stops Everything until switch 1 is turned back on (Not Done)
0A90             63   PowerOff:
0A90 759AFF      64            mov P0MOD, #0xFF
0A93             65            ;Reset standard times
0A93 7541DC      66            mov Reflow_Temp, #ReflowConst
0A96 754205      67            mov Reflow_Time, #5  ;30 real value
0A99 754396      68            mov Soak_Temp,   #SoakConst
0A9C 75440A      69            mov Soak_Time,   #10 ; 75 real value
0A9F E59E        70            mov a, SWC
0AA1 C2AF        71            clr EA  
0AA3 30E1EA      72            jnb acc.1, PowerOff
0AA6 120422      73            lcall init_lcd
0AA9 020AAC      74            ljmp PowerOn
0AAC             75   ;Initial Set up  on reboot
0AAC             76   PowerOn:
0AAC 12095F      77            lcall ADC_Init
0AAF 1209A4      78            lcall Initialize_Timer
0AB2 D2AF        79            setb EA
0AB4 75468C      80            mov Oven_Temp, #140
0AB7             81            ;Turn off LED's
0AB7 75E800      82            mov LEDRA, #0
0ABA 759500      83            mov LEDRB, #0
0ABD 759E00      84            mov LEDRC, #0
0AC0 75F800      85            mov LEDG, #0
0AC3 754D01      86            mov LCD_state, #1
0AC6 D2CA        87            setb TR2
0AC8 020ACB      88            ljmp Idle       
0ACB             89            
0ACB             90   ;awaiting process loop
0ACB             91   Idle:
0ACB 754D01      92            mov LCD_state, #1
0ACE 754500      93            mov Target_Temp, #0
0AD1 C202        94            clr timing
0AD3 D2A9        95            setb ET0
0AD5 D2F9        96            setb LEDG.1
0AD7             97            ;Stop Timer
0AD7             98            ;set things while switch is up, return by flicking down
0AD7 20E93E      99            jb SWA.1, Set_Reflow_Time
0ADA 20EA2D     100            jb SWA.2, Set_Reflow_Temp
0ADD 20EB1C     101            jb SWA.3, Set_Soak_Time
0AE0 20EC0B     102            jb SWA.4, Set_Soak_Temp
0AE3 20F9E5     103            jb Key.1, Idle
0AE6            104            ;ready to start process
0AE6 1208CE     105            lcall beep
0AE9 C200       106            clr Ready
0AEB 020B26     107            ljmp Preheat_Soak
0AEE            108            
0AEE            109   ;------------------------------------------------------------------      
0AEE            110   ;Setting Times and Temperatures (Not Done)
0AEE            111   ;   -had thought maybe macro for time and temp, that takes bounds 
0AEE            112   ;   so the time or temp is within reason
0AEE            113   ;------------------------------------------------------------------
0AEE            114   Set_Soak_Temp:
0AEE 754D08     115            mov LCD_state, #8
0AF1 120C27     116            lcall Set_Soak_Temp_Relay
0AF4 20ECF7     117            jb SWA.4, Set_Soak_Temp
0AF7 120891     118            lcall clear_hex
0AFA 80CF       119            sjmp Idle
0AFC            120   Set_Soak_Time:
0AFC 754D05     121            mov LCD_state, #5
0AFF 120C6C     122            lcall Set_Soak_Time_Relay
0B02 20EBF7     123            jb SWA.3, Set_Soak_Time
0B05 120891     124            lcall clear_hex
0B08 80C1       125            Sjmp Idle
0B0A            126   Set_Reflow_Temp:
0B0A 754D07     127                    mov LCD_state, #7
0B0D 120BE2     128            lcall Set_Reflow_Temp_Relay
0B10 20EAF7     129            jb SWA.2, Set_Reflow_Temp
0B13 120891     130            lcall clear_hex
0B16 80B3       131            Sjmp Idle
0B18            132   Set_Reflow_Time:
0B18 754D06     133                    mov LCD_state, #6
0B1B 120B9D     134            lcall Set_Reflow_Time_Relay     
0B1E 20E9F7     135            jb SWA.1, Set_Reflow_Time
0B21 120891     136            lcall clear_hex
0B24 80A5       137            Sjmp Idle
0B26            138   
0B26            139   ;------------------------------------------------------------------      
0B26            140   ;Actual Progression Through Phases
0B26            141   ;PRE-HEAT
0B26            142   ;SOAK
0B26            143   ;PRE-HEAT
0B26            144   ;REFLOW
0B26            145   ;COOLING
0B26            146   ;DONE
0B26            147   ;------------------------------------------------------------------
0B26            148   
0B26            149   ;Waits for temperature to get above soak temp
0B26            150   Preheat_Soak:
0B26 754D02     151            mov LCD_state, #2 ; preheat
0B29 D2FA       152            setb LEDG.2
0B2B 854345     153            mov Target_Temp, Soak_Temp
0B2E 3000F5     154            jnb Ready, PreHeat_Soak
0B31 1208CE     155            lcall beep
0B34            156   ;Initialize for holding constant
0B34 D2FB       157            setb LEDG.3
0B36 854437     158            mov seconds, Soak_Time+0
0B39 754D04     159                    mov LCD_state, #4 ;soak 
0B3C            160            
0B3C C201       161            clr finished     
0B3E            162   WaitSoak:
0B3E            163   
0B3E 12089E     164            lcall display_time
0B41            165                    
0B41 3001FA     166            jnb finished, WaitSoak
0B44            167   
0B44            168   ;Initilize for ramp to Reflow
0B44            169            
0B44 120891     170            lcall clear_hex
0B47 D2FC       171            setb LEDG.4
0B49 1208CE     172            lcall beep
0B4C            173            
0B4C 854145     174            mov Target_Temp, Reflow_Temp
0B4F 754D02     175            mov LCD_state, #2 ; preheat
0B52 C200       176            clr ready
0B54            177            
0B54            178   Preheat_Reflow:
0B54 3000FD     179            jnb Ready, PreHeat_Reflow
0B57 1208CE     180            lcall beep
0B5A            181   ;Pass Reflow Time, wait for time to expire       
0B5A D2FD       182            setb LEDG.5
0B5C 854237     183            mov seconds, Reflow_Time+0
0B5F 754D03     184                    mov LCD_state, #3 ;reflow
0B62 C201       185            clr finished
0B64            186   WaitReflow:
0B64 12089E     187            lcall display_time      
0B67 3001FA     188            jnb finished, WaitReflow
0B6A 120891     189            lcall clear_hex
0B6D 1208CE     190            lcall beep
0B70            191   ;Process Finished, Wait for it to cool
0B70            192   Cooling:
0B70 754D09     193                    mov LCD_state, #9
0B73 75453C     194            mov Target_Temp, #CoolConst
0B76 D200       195            setb ready      
0B78            196   WaitCool:        
0B78 D2FE       197            setb LEDG.6
0B7A            198            ;wait for temp to dip below 60 Celcius (Cool Constant)
0B7A 2000FB     199            jb Ready, WaitCool
0B7D            200            ;set temp to zero
0B7D 754500     201            mov Target_Temp, #0
0B80            202            ;triple beep
0B80 1208CE     203            lcall beep
0B83 1208C1     204            lcall wait
0B86 1208CE     205            lcall beep
0B89 1208C1     206            lcall wait
0B8C 1208CE     207            lcall beep
0B8F            208   ;Cool Enough (just waits PB)
0B8F 754D0A     209                    mov LCD_state, #10      
0B92            210   Done:
0B92 D2FF       211            setb LEDG.7
0B94 20F9FB     212            jb Key.1, Done
0B97 75F800     213            mov LEDG, #0
0B9A 020ACB     214            ljmp Idle
0B9D            215                    
0B9D            216   Set_Reflow_Time_Relay:
0B9D            217            Inc_Reflow_Time:
0B9D E542       217                    mov A, Reflow_Time
0B9F            217            
0B9F 20FA08     217                    jb KEY.2, Dec_Reflow_Time
0BA2 30FAFD     217            jnb KEY.2, $
0BA5 04         217                    inc A
0BA6 B42E0C     217                    cjne A, #46, Done_Reflow_Time
0BA9 14         217                    dec A
0BAA            217            Dec_Reflow_Time:        
0BAA 20FB08     217                jb KEY.3, Done_Reflow_Time
0BAD 30FBFD     217                jnb KEY.3, $
0BB0 14         217                    dec A
0BB1 B41D01     217                cjne A, #29, Done_Reflow_Time
0BB4 04         217           inc A
0BB5            217            Done_Reflow_Time:
0BB5 F542       217                    mov Reflow_Time, A
0BB7 85423A     218            mov x, Reflow_Time
0BBA 753B00     218            mov x+1, #0
0BBD 12001E     218            lcall hex2bcd
0BC0 90099A     218            mov dptr, #myLUT
0BC3            218            ; Display Digit 0
0BC3 E53E       218       mov A, bcd+0
0BC5 540F       218       anl a, #0fh
0BC7 93         218       movc A, @A+dptr
0BC8 F58E       218       mov HEX4, A
0BCA            218            ; Display Digit 1
0BCA E53E       218       mov A, bcd+0
0BCC C4         218       swap a
0BCD 540F       218       anl a, #0fh
0BCF 93         218       movc A, @A+dptr
0BD0 F58F       218       mov HEX5, A    
0BD2            218       ; Display Digit 2
0BD2 E53F       218       mov A, bcd+1
0BD4 540F       218       anl a, #0fh
0BD6 6006       218       jz Ender_Reflow_Time
0BD8 93         218       movc A, @A+dptr
0BD9 F596       218       mov HEX6, A
0BDB 020BE1     218       jmp Exit_Reflow_Time
0BDE            218       Ender_Reflow_Time:
0BDE 7596FF     218       mov HEX6, #0FFH
0BE1            218       Exit_Reflow_Time:
0BE1 22         219            ret     
0BE2            220   Set_Reflow_Temp_Relay:
0BE2            221            Inc_Reflow_Temp:
0BE2 E541       221                    mov A, Reflow_Temp
0BE4            221            
0BE4 20FA08     221                    jb KEY.2, Dec_Reflow_Temp
0BE7 30FAFD     221            jnb KEY.2, $
0BEA 04         221                    inc A
0BEB B4E70C     221                    cjne A, #231, Done_Reflow_Temp
0BEE 14         221                    dec A
0BEF            221            Dec_Reflow_Temp:        
0BEF 20FB08     221                jb KEY.3, Done_Reflow_Temp
0BF2 30FBFD     221                jnb KEY.3, $
0BF5 14         221                    dec A
0BF6 B4C701     221                cjne A, #199, Done_Reflow_Temp
0BF9 04         221           inc A
0BFA            221            Done_Reflow_Temp:
0BFA F541       221                    mov Reflow_Temp, A
0BFC 85413A     222            mov x, Reflow_Temp
0BFF 753B00     222            mov x+1, #0
0C02 12001E     222            lcall hex2bcd
0C05 90099A     222            mov dptr, #myLUT
0C08            222            ; Display Digit 0
0C08 E53E       222       mov A, bcd+0
0C0A 540F       222       anl a, #0fh
0C0C 93         222       movc A, @A+dptr
0C0D F58E       222       mov HEX4, A
0C0F            222            ; Display Digit 1
0C0F E53E       222       mov A, bcd+0
0C11 C4         222       swap a
0C12 540F       222       anl a, #0fh
0C14 93         222       movc A, @A+dptr
0C15 F58F       222       mov HEX5, A    
0C17            222       ; Display Digit 2
0C17 E53F       222       mov A, bcd+1
0C19 540F       222       anl a, #0fh
0C1B 6006       222       jz Ender_Reflow_Temp
0C1D 93         222       movc A, @A+dptr
0C1E F596       222       mov HEX6, A
0C20 020C26     222       jmp Exit_Reflow_Temp
0C23            222       Ender_Reflow_Temp:
0C23 7596FF     222       mov HEX6, #0FFH
0C26            222       Exit_Reflow_Temp:
0C26 22         223            ret     
0C27            224   Set_Soak_Temp_Relay:     
0C27            225            Inc_Soak_Temp:
0C27 E543       225                    mov A, Soak_Temp
0C29            225            
0C29 20FA08     225                    jb KEY.2, Dec_Soak_Temp
0C2C 30FAFD     225            jnb KEY.2, $
0C2F 04         225                    inc A
0C30 B4A50C     225                    cjne A, #165, Done_Soak_Temp
0C33 14         225                    dec A
0C34            225            Dec_Soak_Temp:  
0C34 20FB08     225                jb KEY.3, Done_Soak_Temp
0C37 30FBFD     225                jnb KEY.3, $
0C3A 14         225                    dec A
0C3B B48601     225                cjne A, #134, Done_Soak_Temp
0C3E 04         225           inc A
0C3F            225            Done_Soak_Temp:
0C3F F543       225                    mov Soak_Temp, A
0C41 85433A     226            mov x, Soak_Temp
0C44 753B00     226            mov x+1, #0
0C47 12001E     226            lcall hex2bcd
0C4A 90099A     226            mov dptr, #myLUT
0C4D            226            ; Display Digit 0
0C4D E53E       226       mov A, bcd+0
0C4F 540F       226       anl a, #0fh
0C51 93         226       movc A, @A+dptr
0C52 F58E       226       mov HEX4, A
0C54            226            ; Display Digit 1
0C54 E53E       226       mov A, bcd+0
0C56 C4         226       swap a
0C57 540F       226       anl a, #0fh
0C59 93         226       movc A, @A+dptr
0C5A F58F       226       mov HEX5, A    
0C5C            226       ; Display Digit 2
0C5C E53F       226       mov A, bcd+1
0C5E 540F       226       anl a, #0fh
0C60 6006       226       jz Ender_Soak_Temp
0C62 93         226       movc A, @A+dptr
0C63 F596       226       mov HEX6, A
0C65 020C6B     226       jmp Exit_Soak_Temp
0C68            226       Ender_Soak_Temp:
0C68 7596FF     226       mov HEX6, #0FFH
0C6B            226       Exit_Soak_Temp:
0C6B 22         227            ret     
0C6C            228   Set_Soak_Time_Relay:
0C6C            229            Inc_Soak_Time:
0C6C E544       229                    mov A, Soak_Time
0C6E            229            
0C6E 20FA08     229                    jb KEY.2, Dec_Soak_Time
0C71 30FAFD     229            jnb KEY.2, $
0C74 04         229                    inc A
0C75 B45B0C     229                    cjne A, #91, Done_Soak_Time
0C78 14         229                    dec A
0C79            229            Dec_Soak_Time:  
0C79 20FB08     229                jb KEY.3, Done_Soak_Time
0C7C 30FBFD     229                jnb KEY.3, $
0C7F 14         229                    dec A
0C80 B43B01     229                cjne A, #59, Done_Soak_Time
0C83 04         229           inc A
0C84            229            Done_Soak_Time:
0C84 F544       229                    mov Soak_Time, A
0C86 85443A     230            mov x, Soak_Time
0C89 753B00     230            mov x+1, #0
0C8C 12001E     230            lcall hex2bcd
0C8F 90099A     230            mov dptr, #myLUT
0C92            230            ; Display Digit 0
0C92 E53E       230       mov A, bcd+0
0C94 540F       230       anl a, #0fh
0C96 93         230       movc A, @A+dptr
0C97 F58E       230       mov HEX4, A
0C99            230            ; Display Digit 1
0C99 E53E       230       mov A, bcd+0
0C9B C4         230       swap a
0C9C 540F       230       anl a, #0fh
0C9E 93         230       movc A, @A+dptr
0C9F F58F       230       mov HEX5, A    
0CA1            230       ; Display Digit 2
0CA1 E53F       230       mov A, bcd+1
0CA3 540F       230       anl a, #0fh
0CA5 6006       230       jz Ender_Soak_Time
0CA7 93         230       movc A, @A+dptr
0CA8 F596       230       mov HEX6, A
0CAA 020CB0     230       jmp Exit_Soak_Time
0CAD            230       Ender_Soak_Time:
0CAD 7596FF     230       mov HEX6, #0FFH
0CB0            230       Exit_Soak_Time:
0CB0 22         231            ret
0CB1            232                    
0CB1            233   END
