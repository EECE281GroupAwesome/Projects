0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Mon Mar 17 11:50:07 2014
0000              5   ;--------------------------------------------------------
                  5   $name Movement_Simulator
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _turnCar_PARM_2
0000             27            public _main
0000             28            public __c51_external_startup
0000             29            public _pwmCounter
0000             30            public _beaconSignal
0000             31            public _angle
0000             32            public _turnDirection
0000             33            public _distance
0000             34            public _instruction
0000             35            public _rightSensor
0000             36            public _leftSensor
0000             37            public _pwmLeft
0000             38            public _pwmRight
0000             39            public _pwmCount
0000             40            public _Stage
0000             41            public _getDistance
0000             42            public _getAngle
0000             43            public _getDirection
0000             44            public _turnCar
0000             45            public _moveCar
0000             46            public _adjustAngle
0000             47            public _wait2ms
0000             48            public _wait1s
0000             49   ;--------------------------------------------------------
0000             50   ; Special Function Registers
0000             51   ;--------------------------------------------------------
0000             52   _ACC            DATA 0xe0
0000             53   _B              DATA 0xf0
0000             54   _PSW            DATA 0xd0
0000             55   _SP             DATA 0x81
0000             56   _SPX            DATA 0xef
0000             57   _DPL            DATA 0x82
0000             58   _DPH            DATA 0x83
0000             59   _DPLB           DATA 0xd4
0000             60   _DPHB           DATA 0xd5
0000             61   _PAGE           DATA 0xf6
0000             62   _AX             DATA 0xe1
0000             63   _BX             DATA 0xf7
0000             64   _DSPR           DATA 0xe2
0000             65   _FIRD           DATA 0xe3
0000             66   _MACL           DATA 0xe4
0000             67   _MACH           DATA 0xe5
0000             68   _PCON           DATA 0x87
0000             69   _AUXR           DATA 0x8e
0000             70   _AUXR1          DATA 0xa2
0000             71   _DPCF           DATA 0xa1
0000             72   _CKRL           DATA 0x97
0000             73   _CKCKON0        DATA 0x8f
0000             74   _CKCKON1        DATA 0xaf
0000             75   _CKSEL          DATA 0x85
0000             76   _CLKREG         DATA 0xae
0000             77   _OSCCON         DATA 0x85
0000             78   _IE             DATA 0xa8
0000             79   _IEN0           DATA 0xa8
0000             80   _IEN1           DATA 0xb1
0000             81   _IPH0           DATA 0xb7
0000             82   _IP             DATA 0xb8
0000             83   _IPL0           DATA 0xb8
0000             84   _IPH1           DATA 0xb3
0000             85   _IPL1           DATA 0xb2
0000             86   _P0             DATA 0x80
0000             87   _P1             DATA 0x90
0000             88   _P2             DATA 0xa0
0000             89   _P3             DATA 0xb0
0000             90   _P4             DATA 0xc0
0000             91   _P0M0           DATA 0xe6
0000             92   _P0M1           DATA 0xe7
0000             93   _P1M0           DATA 0xd6
0000             94   _P1M1           DATA 0xd7
0000             95   _P2M0           DATA 0xce
0000             96   _P2M1           DATA 0xcf
0000             97   _P3M0           DATA 0xc6
0000             98   _P3M1           DATA 0xc7
0000             99   _P4M0           DATA 0xbe
0000            100   _P4M1           DATA 0xbf
0000            101   _SCON           DATA 0x98
0000            102   _SBUF           DATA 0x99
0000            103   _SADEN          DATA 0xb9
0000            104   _SADDR          DATA 0xa9
0000            105   _BDRCON         DATA 0x9b
0000            106   _BRL            DATA 0x9a
0000            107   _TCON           DATA 0x88
0000            108   _TMOD           DATA 0x89
0000            109   _TCONB          DATA 0x91
0000            110   _TL0            DATA 0x8a
0000            111   _TH0            DATA 0x8c
0000            112   _TL1            DATA 0x8b
0000            113   _TH1            DATA 0x8d
0000            114   _RL0            DATA 0xf2
0000            115   _RH0            DATA 0xf3
0000            116   _RTL1           DATA 0xf4
0000            117   _RH1            DATA 0xf5
0000            118   _WDTRST         DATA 0xa6
0000            119   _WDTPRG         DATA 0xa7
0000            120   _T2CON          DATA 0xc8
0000            121   _T2MOD          DATA 0xc9
0000            122   _RCAP2H         DATA 0xcb
0000            123   _RCAP2L         DATA 0xca
0000            124   _TH2            DATA 0xcd
0000            125   _TL2            DATA 0xcc
0000            126   _SPCON          DATA 0xc3
0000            127   _SPSTA          DATA 0xc4
0000            128   _SPDAT          DATA 0xc5
0000            129   _SSCON          DATA 0x93
0000            130   _SSCS           DATA 0x94
0000            131   _SSDAT          DATA 0x95
0000            132   _SSADR          DATA 0x96
0000            133   _KBLS           DATA 0x9c
0000            134   _KBE            DATA 0x9d
0000            135   _KBF            DATA 0x9e
0000            136   _KBMOD          DATA 0x9f
0000            137   _BMSEL          DATA 0x92
0000            138   _FCON           DATA 0xd2
0000            139   _EECON          DATA 0xd2
0000            140   _ACSRA          DATA 0xa3
0000            141   _ACSRB          DATA 0xab
0000            142   _AREF           DATA 0xbd
0000            143   _DADC           DATA 0xa4
0000            144   _DADI           DATA 0xa5
0000            145   _DADL           DATA 0xac
0000            146   _DADH           DATA 0xad
0000            147   _CCON           DATA 0xd8
0000            148   _CMOD           DATA 0xd9
0000            149   _CL             DATA 0xe9
0000            150   _CH             DATA 0xf9
0000            151   _CCAPM0         DATA 0xda
0000            152   _CCAPM1         DATA 0xdb
0000            153   _CCAPM2         DATA 0xdc
0000            154   _CCAPM3         DATA 0xdd
0000            155   _CCAPM4         DATA 0xde
0000            156   _CCAP0H         DATA 0xfa
0000            157   _CCAP1H         DATA 0xfb
0000            158   _CCAP2H         DATA 0xfc
0000            159   _CCAP3H         DATA 0xfd
0000            160   _CCAP4H         DATA 0xfe
0000            161   _CCAP0L         DATA 0xea
0000            162   _CCAP1L         DATA 0xeb
0000            163   _CCAP2L         DATA 0xec
0000            164   _CCAP3L         DATA 0xed
0000            165   _CCAP4L         DATA 0xee
0000            166   ;--------------------------------------------------------
0000            167   ; special function bits
0000            168   ;--------------------------------------------------------
0000            169   _ACC_0          BIT 0xe0
0000            170   _ACC_1          BIT 0xe1
0000            171   _ACC_2          BIT 0xe2
0000            172   _ACC_3          BIT 0xe3
0000            173   _ACC_4          BIT 0xe4
0000            174   _ACC_5          BIT 0xe5
0000            175   _ACC_6          BIT 0xe6
0000            176   _ACC_7          BIT 0xe7
0000            177   _B_0            BIT 0xf0
0000            178   _B_1            BIT 0xf1
0000            179   _B_2            BIT 0xf2
0000            180   _B_3            BIT 0xf3
0000            181   _B_4            BIT 0xf4
0000            182   _B_5            BIT 0xf5
0000            183   _B_6            BIT 0xf6
0000            184   _B_7            BIT 0xf7
0000            185   _P              BIT 0xd0
0000            186   _F1             BIT 0xd1
0000            187   _OV             BIT 0xd2
0000            188   _RS0            BIT 0xd3
0000            189   _RS1            BIT 0xd4
0000            190   _F0             BIT 0xd5
0000            191   _AC             BIT 0xd6
0000            192   _CY             BIT 0xd7
0000            193   _EX0            BIT 0xa8
0000            194   _ET0            BIT 0xa9
0000            195   _EX1            BIT 0xaa
0000            196   _ET1            BIT 0xab
0000            197   _ES             BIT 0xac
0000            198   _ET2            BIT 0xad
0000            199   _EC             BIT 0xae
0000            200   _EA             BIT 0xaf
0000            201   _PX0            BIT 0xb8
0000            202   _PT0            BIT 0xb9
0000            203   _PX1            BIT 0xba
0000            204   _PT1            BIT 0xbb
0000            205   _PS             BIT 0xbc
0000            206   _PT2            BIT 0xbd
0000            207   _IP0D           BIT 0xbf
0000            208   _PPCL           BIT 0xbe
0000            209   _PT2L           BIT 0xbd
0000            210   _PLS            BIT 0xbc
0000            211   _PT1L           BIT 0xbb
0000            212   _PX1L           BIT 0xba
0000            213   _PT0L           BIT 0xb9
0000            214   _PX0L           BIT 0xb8
0000            215   _P0_0           BIT 0x80
0000            216   _P0_1           BIT 0x81
0000            217   _P0_2           BIT 0x82
0000            218   _P0_3           BIT 0x83
0000            219   _P0_4           BIT 0x84
0000            220   _P0_5           BIT 0x85
0000            221   _P0_6           BIT 0x86
0000            222   _P0_7           BIT 0x87
0000            223   _P1_0           BIT 0x90
0000            224   _P1_1           BIT 0x91
0000            225   _P1_2           BIT 0x92
0000            226   _P1_3           BIT 0x93
0000            227   _P1_4           BIT 0x94
0000            228   _P1_5           BIT 0x95
0000            229   _P1_6           BIT 0x96
0000            230   _P1_7           BIT 0x97
0000            231   _P2_0           BIT 0xa0
0000            232   _P2_1           BIT 0xa1
0000            233   _P2_2           BIT 0xa2
0000            234   _P2_3           BIT 0xa3
0000            235   _P2_4           BIT 0xa4
0000            236   _P2_5           BIT 0xa5
0000            237   _P2_6           BIT 0xa6
0000            238   _P2_7           BIT 0xa7
0000            239   _P3_0           BIT 0xb0
0000            240   _P3_1           BIT 0xb1
0000            241   _P3_2           BIT 0xb2
0000            242   _P3_3           BIT 0xb3
0000            243   _P3_4           BIT 0xb4
0000            244   _P3_5           BIT 0xb5
0000            245   _P3_6           BIT 0xb6
0000            246   _P3_7           BIT 0xb7
0000            247   _RXD            BIT 0xb0
0000            248   _TXD            BIT 0xb1
0000            249   _INT0           BIT 0xb2
0000            250   _INT1           BIT 0xb3
0000            251   _T0             BIT 0xb4
0000            252   _T1             BIT 0xb5
0000            253   _WR             BIT 0xb6
0000            254   _RD             BIT 0xb7
0000            255   _P4_0           BIT 0xc0
0000            256   _P4_1           BIT 0xc1
0000            257   _P4_2           BIT 0xc2
0000            258   _P4_3           BIT 0xc3
0000            259   _P4_4           BIT 0xc4
0000            260   _P4_5           BIT 0xc5
0000            261   _P4_6           BIT 0xc6
0000            262   _P4_7           BIT 0xc7
0000            263   _RI             BIT 0x98
0000            264   _TI             BIT 0x99
0000            265   _RB8            BIT 0x9a
0000            266   _TB8            BIT 0x9b
0000            267   _REN            BIT 0x9c
0000            268   _SM2            BIT 0x9d
0000            269   _SM1            BIT 0x9e
0000            270   _SM0            BIT 0x9f
0000            271   _IT0            BIT 0x88
0000            272   _IE0            BIT 0x89
0000            273   _IT1            BIT 0x8a
0000            274   _IE1            BIT 0x8b
0000            275   _TR0            BIT 0x8c
0000            276   _TF0            BIT 0x8d
0000            277   _TR1            BIT 0x8e
0000            278   _TF1            BIT 0x8f
0000            279   _CP_RL2         BIT 0xc8
0000            280   _C_T2           BIT 0xc9
0000            281   _TR2            BIT 0xca
0000            282   _EXEN2          BIT 0xcb
0000            283   _TCLK           BIT 0xcc
0000            284   _RCLK           BIT 0xcd
0000            285   _EXF2           BIT 0xce
0000            286   _TF2            BIT 0xcf
0000            287   _CF             BIT 0xdf
0000            288   _CR             BIT 0xde
0000            289   _CCF4           BIT 0xdc
0000            290   _CCF3           BIT 0xdb
0000            291   _CCF2           BIT 0xda
0000            292   _CCF1           BIT 0xd9
0000            293   _CCF0           BIT 0xd8
0000            294   ;--------------------------------------------------------
0000            295   ; overlayable register banks
0000            296   ;--------------------------------------------------------
0000            297            rbank0 segment data overlay
0000            298   ;--------------------------------------------------------
0000            299   ; overlayable bit register bank
0000            300   ;--------------------------------------------------------
0000            301            rseg BIT_BANK
0000            302   bits:
0000            303            ds 1
0001            304            b0 equ  bits.0 
0001            305            b1 equ  bits.1 
0001            306            b2 equ  bits.2 
0001            307            b3 equ  bits.3 
0001            308            b4 equ  bits.4 
0001            309            b5 equ  bits.5 
0001            310            b6 equ  bits.6 
0001            311            b7 equ  bits.7 
0001            312   ;--------------------------------------------------------
0001            313   ; internal ram data
0001            314   ;--------------------------------------------------------
0000            315            rseg R_DSEG
0000            316   _Stage:
0000            317            ds 2
0002            318   _pwmCount:
0002            319            ds 2
0004            320   _pwmRight:
0004            321            ds 2
0006            322   _pwmLeft:
0006            323            ds 2
0008            324   _leftSensor:
0008            325            ds 2
000A            326   _rightSensor:
000A            327            ds 2
000C            328   _instruction:
000C            329            ds 2
000E            330   _distance:
000E            331            ds 2
0010            332   _turnDirection:
0010            333            ds 1
0011            334   _angle:
0011            335            ds 4
0015            336   ;--------------------------------------------------------
0015            337   ; overlayable items in internal ram 
0015            338   ;--------------------------------------------------------
0000            339            rseg    R_OSEG
0000            340   _turnCar_PARM_2:
0000            341            ds 2
0002            342   ;--------------------------------------------------------
0002            343   ; indirectly addressable internal ram data
0002            344   ;--------------------------------------------------------
0000            345            rseg R_ISEG
0000            346   ;--------------------------------------------------------
0000            347   ; absolute internal ram data
0000            348   ;--------------------------------------------------------
0000            349            DSEG
0000            350   ;--------------------------------------------------------
0000            351   ; bit data
0000            352   ;--------------------------------------------------------
0000            353            rseg R_BSEG
0000            354   _pwmCounter_sloc0_1_0:
0000            355            DBIT    1
0001            356   ;--------------------------------------------------------
0001            357   ; paged external ram data
0001            358   ;--------------------------------------------------------
0000            359            rseg R_PSEG
0000            360   ;--------------------------------------------------------
0000            361   ; external ram data
0000            362   ;--------------------------------------------------------
0000            363            rseg R_XSEG
0000            364   ;--------------------------------------------------------
0000            365   ; absolute external ram data
0000            366   ;--------------------------------------------------------
0000            367            XSEG
0000            368   ;--------------------------------------------------------
0000            369   ; external initialized ram data
0000            370   ;--------------------------------------------------------
0000            371            rseg R_IXSEG
0000            372            rseg R_HOME
0000            373            rseg R_GSINIT
0000            374            rseg R_CSEG
0000            375   ;--------------------------------------------------------
0000            376   ; Reset entry point and interrupt vectors
0000            377   ;--------------------------------------------------------
0000            378            CSEG at 0x0000
0000 020100     379            ljmp    _crt0
000B            380            CSEG at 0x000b
000B 020100     381            ljmp    _pwmCounter
001B            382            CSEG at 0x001b
001B 020100     383            ljmp    _beaconSignal
001E            384   ;--------------------------------------------------------
001E            385   ; global & static initialisations
001E            386   ;--------------------------------------------------------
0000            387            rseg R_HOME
0000            388            rseg R_GSINIT
0000            389            rseg R_GSINIT
0000            390   ;--------------------------------------------------------
0000            391   ; data variables initialization
0000            392   ;--------------------------------------------------------
0000            393            rseg R_DINIT
0000            394   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:35: volatile unsigned int Stage = 0;
0000 E4         395            clr     a
0001 F530       396            mov     _Stage,a
0003 F531       397            mov     (_Stage + 1),a
0005            398   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:36: volatile unsigned int pwmCount = 0;
0005 E4         399            clr     a
0006 F5F0       400            mov     _pwmCount,a
0008 F5F1       401            mov     (_pwmCount + 1),a
000A            402   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:37: volatile int pwmRight = 0;
000A E4         403            clr     a
000B F5B0       404            mov     _pwmRight,a
000D F5B1       405            mov     (_pwmRight + 1),a
000F            406   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:38: volatile int pwmLeft = 0;
000F E4         407            clr     a
0010 F570       408            mov     _pwmLeft,a
0012 F571       409            mov     (_pwmLeft + 1),a
0014            410   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:39: volatile unsigned int leftSensor = 0;
0014 E4         411            clr     a
0015 F530       412            mov     _leftSensor,a
0017 F531       413            mov     (_leftSensor + 1),a
0019            414   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:40: volatile unsigned int rightSensor = 0;
0019 E4         415            clr     a
001A F5F0       416            mov     _rightSensor,a
001C F5F1       417            mov     (_rightSensor + 1),a
001E            418            ; The linker places a 'ret' at the end of segment R_DINIT.
001E            419   ;--------------------------------------------------------
001E            420   ; code
001E            421   ;--------------------------------------------------------
0000            422            rseg R_CSEG
0000            423   ;------------------------------------------------------------
0000            424   ;Allocation info for local variables in function 'beaconSignal'
0000            425   ;------------------------------------------------------------
0000            426   ;------------------------------------------------------------
0000            427   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:59: void beaconSignal() interrupt 3
0000            428   ;        -----------------------------------------
0000            429   ;         function beaconSignal
0000            430   ;        -----------------------------------------
0000            431   _beaconSignal:
0000            432            using   0
0000 C0E0       433            push    acc
0002            434   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:61: instruction=0;
0002 E4         435            clr     a
0003 F5C0       436            mov     _instruction,a
0005 F5C1       437            mov     (_instruction + 1),a
0007 D0E0       438            pop     acc
0009 32         439            reti
000A            440   ;        eliminated unneeded push/pop psw
000A            441   ;        eliminated unneeded push/pop dpl
000A            442   ;        eliminated unneeded push/pop dph
000A            443   ;        eliminated unneeded push/pop b
000A            444   ;------------------------------------------------------------
000A            445   ;Allocation info for local variables in function 'pwmCounter'
000A            446   ;------------------------------------------------------------
000A            447   ;------------------------------------------------------------
000A            448   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:64: void pwmCounter() interrupt 1
000A            449   ;        -----------------------------------------
000A            450   ;         function pwmCounter
000A            451   ;        -----------------------------------------
000A            452   _pwmCounter:
000A C070       453            push    bits
000C C0E0       454            push    acc
000E C0F0       455            push    b
0010 C082       456            push    dpl
0012 C083       457            push    dph
0014 C002       458            push    (0+2)
0016 C003       459            push    (0+3)
0018 C004       460            push    (0+4)
001A C005       461            push    (0+5)
001C C006       462            push    (0+6)
001E C007       463            push    (0+7)
0020 C000       464            push    (0+0)
0022 C001       465            push    (0+1)
0024 C0D0       466            push    psw
0026 75D000     467            mov     psw,#0x00
0029            468   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:66: angle = getAngle();
0029 120100     469            lcall   _getAngle
002C 858200     470            mov     _angle,dpl
002F 858301     471            mov     (_angle + 1),dph
0032 85F002     472            mov     (_angle + 2),b
0035 F503       473            mov     (_angle + 3),a
0037            474   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:67: distance = getDistance();
0037 120100     475            lcall   _getDistance
003A 858280     476            mov     _distance,dpl
003D 858381     477            mov     (_distance + 1),dph
0040            478   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:68: if(++pwmCount>99)
0040 7401       479            mov     a,#0x01
0042 25F0       480            add     a,_pwmCount
0044 F5F0       481            mov     _pwmCount,a
0046 E4         482            clr     a
0047 35F1       483            addc    a,(_pwmCount + 1)
0049 F5F1       484            mov     (_pwmCount + 1),a
004B C3         485            clr     c
004C 7463       486            mov     a,#0x63
004E 95F0       487            subb    a,_pwmCount
0050 E4         488            clr     a
0051 95F1       489            subb    a,(_pwmCount + 1)
0053 5001       490            jnc     L003002?
0055            491   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:69: pwmCount = 0;
0055 E4         492            clr     a
0056 F5F0       493            mov     _pwmCount,a
0058 F5F1       494            mov     (_pwmCount + 1),a
005A            495   L003002?:
005A            496   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:71: if(pwmLeft>0)
005A C3         497            clr     c
005B E4         498            clr     a
005C 9570       499            subb    a,_pwmLeft
005E E4         500            clr     a
005F 6480       501            xrl     a,#0x80
0061 8571F0     502            mov     b,(_pwmLeft + 1)
0064 63F080     503            xrl     b,#0x80
0067 95F0       504            subb    a,b
0069 5001       505            jnc     L003004?
006B            506   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:73: P0_0 =(pwmLeft>pwmCount)?0:1;
006B AA70       507            mov     r2,_pwmLeft
006D AB71       508            mov     r3,(_pwmLeft + 1)
006F C3         509            clr     c
0070 E5F0       510            mov     a,_pwmCount
0072 9A         511            subb    a,r2
0073 E5F1       512            mov     a,(_pwmCount + 1)
0075 9B         513            subb    a,r3
0076 9280       514            mov  _pwmCounter_sloc0_1_0,c
0078 B3         515            cpl     c
0079 9280       516            mov     _P0_0,c
007B            517   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:74: P0_2 =1;
007B D282       518            setb    _P0_2
007D            519   L003004?:
007D            520   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:76: if(pwmLeft<0)
007D E571       521            mov     a,(_pwmLeft + 1)
007F 30E7C0     522            jnb     acc.7,L003006?
0082            523   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:78: P0_2=(pwmLeft>pwmCount)?0:1;
0082 AA70       524            mov     r2,_pwmLeft
0084 AB71       525            mov     r3,(_pwmLeft + 1)
0086 C3         526            clr     c
0087 E5F0       527            mov     a,_pwmCount
0089 9A         528            subb    a,r2
008A E5F1       529            mov     a,(_pwmCount + 1)
008C 9B         530            subb    a,r3
008D 9280       531            mov  _pwmCounter_sloc0_1_0,c
008F B3         532            cpl     c
0090 9282       533            mov     _P0_2,c
0092            534   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:79: P0_0=1;
0092 D280       535            setb    _P0_0
0094            536   L003006?:
0094            537   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:82: if(pwmRight>0)
0094 C3         538            clr     c
0095 E4         539            clr     a
0096 95B0       540            subb    a,_pwmRight
0098 E4         541            clr     a
0099 6480       542            xrl     a,#0x80
009B 85B1F0     543            mov     b,(_pwmRight + 1)
009E 63F080     544            xrl     b,#0x80
00A1 95F0       545            subb    a,b
00A3 5001       546            jnc     L003008?
00A5            547   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:84: P0_4=(pwmRight>pwmCount)?0:1;
00A5 AAB0       548            mov     r2,_pwmRight
00A7 ABB1       549            mov     r3,(_pwmRight + 1)
00A9 C3         550            clr     c
00AA E5F0       551            mov     a,_pwmCount
00AC 9A         552            subb    a,r2
00AD E5F1       553            mov     a,(_pwmCount + 1)
00AF 9B         554            subb    a,r3
00B0 9280       555            mov  _pwmCounter_sloc0_1_0,c
00B2 B3         556            cpl     c
00B3 9284       557            mov     _P0_4,c
00B5            558   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:85: P0_6=1;
00B5 D286       559            setb    _P0_6
00B7            560   L003008?:
00B7            561   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:87: if(pwmRight<0)
00B7 E5B1       562            mov     a,(_pwmRight + 1)
00B9 30E740     563            jnb     acc.7,L003011?
00BC            564   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:89: P0_6=(pwmRight>pwmCount)?0:1;
00BC AAB0       565            mov     r2,_pwmRight
00BE ABB1       566            mov     r3,(_pwmRight + 1)
00C0 C3         567            clr     c
00C1 E5F0       568            mov     a,_pwmCount
00C3 9A         569            subb    a,r2
00C4 E5F1       570            mov     a,(_pwmCount + 1)
00C6 9B         571            subb    a,r3
00C7 9280       572            mov  _pwmCounter_sloc0_1_0,c
00C9 B3         573            cpl     c
00CA 9286       574            mov     _P0_6,c
00CC            575   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:90: P0_4=1;
00CC D284       576            setb    _P0_4
00CE            577   L003011?:
00CE D0D0       578            pop     psw
00D0 D001       579            pop     (0+1)
00D2 D000       580            pop     (0+0)
00D4 D007       581            pop     (0+7)
00D6 D006       582            pop     (0+6)
00D8 D005       583            pop     (0+5)
00DA D004       584            pop     (0+4)
00DC D003       585            pop     (0+3)
00DE D002       586            pop     (0+2)
00E0 D083       587            pop     dph
00E2 D082       588            pop     dpl
00E4 D0F0       589            pop     b
00E6 D0E0       590            pop     acc
00E8 D070       591            pop     bits
00EA 32         592            reti
00EB            593   ;------------------------------------------------------------
00EB            594   ;Allocation info for local variables in function '_c51_external_startup'
00EB            595   ;------------------------------------------------------------
00EB            596   ;------------------------------------------------------------
00EB            597   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:98: unsigned char _c51_external_startup(void)
00EB            598   ;        -----------------------------------------
00EB            599   ;         function _c51_external_startup
00EB            600   ;        -----------------------------------------
00EB            601   __c51_external_startup:
00EB            602   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:101: P0M0 = 0;   P0M1 = 0;
00EB 75E600     603            mov     _P0M0,#0x00
00EE 75E700     604            mov     _P0M1,#0x00
00F1            605   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:102: P1M0 = 0;   P1M1 = 0;
00F1 75D600     606            mov     _P1M0,#0x00
00F4 75D700     607            mov     _P1M1,#0x00
00F7            608   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:103: P2M0 = 0;   P2M1 = 0;
00F7 75CE00     609            mov     _P2M0,#0x00
00FA 75CF00     610            mov     _P2M1,#0x00
00FD            611   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:104: P3M0 = 0;   P3M1 = 0;
00FD 75C600     612            mov     _P3M0,#0x00
0100 75C700     613            mov     _P3M1,#0x00
0103            614   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:105: AUXR = 0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
0103 758E11     615            mov     _AUXR,#0x11
0106            616   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:106: P4M0 = 0;   P4M1 = 0;
0106 75BE00     617            mov     _P4M0,#0x00
0109 75BF00     618            mov     _P4M1,#0x00
010C            619   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:109: PCON|=0x80;
010C 438780     620            orl     _PCON,#0x80
010F            621   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:110: SCON = 0x52;
010F 759852     622            mov     _SCON,#0x52
0112            623   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:111: BDRCON =0;
0112 759B00     624            mov     _BDRCON,#0x00
0115            625   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:112: BRL=BRG_VAL;
0115 759AFA     626            mov     _BRL,#0xFA
0118            627   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:113: BDRCON=BRR|TBCK|RBCK|SPD;
0118 759B1E     628            mov     _BDRCON,#0x1E
011B            629   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:115: TMOD = 0x01;        // Timer 0 as 16-bit timer      
011B 758901     630            mov     _TMOD,#0x01
011E            631   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:116: TH0 = RH0 = TIMER0_RELOAD_VALUE / 0x100;
011E 75F3FF     632            mov     _RH0,#0xFF
0121 758CFF     633            mov     _TH0,#0xFF
0124            634   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:117: TL0 = RL0 = TIMER0_RELOAD_VALUE % 0x100;
0124 75F248     635            mov     _RL0,#0x48
0127 758A48     636            mov     _TL0,#0x48
012A            637   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:118: TR0 = 1;
012A D28C       638            setb    _TR0
012C            639   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:119: ET0 = 1;    // Enable timer 0 interrupt
012C D2A9       640            setb    _ET0
012E            641   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:120: EX0 = 1;    // Enable external interrupt 0
012E D2A8       642            setb    _EX0
0130            643   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:121: IT0 = 1;
0130 D288       644            setb    _IT0
0132            645   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:122: EA = 1;     // Enable global interrupts
0132 D2AF       646            setb    _EA
0134            647   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:125: pwmRight=0;
0134            648   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:126: pwmLeft=0;
0134            649   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:127: instruction=0;
0134 E4         650            clr     a
0135 F5B0       651            mov     _pwmRight,a
0137 F5B1       652            mov     (_pwmRight + 1),a
0139 F570       653            mov     _pwmLeft,a
013B F571       654            mov     (_pwmLeft + 1),a
013D F5C0       655            mov     _instruction,a
013F F5C1       656            mov     (_instruction + 1),a
0141            657   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:128: Stage=3;
0141 753003     658            mov     _Stage,#0x03
0144 E4         659            clr     a
0145 F531       660            mov     (_Stage + 1),a
0147            661   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:129: return 0;
0147 758200     662            mov     dpl,#0x00
014A 22         663            ret
014B            664   ;------------------------------------------------------------
014B            665   ;Allocation info for local variables in function 'main'
014B            666   ;------------------------------------------------------------
014B            667   ;------------------------------------------------------------
014B            668   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:133: int main (void)
014B            669   ;        -----------------------------------------
014B            670   ;         function main
014B            671   ;        -----------------------------------------
014B            672   _main:
014B            673   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:137: while (instruction==0)
014B            674   L005001?:
014B E5C0       675            mov     a,_instruction
014D 45C1       676            orl     a,(_instruction + 1)
014F 7001       677            jnz     L005003?
0151            678   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:139: moveCar();
0151 120100     679            lcall   _moveCar
0154 8001       680            sjmp    L005001?
0156            681   L005003?:
0156            682   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:142: switch (instruction)
0156 AAC0       683            mov     r2,_instruction
0158 ABC1       684            mov     r3,(_instruction + 1)
015A BA0100     685            cjne    r2,#0x01,L005030?
015D BB0000     686            cjne    r3,#0x00,L005030?
0160 8001       687            sjmp    L005004?
0162            688   L005030?:
0162 BA0280     689            cjne    r2,#0x02,L005031?
0165 BB0080     690            cjne    r3,#0x00,L005031?
0168 8001       691            sjmp    L005007?
016A            692   L005031?:
016A BA0300     693            cjne    r2,#0x03,L005032?
016D BB0000     694            cjne    r3,#0x00,L005032?
0170 8001       695            sjmp    L005010?
0172            696   L005032?:
0172 BA0480     697            cjne    r2,#0x04,L005033?
0175 BB0080     698            cjne    r3,#0x00,L005033?
0178 8001       699            sjmp    L005014?
017A            700   L005033?:
017A            701   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:144: case 1: //Move Forward to Next Node
017A BA0500     702            cjne    r2,#0x05,L005013?
017D BB0000     703            cjne    r3,#0x00,L005013?
0180 8001       704            sjmp    L005014?
0182            705   L005004?:
0182            706   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:145: if(Stage!=0)
0182 E530       707            mov     a,_Stage
0184 4531       708            orl     a,(_Stage + 1)
0186 6001       709            jz      L005014?
0188            710   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:146: Stage--;
0188 1530       711            dec     _Stage
018A 74FF       712            mov     a,#0xff
018C B53040     713            cjne    a,_Stage,L005036?
018F 1531       714            dec     (_Stage + 1)
0191            715   L005036?:
0191            716   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:147: break;
0191            717   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:148: case 2: //Move Backwards to Next Node
0191 8001       718            sjmp    L005014?
0193            719   L005007?:
0193            720   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:149: if(Stage!=5)
0193 7405       721            mov     a,#0x05
0195 B53080     722            cjne    a,_Stage,L005037?
0198 E4         723            clr     a
0199 B53180     724            cjne    a,(_Stage + 1),L005037?
019C 8001       725            sjmp    L005014?
019E            726   L005037?:
019E            727   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:150: Stage++;
019E 7401       728            mov     a,#0x01
01A0 2530       729            add     a,_Stage
01A2 F530       730            mov     _Stage,a
01A4 E4         731            clr     a
01A5 3531       732            addc    a,(_Stage + 1)
01A7 F531       733            mov     (_Stage + 1),a
01A9            734   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:151: break;
01A9            735   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:152: case 3: //180 Turn
01A9 8001       736            sjmp    L005014?
01AB            737   L005010?:
01AB            738   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:153: pwmLeft=50;
01AB 757032     739            mov     _pwmLeft,#0x32
01AE E4         740            clr     a
01AF F571       741            mov     (_pwmLeft + 1),a
01B1            742   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:154: pwmRight=(-50);
01B1 75B0CE     743            mov     _pwmRight,#0xCE
01B4 75B1FF     744            mov     (_pwmRight + 1),#0xFF
01B7            745   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:155: wait1s();
01B7 120100     746            lcall   _wait1s
01BA            747   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:156: pwmLeft=pwmRight=0;
01BA E4         748            clr     a
01BB F5B0       749            mov     _pwmRight,a
01BD F5B1       750            mov     (_pwmRight + 1),a
01BF F570       751            mov     _pwmLeft,a
01C1 F571       752            mov     (_pwmLeft + 1),a
01C3            753   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:157: break;
01C3            754   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:164: default: //Turn on LED for bad instrucion
01C3 8001       755            sjmp    L005014?
01C5            756   L005013?:
01C5            757   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:165: RED=1;
01C5 D280       758            setb    _P0_0
01C7            759   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:166: GRN=0;
01C7 C281       760            clr     _P0_1
01C9            761   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:167: YLW=0;
01C9 C282       762            clr     _P0_2
01CB            763   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:169: }
01CB            764   L005014?:
01CB            765   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:171: instruction=0;
01CB E4         766            clr     a
01CC F5C0       767            mov     _instruction,a
01CE F5C1       768            mov     (_instruction + 1),a
01D0            769   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:173: return 0;
01D0 020100     770            ljmp    L005001?
01D3            771   ;------------------------------------------------------------
01D3            772   ;Allocation info for local variables in function 'getDistance'
01D3            773   ;------------------------------------------------------------
01D3            774   ;------------------------------------------------------------
01D3            775   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:184: unsigned int getDistance() 
01D3            776   ;        -----------------------------------------
01D3            777   ;         function getDistance
01D3            778   ;        -----------------------------------------
01D3            779   _getDistance:
01D3            780   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:186: return 0;
01D3 900000     781            mov     dptr,#0x0000
01D6 22         782            ret
01D7            783   ;------------------------------------------------------------
01D7            784   ;Allocation info for local variables in function 'getAngle'
01D7            785   ;------------------------------------------------------------
01D7            786   ;------------------------------------------------------------
01D7            787   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:195: float getAngle()
01D7            788   ;        -----------------------------------------
01D7            789   ;         function getAngle
01D7            790   ;        -----------------------------------------
01D7            791   _getAngle:
01D7            792   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:198: return angle;
01D7 850082     793            mov     dpl,_angle
01DA 850183     794            mov     dph,(_angle + 1)
01DD 8502F0     795            mov     b,(_angle + 2)
01E0 E503       796            mov     a,(_angle + 3)
01E2 22         797            ret
01E3            798   ;------------------------------------------------------------
01E3            799   ;Allocation info for local variables in function 'getDirection'
01E3            800   ;------------------------------------------------------------
01E3            801   ;------------------------------------------------------------
01E3            802   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:206: char getDirection()
01E3            803   ;        -----------------------------------------
01E3            804   ;         function getDirection
01E3            805   ;        -----------------------------------------
01E3            806   _getDirection:
01E3            807   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:210: return 0;
01E3 758200     808            mov     dpl,#0x00
01E6 22         809            ret
01E7            810   ;------------------------------------------------------------
01E7            811   ;Allocation info for local variables in function 'turnCar'
01E7            812   ;------------------------------------------------------------
01E7            813   ;Rwheel                    Allocated with name '_turnCar_PARM_2'
01E7            814   ;Lwheel                    Allocated to registers 
01E7            815   ;------------------------------------------------------------
01E7            816   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:218: void turnCar(unsigned int Lwheel, unsigned int Rwheel)
01E7            817   ;        -----------------------------------------
01E7            818   ;         function turnCar
01E7            819   ;        -----------------------------------------
01E7            820   _turnCar:
01E7            821   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:223: return;
01E7 22         822            ret
01E8            823   ;------------------------------------------------------------
01E8            824   ;Allocation info for local variables in function 'moveCar'
01E8            825   ;------------------------------------------------------------
01E8            826   ;------------------------------------------------------------
01E8            827   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:231: void moveCar()
01E8            828   ;        -----------------------------------------
01E8            829   ;         function moveCar
01E8            830   ;        -----------------------------------------
01E8            831   _moveCar:
01E8            832   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:233: if(distance > PRESETS[Stage])
01E8 E530       833            mov     a,_Stage
01EA 25E0       834            add     a,acc
01EC FA         835            mov     r2,a
01ED E531       836            mov     a,(_Stage + 1)
01EF 33         837            rlc     a
01F0 FB         838            mov     r3,a
01F1 EA         839            mov     a,r2
01F2 24C0       840            add     a,#_PRESETS
01F4 F582       841            mov     dpl,a
01F6 EB         842            mov     a,r3
01F7 3488       843            addc    a,#(_PRESETS >> 8)
01F9 F583       844            mov     dph,a
01FB E4         845            clr     a
01FC 93         846            movc    a,@a+dptr
01FD FA         847            mov     r2,a
01FE A3         848            inc     dptr
01FF E4         849            clr     a
0200 93         850            movc    a,@a+dptr
0201 FB         851            mov     r3,a
0202 C3         852            clr     c
0203 EA         853            mov     a,r2
0204 9580       854            subb    a,_distance
0206 EB         855            mov     a,r3
0207 9581       856            subb    a,(_distance + 1)
0209 5001       857            jnc     L010005?
020B            858   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:235: pwmLeft=pwmRight=(75);
020B 75B04B     859            mov     _pwmRight,#0x4B
020E E4         860            clr     a
020F F5B1       861            mov     (_pwmRight + 1),a
0211 75704B     862            mov     _pwmLeft,#0x4B
0214 E4         863            clr     a
0215 F571       864            mov     (_pwmLeft + 1),a
0217            865   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:236: while(distance > PRESETS[Stage])
0217            866   L010001?:
0217 E530       867            mov     a,_Stage
0219 25E0       868            add     a,acc
021B FA         869            mov     r2,a
021C E531       870            mov     a,(_Stage + 1)
021E 33         871            rlc     a
021F FB         872            mov     r3,a
0220 EA         873            mov     a,r2
0221 24C0       874            add     a,#_PRESETS
0223 F582       875            mov     dpl,a
0225 EB         876            mov     a,r3
0226 3488       877            addc    a,#(_PRESETS >> 8)
0228 F583       878            mov     dph,a
022A E4         879            clr     a
022B 93         880            movc    a,@a+dptr
022C FA         881            mov     r2,a
022D A3         882            inc     dptr
022E E4         883            clr     a
022F 93         884            movc    a,@a+dptr
0230 FB         885            mov     r3,a
0231 C3         886            clr     c
0232 EA         887            mov     a,r2
0233 9580       888            subb    a,_distance
0235 EB         889            mov     a,r3
0236 9581       890            subb    a,(_distance + 1)
0238 5001       891            jnc     L010005?
023A            892   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:238: adjustAngle();
023A 120100     893            lcall   _adjustAngle
023D 8001       894            sjmp    L010001?
023F            895   L010005?:
023F            896   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:241: if(distance < PRESETS[Stage])
023F E530       897            mov     a,_Stage
0241 25E0       898            add     a,acc
0243 FA         899            mov     r2,a
0244 E531       900            mov     a,(_Stage + 1)
0246 33         901            rlc     a
0247 FB         902            mov     r3,a
0248 EA         903            mov     a,r2
0249 24C0       904            add     a,#_PRESETS
024B F582       905            mov     dpl,a
024D EB         906            mov     a,r3
024E 3488       907            addc    a,#(_PRESETS >> 8)
0250 F583       908            mov     dph,a
0252 E4         909            clr     a
0253 93         910            movc    a,@a+dptr
0254 FA         911            mov     r2,a
0255 A3         912            inc     dptr
0256 E4         913            clr     a
0257 93         914            movc    a,@a+dptr
0258 FB         915            mov     r3,a
0259 C3         916            clr     c
025A E580       917            mov     a,_distance
025C 9A         918            subb    a,r2
025D E581       919            mov     a,(_distance + 1)
025F 9B         920            subb    a,r3
0260 5001       921            jnc     L010010?
0262            922   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:243: pwmLeft=pwmRight=(-75);
0262 75B0B5     923            mov     _pwmRight,#0xB5
0265 75B1FF     924            mov     (_pwmRight + 1),#0xFF
0268 7570B5     925            mov     _pwmLeft,#0xB5
026B 7571FF     926            mov     (_pwmLeft + 1),#0xFF
026E            927   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:244: while(distance < PRESETS[Stage])
026E            928   L010006?:
026E E530       929            mov     a,_Stage
0270 25E0       930            add     a,acc
0272 FA         931            mov     r2,a
0273 E531       932            mov     a,(_Stage + 1)
0275 33         933            rlc     a
0276 FB         934            mov     r3,a
0277 EA         935            mov     a,r2
0278 24C0       936            add     a,#_PRESETS
027A F582       937            mov     dpl,a
027C EB         938            mov     a,r3
027D 3488       939            addc    a,#(_PRESETS >> 8)
027F F583       940            mov     dph,a
0281 E4         941            clr     a
0282 93         942            movc    a,@a+dptr
0283 FA         943            mov     r2,a
0284 A3         944            inc     dptr
0285 E4         945            clr     a
0286 93         946            movc    a,@a+dptr
0287 FB         947            mov     r3,a
0288 C3         948            clr     c
0289 E580       949            mov     a,_distance
028B 9A         950            subb    a,r2
028C E581       951            mov     a,(_distance + 1)
028E 9B         952            subb    a,r3
028F 5001       953            jnc     L010010?
0291            954   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:246: adjustAngle();
0291 120100     955            lcall   _adjustAngle
0294 8001       956            sjmp    L010006?
0296            957   L010010?:
0296            958   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:249: pwmLeft=pwmRight=0;
0296 E4         959            clr     a
0297 F5B0       960            mov     _pwmRight,a
0299 F5B1       961            mov     (_pwmRight + 1),a
029B F570       962            mov     _pwmLeft,a
029D F571       963            mov     (_pwmLeft + 1),a
029F            964   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:251: return;
029F 22         965            ret
02A0            966   ;------------------------------------------------------------
02A0            967   ;Allocation info for local variables in function 'adjustAngle'
02A0            968   ;------------------------------------------------------------
02A0            969   ;------------------------------------------------------------
02A0            970   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:253: void adjustAngle()
02A0            971   ;        -----------------------------------------
02A0            972   ;         function adjustAngle
02A0            973   ;        -----------------------------------------
02A0            974   _adjustAngle:
02A0            975   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:255: if (angle < -2)
02A0 E4         976            clr     a
02A1 C0E0       977            push    acc
02A3 C0E0       978            push    acc
02A5 C0E0       979            push    acc
02A7 74C0       980            mov     a,#0xC0
02A9 C0E0       981            push    acc
02AB 850082     982            mov     dpl,_angle
02AE 850183     983            mov     dph,(_angle + 1)
02B1 8502F0     984            mov     b,(_angle + 2)
02B4 E503       985            mov     a,(_angle + 3)
02B6 120100     986            lcall   ___fslt
02B9 AA82       987            mov     r2,dpl
02BB E581       988            mov     a,sp
02BD 24FC       989            add     a,#0xfc
02BF F581       990            mov     sp,a
02C1 EA         991            mov     a,r2
02C2 6001       992            jz      L011002?
02C4            993   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:257: pwmLeft=+5;
02C4 757005     994            mov     _pwmLeft,#0x05
02C7 E4         995            clr     a
02C8 F571       996            mov     (_pwmLeft + 1),a
02CA            997   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:258: pwmRight=-5;
02CA 75B0FB     998            mov     _pwmRight,#0xFB
02CD 75B1FF     999            mov     (_pwmRight + 1),#0xFF
02D0           1000   L011002?:
02D0           1001   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:260: if (angle > 2)
02D0 E4        1002            clr     a
02D1 C0E0      1003            push    acc
02D3 C0E0      1004            push    acc
02D5 C0E0      1005            push    acc
02D7 7440      1006            mov     a,#0x40
02D9 C0E0      1007            push    acc
02DB 850082    1008            mov     dpl,_angle
02DE 850183    1009            mov     dph,(_angle + 1)
02E1 8502F0    1010            mov     b,(_angle + 2)
02E4 E503      1011            mov     a,(_angle + 3)
02E6 120100    1012            lcall   ___fsgt
02E9 AA82      1013            mov     r2,dpl
02EB E581      1014            mov     a,sp
02ED 24FC      1015            add     a,#0xfc
02EF F581      1016            mov     sp,a
02F1 EA        1017            mov     a,r2
02F2 6001      1018            jz      L011005?
02F4           1019   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:262: pwmLeft=-5;
02F4 7570FB    1020            mov     _pwmLeft,#0xFB
02F7 7571FF    1021            mov     (_pwmLeft + 1),#0xFF
02FA           1022   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:263: pwmRight=+5;
02FA 75B005    1023            mov     _pwmRight,#0x05
02FD E4        1024            clr     a
02FE F5B1      1025            mov     (_pwmRight + 1),a
0300           1026   L011005?:
0300 22        1027            ret
0301           1028   ;------------------------------------------------------------
0301           1029   ;Allocation info for local variables in function 'wait2ms'
0301           1030   ;------------------------------------------------------------
0301           1031   ;------------------------------------------------------------
0301           1032   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:267: void wait2ms (void)
0301           1033   ;        -----------------------------------------
0301           1034   ;         function wait2ms
0301           1035   ;        -----------------------------------------
0301           1036   _wait2ms:
0301           1037   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:277: _endasm;
0301           1038            
0301           1039     ;For a 22.1184MHz crystal one machine cycle
0301           1040     ;takes 12/22.1184MHz=0.5425347us
0301           1041             J3:
0301 7C0A      1042            mov R4, #10
0303           1043             J2:
0303 7BB8      1044            mov R3, #184
0305           1045             J1:
0305 DBC0      1046            djnz R3, J1 ; 2 machine cycles-> 2*0.5425347us*184=200us
0307 DC80      1047                 djnz R4, J2 ; 200us*250=0.05s
0309 22        1048                 ret
030A           1049                
030A 22        1050            ret
030B           1051   ;------------------------------------------------------------
030B           1052   ;Allocation info for local variables in function 'wait1s'
030B           1053   ;------------------------------------------------------------
030B           1054   ;------------------------------------------------------------
030B           1055   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:281: void wait1s (void)
030B           1056   ;        -----------------------------------------
030B           1057   ;         function wait1s
030B           1058   ;        -----------------------------------------
030B           1059   _wait1s:
030B           1060   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\Movement Simulator.c:293: _endasm;
030B           1061            
030B           1062     ;For a 22.1184MHz crystal one machine cycle
030B           1063     ;takes 12/22.1184MHz=0.5425347us
030B 7A14      1064                 mov R2, #20
030D           1065             L3:
030D 79F8      1066            mov R1, #248
030F           1067             L2:
030F 78B8      1068            mov R0, #184
0311           1069             L1:
0311 D880      1070            djnz R0, L1 ; 2 machine cycles-> 2*0.5425347us*184=200us
0313 D940      1071                 djnz R1, L2 ; 200us*250=0.05s
0315 DA00      1072                 djnz R2, L3 ; 0.05s*20=1s
0317 22        1073                 ret
0318           1074                
0318 22        1075            ret
0319           1076            rseg R_CSEG
0319           1077   
0000           1078            rseg R_XINIT
0000           1079   
0000           1080            rseg R_CONST
0000           1081   _PRESETS:
0000 0500      1082            db 0x05,0x00    ;  5
0002 0A00      1083            db 0x0A,0x00    ;  10
0004 0F00      1084            db 0x0F,0x00    ;  15
0006 1400      1085            db 0x14,0x00    ;  20
0008 1900      1086            db 0x19,0x00    ;  25
000A 1E00      1087            db 0x1E,0x00    ;  30
000C           1088   
001E           1089            CSEG
001E           1090   
001E           1091   end
