0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Sat Mar 29 14:48:08 2014
0000              5   ;--------------------------------------------------------
                  5   $name core
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _MEMORY_LENGTH
0000             27            public _PRESETS
0000             28            public _NSTAGES
0000             29            public _DISTANCEBUFFER
0000             30            public _MINVOLT
0000             31            public _TURNSPEED
0000             32            public _MOVESPEED
0000             33            public _wait_one_and_half_bit_time
0000             34            public _wait_bit_time
0000             35            public _smooth_move
0000             36            public _main
0000             37            public __c51_external_startup
0000             38            public _beaconSignal
0000             39            public _pwmCounter
0000             40            public _smooth_move_PARM_2
0000             41            public _turn
0000             42            public _Stage
0000             43            public _gotInst
0000             44            public _instruction
0000             45            public _tempTurn
0000             46            public _tempR
0000             47            public _tempL
0000             48            public _distanceRight
0000             49            public _distanceLeft
0000             50            public _pwmRightTemp
0000             51            public _pwmLeftTemp
0000             52            public _rightSensor
0000             53            public _leftSensor
0000             54            public _tether
0000             55            public _direction
0000             56            public _pwmRight
0000             57            public _pwmLeft
0000             58            public _distCount
0000             59            public _pwmCount
0000             60            public _ANGLEBUFFER
0000             61            public _getDistance
0000             62            public _moveCar
0000             63            public _uTurn
0000             64            public _getSig
0000             65            public _waitBit
0000             66            public _wait1s
0000             67            public _voltage
0000             68            public _SPIWrite
0000             69            public _GetADC
0000             70   ;--------------------------------------------------------
0000             71   ; Special Function Registers
0000             72   ;--------------------------------------------------------
0000             73   _ACC            DATA 0xe0
0000             74   _B              DATA 0xf0
0000             75   _PSW            DATA 0xd0
0000             76   _SP             DATA 0x81
0000             77   _SPX            DATA 0xef
0000             78   _DPL            DATA 0x82
0000             79   _DPH            DATA 0x83
0000             80   _DPLB           DATA 0xd4
0000             81   _DPHB           DATA 0xd5
0000             82   _PAGE           DATA 0xf6
0000             83   _AX             DATA 0xe1
0000             84   _BX             DATA 0xf7
0000             85   _DSPR           DATA 0xe2
0000             86   _FIRD           DATA 0xe3
0000             87   _MACL           DATA 0xe4
0000             88   _MACH           DATA 0xe5
0000             89   _PCON           DATA 0x87
0000             90   _AUXR           DATA 0x8e
0000             91   _AUXR1          DATA 0xa2
0000             92   _DPCF           DATA 0xa1
0000             93   _CKRL           DATA 0x97
0000             94   _CKCKON0        DATA 0x8f
0000             95   _CKCKON1        DATA 0xaf
0000             96   _CKSEL          DATA 0x85
0000             97   _CLKREG         DATA 0xae
0000             98   _OSCCON         DATA 0x85
0000             99   _IE             DATA 0xa8
0000            100   _IEN0           DATA 0xa8
0000            101   _IEN1           DATA 0xb1
0000            102   _IPH0           DATA 0xb7
0000            103   _IP             DATA 0xb8
0000            104   _IPL0           DATA 0xb8
0000            105   _IPH1           DATA 0xb3
0000            106   _IPL1           DATA 0xb2
0000            107   _P0             DATA 0x80
0000            108   _P1             DATA 0x90
0000            109   _P2             DATA 0xa0
0000            110   _P3             DATA 0xb0
0000            111   _P4             DATA 0xc0
0000            112   _P0M0           DATA 0xe6
0000            113   _P0M1           DATA 0xe7
0000            114   _P1M0           DATA 0xd6
0000            115   _P1M1           DATA 0xd7
0000            116   _P2M0           DATA 0xce
0000            117   _P2M1           DATA 0xcf
0000            118   _P3M0           DATA 0xc6
0000            119   _P3M1           DATA 0xc7
0000            120   _P4M0           DATA 0xbe
0000            121   _P4M1           DATA 0xbf
0000            122   _SCON           DATA 0x98
0000            123   _SBUF           DATA 0x99
0000            124   _SADEN          DATA 0xb9
0000            125   _SADDR          DATA 0xa9
0000            126   _BDRCON         DATA 0x9b
0000            127   _BRL            DATA 0x9a
0000            128   _TCON           DATA 0x88
0000            129   _TMOD           DATA 0x89
0000            130   _TCONB          DATA 0x91
0000            131   _TL0            DATA 0x8a
0000            132   _TH0            DATA 0x8c
0000            133   _TL1            DATA 0x8b
0000            134   _TH1            DATA 0x8d
0000            135   _RL0            DATA 0xf2
0000            136   _RH0            DATA 0xf4
0000            137   _RL1            DATA 0xf3
0000            138   _RH1            DATA 0xf5
0000            139   _WDTRST         DATA 0xa6
0000            140   _WDTPRG         DATA 0xa7
0000            141   _T2CON          DATA 0xc8
0000            142   _T2MOD          DATA 0xc9
0000            143   _RCAP2H         DATA 0xcb
0000            144   _RCAP2L         DATA 0xca
0000            145   _TH2            DATA 0xcd
0000            146   _TL2            DATA 0xcc
0000            147   _SPCON          DATA 0xc3
0000            148   _SPSTA          DATA 0xc4
0000            149   _SPDAT          DATA 0xc5
0000            150   _SSCON          DATA 0x93
0000            151   _SSCS           DATA 0x94
0000            152   _SSDAT          DATA 0x95
0000            153   _SSADR          DATA 0x96
0000            154   _KBLS           DATA 0x9c
0000            155   _KBE            DATA 0x9d
0000            156   _KBF            DATA 0x9e
0000            157   _KBMOD          DATA 0x9f
0000            158   _BMSEL          DATA 0x92
0000            159   _FCON           DATA 0xd2
0000            160   _EECON          DATA 0xd2
0000            161   _ACSRA          DATA 0xa3
0000            162   _ACSRB          DATA 0xab
0000            163   _AREF           DATA 0xbd
0000            164   _DADC           DATA 0xa4
0000            165   _DADI           DATA 0xa5
0000            166   _DADL           DATA 0xac
0000            167   _DADH           DATA 0xad
0000            168   _CCON           DATA 0xd8
0000            169   _CMOD           DATA 0xd9
0000            170   _CL             DATA 0xe9
0000            171   _CH             DATA 0xf9
0000            172   _CCAPM0         DATA 0xda
0000            173   _CCAPM1         DATA 0xdb
0000            174   _CCAPM2         DATA 0xdc
0000            175   _CCAPM3         DATA 0xdd
0000            176   _CCAPM4         DATA 0xde
0000            177   _CCAP0H         DATA 0xfa
0000            178   _CCAP1H         DATA 0xfb
0000            179   _CCAP2H         DATA 0xfc
0000            180   _CCAP3H         DATA 0xfd
0000            181   _CCAP4H         DATA 0xfe
0000            182   _CCAP0L         DATA 0xea
0000            183   _CCAP1L         DATA 0xeb
0000            184   _CCAP2L         DATA 0xec
0000            185   _CCAP3L         DATA 0xed
0000            186   _CCAP4L         DATA 0xee
0000            187   ;--------------------------------------------------------
0000            188   ; special function bits
0000            189   ;--------------------------------------------------------
0000            190   _ACC_0          BIT 0xe0
0000            191   _ACC_1          BIT 0xe1
0000            192   _ACC_2          BIT 0xe2
0000            193   _ACC_3          BIT 0xe3
0000            194   _ACC_4          BIT 0xe4
0000            195   _ACC_5          BIT 0xe5
0000            196   _ACC_6          BIT 0xe6
0000            197   _ACC_7          BIT 0xe7
0000            198   _B_0            BIT 0xf0
0000            199   _B_1            BIT 0xf1
0000            200   _B_2            BIT 0xf2
0000            201   _B_3            BIT 0xf3
0000            202   _B_4            BIT 0xf4
0000            203   _B_5            BIT 0xf5
0000            204   _B_6            BIT 0xf6
0000            205   _B_7            BIT 0xf7
0000            206   _P              BIT 0xd0
0000            207   _F1             BIT 0xd1
0000            208   _OV             BIT 0xd2
0000            209   _RS0            BIT 0xd3
0000            210   _RS1            BIT 0xd4
0000            211   _F0             BIT 0xd5
0000            212   _AC             BIT 0xd6
0000            213   _CY             BIT 0xd7
0000            214   _EX0            BIT 0xa8
0000            215   _ET0            BIT 0xa9
0000            216   _EX1            BIT 0xaa
0000            217   _ET1            BIT 0xab
0000            218   _ES             BIT 0xac
0000            219   _ET2            BIT 0xad
0000            220   _EC             BIT 0xae
0000            221   _EA             BIT 0xaf
0000            222   _PX0            BIT 0xb8
0000            223   _PT0            BIT 0xb9
0000            224   _PX1            BIT 0xba
0000            225   _PT1            BIT 0xbb
0000            226   _PS             BIT 0xbc
0000            227   _PT2            BIT 0xbd
0000            228   _IP0D           BIT 0xbf
0000            229   _PPCL           BIT 0xbe
0000            230   _PT2L           BIT 0xbd
0000            231   _PLS            BIT 0xbc
0000            232   _PT1L           BIT 0xbb
0000            233   _PX1L           BIT 0xba
0000            234   _PT0L           BIT 0xb9
0000            235   _PX0L           BIT 0xb8
0000            236   _P0_0           BIT 0x80
0000            237   _P0_1           BIT 0x81
0000            238   _P0_2           BIT 0x82
0000            239   _P0_3           BIT 0x83
0000            240   _P0_4           BIT 0x84
0000            241   _P0_5           BIT 0x85
0000            242   _P0_6           BIT 0x86
0000            243   _P0_7           BIT 0x87
0000            244   _P1_0           BIT 0x90
0000            245   _P1_1           BIT 0x91
0000            246   _P1_2           BIT 0x92
0000            247   _P1_3           BIT 0x93
0000            248   _P1_4           BIT 0x94
0000            249   _P1_5           BIT 0x95
0000            250   _P1_6           BIT 0x96
0000            251   _P1_7           BIT 0x97
0000            252   _P2_0           BIT 0xa0
0000            253   _P2_1           BIT 0xa1
0000            254   _P2_2           BIT 0xa2
0000            255   _P2_3           BIT 0xa3
0000            256   _P2_4           BIT 0xa4
0000            257   _P2_5           BIT 0xa5
0000            258   _P2_6           BIT 0xa6
0000            259   _P2_7           BIT 0xa7
0000            260   _P3_0           BIT 0xb0
0000            261   _P3_1           BIT 0xb1
0000            262   _P3_2           BIT 0xb2
0000            263   _P3_3           BIT 0xb3
0000            264   _P3_4           BIT 0xb4
0000            265   _P3_5           BIT 0xb5
0000            266   _P3_6           BIT 0xb6
0000            267   _P3_7           BIT 0xb7
0000            268   _RXD            BIT 0xb0
0000            269   _TXD            BIT 0xb1
0000            270   _INT0           BIT 0xb2
0000            271   _INT1           BIT 0xb3
0000            272   _T0             BIT 0xb4
0000            273   _T1             BIT 0xb5
0000            274   _WR             BIT 0xb6
0000            275   _RD             BIT 0xb7
0000            276   _P4_0           BIT 0xc0
0000            277   _P4_1           BIT 0xc1
0000            278   _P4_2           BIT 0xc2
0000            279   _P4_3           BIT 0xc3
0000            280   _P4_4           BIT 0xc4
0000            281   _P4_5           BIT 0xc5
0000            282   _P4_6           BIT 0xc6
0000            283   _P4_7           BIT 0xc7
0000            284   _RI             BIT 0x98
0000            285   _TI             BIT 0x99
0000            286   _RB8            BIT 0x9a
0000            287   _TB8            BIT 0x9b
0000            288   _REN            BIT 0x9c
0000            289   _SM2            BIT 0x9d
0000            290   _SM1            BIT 0x9e
0000            291   _SM0            BIT 0x9f
0000            292   _IT0            BIT 0x88
0000            293   _IE0            BIT 0x89
0000            294   _IT1            BIT 0x8a
0000            295   _IE1            BIT 0x8b
0000            296   _TR0            BIT 0x8c
0000            297   _TF0            BIT 0x8d
0000            298   _TR1            BIT 0x8e
0000            299   _TF1            BIT 0x8f
0000            300   _CP_RL2         BIT 0xc8
0000            301   _C_T2           BIT 0xc9
0000            302   _TR2            BIT 0xca
0000            303   _EXEN2          BIT 0xcb
0000            304   _TCLK           BIT 0xcc
0000            305   _RCLK           BIT 0xcd
0000            306   _EXF2           BIT 0xce
0000            307   _TF2            BIT 0xcf
0000            308   _CF             BIT 0xdf
0000            309   _CR             BIT 0xde
0000            310   _CCF4           BIT 0xdc
0000            311   _CCF3           BIT 0xdb
0000            312   _CCF2           BIT 0xda
0000            313   _CCF1           BIT 0xd9
0000            314   _CCF0           BIT 0xd8
0000            315   ;--------------------------------------------------------
0000            316   ; overlayable register banks
0000            317   ;--------------------------------------------------------
0000            318            rbank0 segment data overlay
0000            319   ;--------------------------------------------------------
0000            320   ; overlayable bit register bank
0000            321   ;--------------------------------------------------------
0000            322            rseg BIT_BANK
0000            323   bits:
0000            324            ds 1
0001            325            b0 equ  bits.0 
0001            326            b1 equ  bits.1 
0001            327            b2 equ  bits.2 
0001            328            b3 equ  bits.3 
0001            329            b4 equ  bits.4 
0001            330            b5 equ  bits.5 
0001            331            b6 equ  bits.6 
0001            332            b7 equ  bits.7 
0001            333   ;--------------------------------------------------------
0001            334   ; internal ram data
0001            335   ;--------------------------------------------------------
0000            336            rseg R_DSEG
0000            337   _ANGLEBUFFER:
0000            338            ds 4
0004            339   _pwmCount:
0004            340            ds 2
0006            341   _distCount:
0006            342            ds 2
0008            343   _pwmLeft:
0008            344            ds 2
000A            345   _pwmRight:
000A            346            ds 2
000C            347   _direction:
000C            348            ds 2
000E            349   _tether:
000E            350            ds 2
0010            351   _leftSensor:
0010            352            ds 2
0012            353   _rightSensor:
0012            354            ds 2
0014            355   _pwmLeftTemp:
0014            356            ds 2
0016            357   _pwmRightTemp:
0016            358            ds 2
0018            359   _distanceLeft:
0018            360            ds 2
001A            361   _distanceRight:
001A            362            ds 2
001C            363   _tempL:
001C            364            ds 2
001E            365   _tempR:
001E            366            ds 2
0020            367   _tempTurn:
0020            368            ds 2
0022            369   _instruction:
0022            370            ds 2
0024            371   _gotInst:
0024            372            ds 2
0026            373   _Stage:
0026            374            ds 2
0028            375   _turn:
0028            376            ds 1
0029            377   _moveCar_sloc0_1_0:
0029            378            ds 4
002D            379   _smooth_move_PARM_2:
002D            380            ds 2
002F            381   _smooth_move_history_1_114:
002F            382            ds 3
0032            383   _smooth_move_N_1_115:
0032            384            ds 2
0034            385   _smooth_move_sloc0_1_0:
0034            386            ds 2
0036            387   ;--------------------------------------------------------
0036            388   ; overlayable items in internal ram 
0036            389   ;--------------------------------------------------------
0000            390            rseg    R_OSEG
0000            391   ;--------------------------------------------------------
0000            392   ; indirectly addressable internal ram data
0000            393   ;--------------------------------------------------------
0000            394            rseg R_ISEG
0000            395   ;--------------------------------------------------------
0000            396   ; absolute internal ram data
0000            397   ;--------------------------------------------------------
0000            398            DSEG
0000            399   ;--------------------------------------------------------
0000            400   ; bit data
0000            401   ;--------------------------------------------------------
0000            402            rseg R_BSEG
0000            403   _pwmCounter_sloc0_1_0:
0000            404            DBIT    1
0001            405   ;--------------------------------------------------------
0001            406   ; paged external ram data
0001            407   ;--------------------------------------------------------
0000            408            rseg R_PSEG
0000            409   ;--------------------------------------------------------
0000            410   ; external ram data
0000            411   ;--------------------------------------------------------
0000            412            rseg R_XSEG
0000            413   ;--------------------------------------------------------
0000            414   ; absolute external ram data
0000            415   ;--------------------------------------------------------
0000            416            XSEG
0000            417   ;--------------------------------------------------------
0000            418   ; external initialized ram data
0000            419   ;--------------------------------------------------------
0000            420            rseg R_IXSEG
0000            421            rseg R_HOME
0000            422            rseg R_GSINIT
0000            423            rseg R_CSEG
0000            424   ;--------------------------------------------------------
0000            425   ; Reset entry point and interrupt vectors
0000            426   ;--------------------------------------------------------
0000            427            CSEG at 0x0000
0000 020100     428            ljmp    _crt0
000B            429            CSEG at 0x000b
000B 020100     430            ljmp    _pwmCounter
001B            431            CSEG at 0x001b
001B 020100     432            ljmp    _beaconSignal
001E            433   ;--------------------------------------------------------
001E            434   ; global & static initialisations
001E            435   ;--------------------------------------------------------
0000            436            rseg R_HOME
0000            437            rseg R_GSINIT
0000            438            rseg R_GSINIT
0000            439   ;--------------------------------------------------------
0000            440   ; data variables initialization
0000            441   ;--------------------------------------------------------
0000            442            rseg R_DINIT
0000            443   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:67: float ANGLEBUFFER = 20;
0000 75E000     444            mov     _ANGLEBUFFER,#0x00
0003 75E100     445            mov     (_ANGLEBUFFER + 1),#0x00
0006 75E2A0     446            mov     (_ANGLEBUFFER + 2),#0xA0
0009 75E341     447            mov     (_ANGLEBUFFER + 3),#0x41
000C            448   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:74: volatile unsigned int pwmCount = 0;
000C E4         449            clr     a
000D F5A0       450            mov     _pwmCount,a
000F F5A1       451            mov     (_pwmCount + 1),a
0011            452   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:75: volatile unsigned int distCount = 0;
0011 E4         453            clr     a
0012 F560       454            mov     _distCount,a
0014 F561       455            mov     (_distCount + 1),a
0016            456   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:80: volatile unsigned int leftSensor = 0;
0016 E4         457            clr     a
0017 F520       458            mov     _leftSensor,a
0019 F521       459            mov     (_leftSensor + 1),a
001B            460   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:81: volatile unsigned int rightSensor = 0;
001B E4         461            clr     a
001C F5E0       462            mov     _rightSensor,a
001E F5E1       463            mov     (_rightSensor + 1),a
0020            464   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:82: volatile int pwmLeftTemp = 0;
0020 E4         465            clr     a
0021 F5A0       466            mov     _pwmLeftTemp,a
0023 F5A1       467            mov     (_pwmLeftTemp + 1),a
0025            468   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:83: volatile int pwmRightTemp = 0;
0025 E4         469            clr     a
0026 F560       470            mov     _pwmRightTemp,a
0028 F561       471            mov     (_pwmRightTemp + 1),a
002A            472            ; The linker places a 'ret' at the end of segment R_DINIT.
002A            473   ;--------------------------------------------------------
002A            474   ; code
002A            475   ;--------------------------------------------------------
0000            476            rseg R_CSEG
0000            477   ;------------------------------------------------------------
0000            478   ;Allocation info for local variables in function 'pwmCounter'
0000            479   ;------------------------------------------------------------
0000            480   ;------------------------------------------------------------
0000            481   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:119: void pwmCounter() interrupt 1
0000            482   ;        -----------------------------------------
0000            483   ;         function pwmCounter
0000            484   ;        -----------------------------------------
0000            485   _pwmCounter:
0000            486            using   0
0000 C068       487            push    bits
0002 C0E0       488            push    acc
0004 C0F0       489            push    b
0006 C082       490            push    dpl
0008 C083       491            push    dph
000A C002       492            push    (0+2)
000C C003       493            push    (0+3)
000E C004       494            push    (0+4)
0010 C005       495            push    (0+5)
0012 C006       496            push    (0+6)
0014 C007       497            push    (0+7)
0016 C000       498            push    (0+0)
0018 C001       499            push    (0+1)
001A C0D0       500            push    psw
001C 75D000     501            mov     psw,#0x00
001F            502   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:121: if(++pwmCount > 99)
001F 7401       503            mov     a,#0x01
0021 25A0       504            add     a,_pwmCount
0023 F5A0       505            mov     _pwmCount,a
0025 E4         506            clr     a
0026 35A1       507            addc    a,(_pwmCount + 1)
0028 F5A1       508            mov     (_pwmCount + 1),a
002A C3         509            clr     c
002B 7463       510            mov     a,#0x63
002D 95A0       511            subb    a,_pwmCount
002F E4         512            clr     a
0030 95A1       513            subb    a,(_pwmCount + 1)
0032 5001       514            jnc     L002002?
0034            515   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:123: pwmCount = 0;
0034 E4         516            clr     a
0035 F5A0       517            mov     _pwmCount,a
0037 F5A1       518            mov     (_pwmCount + 1),a
0039            519   L002002?:
0039            520   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:127: if (++distCount > 999)
0039 7401       521            mov     a,#0x01
003B 2560       522            add     a,_distCount
003D F560       523            mov     _distCount,a
003F E4         524            clr     a
0040 3561       525            addc    a,(_distCount + 1)
0042 F561       526            mov     (_distCount + 1),a
0044 C3         527            clr     c
0045 74E7       528            mov     a,#0xE7
0047 9560       529            subb    a,_distCount
0049 7403       530            mov     a,#0x03
004B 9561       531            subb    a,(_distCount + 1)
004D 5001       532            jnc     L002004?
004F            533   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:129: distCount = 0;    
004F E4         534            clr     a
0050 F560       535            mov     _distCount,a
0052 F561       536            mov     (_distCount + 1),a
0054            537   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:130: Stage = 6;
0054 756006     538            mov     _Stage,#0x06
0057 E4         539            clr     a
0058 F561       540            mov     (_Stage + 1),a
005A            541   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:131: printf("DL %3d - DR %3d - Stage %3d(%d)\r", distanceLeft, distanceRight, PRESETS[Stage], Stage);
005A E560       542            mov     a,_Stage
005C 25E0       543            add     a,acc
005E FA         544            mov     r2,a
005F E561       545            mov     a,(_Stage + 1)
0061 33         546            rlc     a
0062 FB         547            mov     r3,a
0063 EA         548            mov     a,r2
0064 2470       549            add     a,#_PRESETS
0066 F582       550            mov     dpl,a
0068 EB         551            mov     a,r3
0069 3442       552            addc    a,#(_PRESETS >> 8)
006B F583       553            mov     dph,a
006D E4         554            clr     a
006E 93         555            movc    a,@a+dptr
006F FA         556            mov     r2,a
0070 A3         557            inc     dptr
0071 E4         558            clr     a
0072 93         559            movc    a,@a+dptr
0073 FB         560            mov     r3,a
0074 C060       561            push    _Stage
0076 C061       562            push    (_Stage + 1)
0078 C002       563            push    ar2
007A C003       564            push    ar3
007C C0E0       565            push    _distanceRight
007E C0E1       566            push    (_distanceRight + 1)
0080 C020       567            push    _distanceLeft
0082 C021       568            push    (_distanceLeft + 1)
0084 7400       569            mov     a,#__str_0
0086 C0E0       570            push    acc
0088 7490       571            mov     a,#(__str_0 >> 8)
008A C0E0       572            push    acc
008C 7480       573            mov     a,#0x80
008E C0E0       574            push    acc
0090 120100     575            lcall   _printf
0093 E581       576            mov     a,sp
0095 24F5       577            add     a,#0xf5
0097 F581       578            mov     sp,a
0099            579   L002004?:
0099            580   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:135: if(pwmLeft > 0)
0099 C3         581            clr     c
009A E4         582            clr     a
009B 9520       583            subb    a,_pwmLeft
009D E4         584            clr     a
009E 6480       585            xrl     a,#0x80
00A0 8521F0     586            mov     b,(_pwmLeft + 1)
00A3 63F080     587            xrl     b,#0x80
00A6 95F0       588            subb    a,b
00A8 5001       589            jnc     L002008?
00AA            590   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:137: P0_1 = (pwmLeft > pwmCount) ? 0:1;
00AA AA20       591            mov     r2,_pwmLeft
00AC AB21       592            mov     r3,(_pwmLeft + 1)
00AE C3         593            clr     c
00AF E5A0       594            mov     a,_pwmCount
00B1 9A         595            subb    a,r2
00B2 E5A1       596            mov     a,(_pwmCount + 1)
00B4 9B         597            subb    a,r3
00B5 92B8       598            mov  _pwmCounter_sloc0_1_0,c
00B7 B3         599            cpl     c
00B8 9281       600            mov     _P0_1,c
00BA            601   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:138: P0_0 = 1;
00BA D280       602            setb    _P0_0
00BC 8001       603            sjmp    L002009?
00BE            604   L002008?:
00BE            605   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:140: else if(pwmLeft < 0)
00BE E521       606            mov     a,(_pwmLeft + 1)
00C0 30E700     607            jnb     acc.7,L002009?
00C3            608   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:143: P0_0 = ((-1) * pwmLeft > pwmCount) ? 0:1;
00C3 C3         609            clr     c
00C4 E4         610            clr     a
00C5 9520       611            subb    a,_pwmLeft
00C7 FA         612            mov     r2,a
00C8 E4         613            clr     a
00C9 9521       614            subb    a,(_pwmLeft + 1)
00CB FB         615            mov     r3,a
00CC C3         616            clr     c
00CD E5A0       617            mov     a,_pwmCount
00CF 9A         618            subb    a,r2
00D0 E5A1       619            mov     a,(_pwmCount + 1)
00D2 9B         620            subb    a,r3
00D3 92B8       621            mov  _pwmCounter_sloc0_1_0,c
00D5 B3         622            cpl     c
00D6 9280       623            mov     _P0_0,c
00D8            624   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:144: P0_1 = 1;
00D8 D281       625            setb    _P0_1
00DA            626   L002009?:
00DA            627   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:146: if(pwmLeft==0)
00DA E520       628            mov     a,_pwmLeft
00DC 4521       629            orl     a,(_pwmLeft + 1)
00DE 7001       630            jnz     L002011?
00E0            631   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:148: P0_1 = P0_0 = 1;
00E0 D280       632            setb    _P0_0
00E2 A280       633            mov     c,_P0_0
00E4 9281       634            mov     _P0_1,c
00E6            635   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:150: P1_0 = ((-1) * pwmLeft > pwmCount) ? 0:1;
00E6 C3         636            clr     c
00E7 E4         637            clr     a
00E8 9520       638            subb    a,_pwmLeft
00EA FA         639            mov     r2,a
00EB E4         640            clr     a
00EC 9521       641            subb    a,(_pwmLeft + 1)
00EE FB         642            mov     r3,a
00EF C3         643            clr     c
00F0 E5A0       644            mov     a,_pwmCount
00F2 9A         645            subb    a,r2
00F3 E5A1       646            mov     a,(_pwmCount + 1)
00F5 9B         647            subb    a,r3
00F6 92B8       648            mov  _pwmCounter_sloc0_1_0,c
00F8 B3         649            cpl     c
00F9 9290       650            mov     _P1_0,c
00FB            651   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:151: P1_1 = 1;
00FB D291       652            setb    _P1_1
00FD 8001       653            sjmp    L002012?
00FF            654   L002011?:
00FF            655   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:154: P1_0 = 1;
00FF D290       656            setb    _P1_0
0101            657   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:155: P1_1 = 1;
0101 D291       658            setb    _P1_1
0103            659   L002012?:
0103            660   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:159: if(pwmRight > 0)
0103 C3         661            clr     c
0104 E4         662            clr     a
0105 95E0       663            subb    a,_pwmRight
0107 E4         664            clr     a
0108 6480       665            xrl     a,#0x80
010A 85E1F0     666            mov     b,(_pwmRight + 1)
010D 63F080     667            xrl     b,#0x80
0110 95F0       668            subb    a,b
0112 5001       669            jnc     L002016?
0114            670   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:161: P0_4 = (pwmRight > pwmCount) ? 0:1;
0114 AAE0       671            mov     r2,_pwmRight
0116 ABE1       672            mov     r3,(_pwmRight + 1)
0118 C3         673            clr     c
0119 E5A0       674            mov     a,_pwmCount
011B 9A         675            subb    a,r2
011C E5A1       676            mov     a,(_pwmCount + 1)
011E 9B         677            subb    a,r3
011F 92B8       678            mov  _pwmCounter_sloc0_1_0,c
0121 B3         679            cpl     c
0122 9284       680            mov     _P0_4,c
0124            681   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:162: P0_3 = 1;
0124 D283       682            setb    _P0_3
0126 8001       683            sjmp    L002017?
0128            684   L002016?:
0128            685   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:164: else if(pwmRight < 0)
0128 E5E1       686            mov     a,(_pwmRight + 1)
012A 30E700     687            jnb     acc.7,L002017?
012D            688   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:167: P0_3 = ((-1) * pwmRight > pwmCount) ? 0:1;
012D C3         689            clr     c
012E E4         690            clr     a
012F 95E0       691            subb    a,_pwmRight
0131 FA         692            mov     r2,a
0132 E4         693            clr     a
0133 95E1       694            subb    a,(_pwmRight + 1)
0135 FB         695            mov     r3,a
0136 C3         696            clr     c
0137 E5A0       697            mov     a,_pwmCount
0139 9A         698            subb    a,r2
013A E5A1       699            mov     a,(_pwmCount + 1)
013C 9B         700            subb    a,r3
013D 92B8       701            mov  _pwmCounter_sloc0_1_0,c
013F B3         702            cpl     c
0140 9283       703            mov     _P0_3,c
0142            704   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:168: P0_4 = 1;
0142 D284       705            setb    _P0_4
0144            706   L002017?:
0144            707   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:170: if(pwmRight==0)
0144 E5E0       708            mov     a,_pwmRight
0146 45E1       709            orl     a,(_pwmRight + 1)
0148 7001       710            jnz     L002020?
014A            711   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:172: P0_4 = P0_3 = 1;
014A D283       712            setb    _P0_3
014C A283       713            mov     c,_P0_3
014E 9284       714            mov     _P0_4,c
0150            715   L002020?:
0150 D0D0       716            pop     psw
0152 D001       717            pop     (0+1)
0154 D000       718            pop     (0+0)
0156 D007       719            pop     (0+7)
0158 D006       720            pop     (0+6)
015A D005       721            pop     (0+5)
015C D004       722            pop     (0+4)
015E D003       723            pop     (0+3)
0160 D002       724            pop     (0+2)
0162 D083       725            pop     dph
0164 D082       726            pop     dpl
0166 D0F0       727            pop     b
0168 D0E0       728            pop     acc
016A D068       729            pop     bits
016C 32         730            reti
016D            731   ;------------------------------------------------------------
016D            732   ;Allocation info for local variables in function 'beaconSignal'
016D            733   ;------------------------------------------------------------
016D            734   ;------------------------------------------------------------
016D            735   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:177: void beaconSignal() interrupt 3
016D            736   ;        -----------------------------------------
016D            737   ;         function beaconSignal
016D            738   ;        -----------------------------------------
016D            739   _beaconSignal:
016D C068       740            push    bits
016F C0E0       741            push    acc
0171 C0F0       742            push    b
0173 C082       743            push    dpl
0175 C083       744            push    dph
0177 C002       745            push    (0+2)
0179 C003       746            push    (0+3)
017B C004       747            push    (0+4)
017D C005       748            push    (0+5)
017F C006       749            push    (0+6)
0181 C007       750            push    (0+7)
0183 C000       751            push    (0+0)
0185 C001       752            push    (0+1)
0187 C0D0       753            push    psw
0189 75D000     754            mov     psw,#0x00
018C            755   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:179: if (voltage(0) < 0.1) 
018C 758200     756            mov     dpl,#0x00
018F 120100     757            lcall   _voltage
0192 AA82       758            mov     r2,dpl
0194 AB83       759            mov     r3,dph
0196 ACF0       760            mov     r4,b
0198 FD         761            mov     r5,a
0199 74CD       762            mov     a,#0xCD
019B C0E0       763            push    acc
019D 74CC       764            mov     a,#0xCC
019F C0E0       765            push    acc
01A1 C0E0       766            push    acc
01A3 743D       767            mov     a,#0x3D
01A5 C0E0       768            push    acc
01A7 8A82       769            mov     dpl,r2
01A9 8B83       770            mov     dph,r3
01AB 8CF0       771            mov     b,r4
01AD ED         772            mov     a,r5
01AE 120100     773            lcall   ___fslt
01B1 AA82       774            mov     r2,dpl
01B3 E581       775            mov     a,sp
01B5 24FC       776            add     a,#0xfc
01B7 F581       777            mov     sp,a
01B9 EA         778            mov     a,r2
01BA 6001       779            jz      L003006?
01BC            780   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:181: ET0 = 0;
01BC C2A9       781            clr     _ET0
01BE            782   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:182: pwmLeftTemp = pwmLeft;
01BE 8520A0     783            mov     _pwmLeftTemp,_pwmLeft
01C1 8521A1     784            mov     (_pwmLeftTemp + 1),(_pwmLeft + 1)
01C4            785   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:183: pwmRightTemp = pwmRight;
01C4 85E060     786            mov     _pwmRightTemp,_pwmRight
01C7 85E161     787            mov     (_pwmRightTemp + 1),(_pwmRight + 1)
01CA            788   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:184: while(voltage(0) < 0.1);
01CA            789   L003001?:
01CA 758200     790            mov     dpl,#0x00
01CD 120100     791            lcall   _voltage
01D0 AA82       792            mov     r2,dpl
01D2 AB83       793            mov     r3,dph
01D4 ACF0       794            mov     r4,b
01D6 FD         795            mov     r5,a
01D7 74CD       796            mov     a,#0xCD
01D9 C0E0       797            push    acc
01DB 74CC       798            mov     a,#0xCC
01DD C0E0       799            push    acc
01DF C0E0       800            push    acc
01E1 743D       801            mov     a,#0x3D
01E3 C0E0       802            push    acc
01E5 8A82       803            mov     dpl,r2
01E7 8B83       804            mov     dph,r3
01E9 8CF0       805            mov     b,r4
01EB ED         806            mov     a,r5
01EC 120100     807            lcall   ___fslt
01EF AA82       808            mov     r2,dpl
01F1 E581       809            mov     a,sp
01F3 24FC       810            add     a,#0xfc
01F5 F581       811            mov     sp,a
01F7 EA         812            mov     a,r2
01F8 7001       813            jnz     L003001?
01FA            814   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:185: instruction = getSig();
01FA 120100     815            lcall   _getSig
01FD 8582E0     816            mov     _instruction,dpl
0200 8583E1     817            mov     (_instruction + 1),dph
0203            818   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:186: pwmLeft = pwmLeftTemp;
0203 85A020     819            mov     _pwmLeft,_pwmLeftTemp
0206 85A121     820            mov     (_pwmLeft + 1),(_pwmLeftTemp + 1)
0209            821   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:187: pwmRight = pwmRightTemp;
0209 8560E0     822            mov     _pwmRight,_pwmRightTemp
020C 8561E1     823            mov     (_pwmRight + 1),(_pwmRightTemp + 1)
020F            824   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:188: ET0 =  1;
020F D2A9       825            setb    _ET0
0211            826   L003006?:
0211 D0D0       827            pop     psw
0213 D001       828            pop     (0+1)
0215 D000       829            pop     (0+0)
0217 D007       830            pop     (0+7)
0219 D006       831            pop     (0+6)
021B D005       832            pop     (0+5)
021D D004       833            pop     (0+4)
021F D003       834            pop     (0+3)
0221 D002       835            pop     (0+2)
0223 D083       836            pop     dph
0225 D082       837            pop     dpl
0227 D0F0       838            pop     b
0229 D0E0       839            pop     acc
022B D068       840            pop     bits
022D 32         841            reti
022E            842   ;------------------------------------------------------------
022E            843   ;Allocation info for local variables in function '_c51_external_startup'
022E            844   ;------------------------------------------------------------
022E            845   ;------------------------------------------------------------
022E            846   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:194: unsigned char _c51_external_startup(void)
022E            847   ;        -----------------------------------------
022E            848   ;         function _c51_external_startup
022E            849   ;        -----------------------------------------
022E            850   __c51_external_startup:
022E            851   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:197: P0M0 = 0;         P0M1 = 0;
022E 75E600     852            mov     _P0M0,#0x00
0231 75E700     853            mov     _P0M1,#0x00
0234            854   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:198: P1M0 = 0;         P1M1 = 0;
0234 75D600     855            mov     _P1M0,#0x00
0237 75D700     856            mov     _P1M1,#0x00
023A            857   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:199: P2M0 = 0;         P2M1 = 0;
023A 75CE00     858            mov     _P2M0,#0x00
023D 75CF00     859            mov     _P2M1,#0x00
0240            860   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:200: P3M0 = 0;         P3M1 = 0;
0240 75C600     861            mov     _P3M0,#0x00
0243 75C700     862            mov     _P3M1,#0x00
0246            863   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:201: AUXR = 0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
0246 758E11     864            mov     _AUXR,#0x11
0249            865   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:202: P4M0 = 0;         P4M1 = 0;
0249 75BE00     866            mov     _P4M0,#0x00
024C 75BF00     867            mov     _P4M1,#0x00
024F            868   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:206: PCON |= 0x80;
024F 438780     869            orl     _PCON,#0x80
0252            870   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:207: SCON = 0x52;
0252 759852     871            mov     _SCON,#0x52
0255            872   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:208: BDRCON = 0;
0255 759B00     873            mov     _BDRCON,#0x00
0258            874   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:209: BRL = BRG_VAL;
0258 759AFA     875            mov     _BRL,#0xFA
025B            876   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:210: BDRCON = BRR | TBCK | RBCK | SPD;
025B 759B1E     877            mov     _BDRCON,#0x1E
025E            878   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:212: TMOD = 0B_0001_0001;      // Timer 0 as 16-bit timer      
025E 758911     879            mov     _TMOD,#0x11
0261            880   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:213: TH0 = RH0 = TIMER0_RELOAD_VALUE / 0x100;
0261 75F4FF     881            mov     _RH0,#0xFF
0264 758CFF     882            mov     _TH0,#0xFF
0267            883   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:214: TL0 = RL0 = TIMER0_RELOAD_VALUE % 0x100;
0267 75F248     884            mov     _RL0,#0x48
026A 758A48     885            mov     _TL0,#0x48
026D            886   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:215: TH1 = RH1 = TIMER1_RELOAD_VALUE / 0x100;
026D 75F5FE     887            mov     _RH1,#0xFE
0270 758DFE     888            mov     _TH1,#0xFE
0273            889   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:216: TL1 = RL1 = TIMER1_RELOAD_VALUE % 0x100;
0273 75F390     890            mov     _RL1,#0x90
0276 758B90     891            mov     _TL1,#0x90
0279            892   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:217: TR0 = 1;
0279 D28C       893            setb    _TR0
027B            894   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:218: TR1 = 0;
027B C28E       895            clr     _TR1
027D            896   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:219: ET0 = 1;  // Enable timer 0 interrupt
027D D2A9       897            setb    _ET0
027F            898   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:222: EA = 1;   // Enable global interrupts
027F D2AF       899            setb    _EA
0281            900   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:223: tether=0;
0281 E4         901            clr     a
0282 F560       902            mov     _tether,a
0284 F561       903            mov     (_tether + 1),a
0286            904   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:224: direction=1;
0286 75A001     905            mov     _direction,#0x01
0289 E4         906            clr     a
028A F5A1       907            mov     (_direction + 1),a
028C            908   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:225: P2_2=1;
028C D2A2       909            setb    _P2_2
028E            910   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:226: P2_1=1;
028E D2A1       911            setb    _P2_1
0290            912   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:227: P2_0=1;
0290 D2A0       913            setb    _P2_0
0292            914   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:228: printf(CLEAR_SCREEN);
0292 7440       915            mov     a,#__str_1
0294 C0E0       916            push    acc
0296 7493       917            mov     a,#(__str_1 >> 8)
0298 C0E0       918            push    acc
029A 7480       919            mov     a,#0x80
029C C0E0       920            push    acc
029E 120100     921            lcall   _printf
02A1 1581       922            dec     sp
02A3 1581       923            dec     sp
02A5 1581       924            dec     sp
02A7            925   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:229: return 0;
02A7 758200     926            mov     dpl,#0x00
02AA 22         927            ret
02AB            928   ;------------------------------------------------------------
02AB            929   ;Allocation info for local variables in function 'main'
02AB            930   ;------------------------------------------------------------
02AB            931   ;------------------------------------------------------------
02AB            932   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:233: int main (void)
02AB            933   ;        -----------------------------------------
02AB            934   ;         function main
02AB            935   ;        -----------------------------------------
02AB            936   _main:
02AB            937   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:236: pwmLeft = 0;
02AB            938   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:237: pwmRight = 0;
02AB            939   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:238: instruction = 0;
02AB E4         940            clr     a
02AC F520       941            mov     _pwmLeft,a
02AE F521       942            mov     (_pwmLeft + 1),a
02B0 F5E0       943            mov     _pwmRight,a
02B2 F5E1       944            mov     (_pwmRight + 1),a
02B4 F5E0       945            mov     _instruction,a
02B6 F5E1       946            mov     (_instruction + 1),a
02B8            947   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:243: while (instruction == 0)
02B8            948   L005001?:
02B8 E5E0       949            mov     a,_instruction
02BA 45E1       950            orl     a,(_instruction + 1)
02BC 7001       951            jnz     L005001?
02BE            952   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:245: moveCar();
02BE 120100     953            lcall   _moveCar
02C1            954   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:287: return 0;
02C1 8001       955            sjmp    L005001?
02C3            956   ;------------------------------------------------------------
02C3            957   ;Allocation info for local variables in function 'getDistance'
02C3            958   ;------------------------------------------------------------
02C3            959   ;------------------------------------------------------------
02C3            960   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:298: void getDistance() 
02C3            961   ;        -----------------------------------------
02C3            962   ;         function getDistance
02C3            963   ;        -----------------------------------------
02C3            964   _getDistance:
02C3            965   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:300: EA = 0;
02C3 C2AF       966            clr     _EA
02C5            967   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:301: tempL = GetADC(1);
02C5 758201     968            mov     dpl,#0x01
02C8 120100     969            lcall   _GetADC
02CB 8582A0     970            mov     _tempL,dpl
02CE 8583A1     971            mov     (_tempL + 1),dph
02D1            972   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:302: if (tempL > 10)
02D1 C3         973            clr     c
02D2 740A       974            mov     a,#0x0A
02D4 95A0       975            subb    a,_tempL
02D6 E4         976            clr     a
02D7 6480       977            xrl     a,#0x80
02D9 85A1F0     978            mov     b,(_tempL + 1)
02DC 63F080     979            xrl     b,#0x80
02DF 95F0       980            subb    a,b
02E1 5001       981            jnc     L006002?
02E3            982   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:304: distanceLeft = tempL;
02E3 85A020     983            mov     _distanceLeft,_tempL
02E6 85A121     984            mov     (_distanceLeft + 1),(_tempL + 1)
02E9            985   L006002?:
02E9            986   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:307: tempR = GetADC(0);
02E9 758200     987            mov     dpl,#0x00
02EC 120100     988            lcall   _GetADC
02EF 858260     989            mov     _tempR,dpl
02F2 858361     990            mov     (_tempR + 1),dph
02F5            991   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:308: if (tempR > 13 && tempR < 250)
02F5 C3         992            clr     c
02F6 740D       993            mov     a,#0x0D
02F8 9560       994            subb    a,_tempR
02FA E4         995            clr     a
02FB 6480       996            xrl     a,#0x80
02FD 8561F0     997            mov     b,(_tempR + 1)
0300 63F080     998            xrl     b,#0x80
0303 95F0       999            subb    a,b
0305 5001      1000            jnc     L006006?
0307 C3        1001            clr     c
0308 E560      1002            mov     a,_tempR
030A 94FA      1003            subb    a,#0xFA
030C E561      1004            mov     a,(_tempR + 1)
030E 6480      1005            xrl     a,#0x80
0310 9480      1006            subb    a,#0x80
0312 5001      1007            jnc     L006006?
0314           1008   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:310: distanceRight = tempR*1.15;
0314 856082    1009            mov     dpl,_tempR
0317 856183    1010            mov     dph,(_tempR + 1)
031A 120100    1011            lcall   ___sint2fs
031D AA82      1012            mov     r2,dpl
031F AB83      1013            mov     r3,dph
0321 ACF0      1014            mov     r4,b
0323 FD        1015            mov     r5,a
0324 C002      1016            push    ar2
0326 C003      1017            push    ar3
0328 C004      1018            push    ar4
032A C005      1019            push    ar5
032C 903333    1020            mov     dptr,#0x3333
032F 75F093    1021            mov     b,#0x93
0332 743F      1022            mov     a,#0x3F
0334 120100    1023            lcall   ___fsmul
0337 AA82      1024            mov     r2,dpl
0339 AB83      1025            mov     r3,dph
033B ACF0      1026            mov     r4,b
033D FD        1027            mov     r5,a
033E E581      1028            mov     a,sp
0340 24FC      1029            add     a,#0xfc
0342 F581      1030            mov     sp,a
0344 8A82      1031            mov     dpl,r2
0346 8B83      1032            mov     dph,r3
0348 8CF0      1033            mov     b,r4
034A ED        1034            mov     a,r5
034B 120100    1035            lcall   ___fs2sint
034E 8582E0    1036            mov     _distanceRight,dpl
0351 8583E1    1037            mov     (_distanceRight + 1),dph
0354           1038   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:311: ANGLEBUFFER = 7;
0354 75E000    1039            mov     _ANGLEBUFFER,#0x00
0357 75E100    1040            mov     (_ANGLEBUFFER + 1),#0x00
035A 75E2E0    1041            mov     (_ANGLEBUFFER + 2),#0xE0
035D 75E340    1042            mov     (_ANGLEBUFFER + 3),#0x40
0360 8001      1043            sjmp    L006007?
0362           1044   L006006?:
0362           1045   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:313: else if(tempR >= 250)
0362 C3        1046            clr     c
0363 E560      1047            mov     a,_tempR
0365 94FA      1048            subb    a,#0xFA
0367 E561      1049            mov     a,(_tempR + 1)
0369 6480      1050            xrl     a,#0x80
036B 9480      1051            subb    a,#0x80
036D 4001      1052            jc      L006007?
036F           1053   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:315: distanceRight = tempR*1.05;
036F 856082    1054            mov     dpl,_tempR
0372 856183    1055            mov     dph,(_tempR + 1)
0375 120100    1056            lcall   ___sint2fs
0378 AA82      1057            mov     r2,dpl
037A AB83      1058            mov     r3,dph
037C ACF0      1059            mov     r4,b
037E FD        1060            mov     r5,a
037F C002      1061            push    ar2
0381 C003      1062            push    ar3
0383 C004      1063            push    ar4
0385 C005      1064            push    ar5
0387 906666    1065            mov     dptr,#0x6666
038A 75F086    1066            mov     b,#0x86
038D 743F      1067            mov     a,#0x3F
038F 120100    1068            lcall   ___fsmul
0392 AA82      1069            mov     r2,dpl
0394 AB83      1070            mov     r3,dph
0396 ACF0      1071            mov     r4,b
0398 FD        1072            mov     r5,a
0399 E581      1073            mov     a,sp
039B 24FC      1074            add     a,#0xfc
039D F581      1075            mov     sp,a
039F 8A82      1076            mov     dpl,r2
03A1 8B83      1077            mov     dph,r3
03A3 8CF0      1078            mov     b,r4
03A5 ED        1079            mov     a,r5
03A6 120100    1080            lcall   ___fs2sint
03A9 8582E0    1081            mov     _distanceRight,dpl
03AC 8583E1    1082            mov     (_distanceRight + 1),dph
03AF           1083   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:316: ANGLEBUFFER = 10;
03AF 75E000    1084            mov     _ANGLEBUFFER,#0x00
03B2 75E100    1085            mov     (_ANGLEBUFFER + 1),#0x00
03B5 75E220    1086            mov     (_ANGLEBUFFER + 2),#0x20
03B8 75E341    1087            mov     (_ANGLEBUFFER + 3),#0x41
03BB           1088   L006007?:
03BB           1089   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:318: EA = 1;
03BB D2AF      1090            setb    _EA
03BD 22        1091            ret
03BE           1092   ;------------------------------------------------------------
03BE           1093   ;Allocation info for local variables in function 'moveCar'
03BE           1094   ;------------------------------------------------------------
03BE           1095   ;sloc0                     Allocated with name '_moveCar_sloc0_1_0'
03BE           1096   ;------------------------------------------------------------
03BE           1097   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:327: void moveCar()
03BE           1098   ;        -----------------------------------------
03BE           1099   ;         function moveCar
03BE           1100   ;        -----------------------------------------
03BE           1101   _moveCar:
03BE           1102   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:329: getDistance();
03BE 120100    1103            lcall   _getDistance
03C1           1104   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:332: if(distanceRight > (distanceLeft+ANGLEBUFFER))
03C1 852082    1105            mov     dpl,_distanceLeft
03C4 852183    1106            mov     dph,(_distanceLeft + 1)
03C7 120100    1107            lcall   ___sint2fs
03CA AA82      1108            mov     r2,dpl
03CC AB83      1109            mov     r3,dph
03CE ACF0      1110            mov     r4,b
03D0 FD        1111            mov     r5,a
03D1 C0E0      1112            push    _ANGLEBUFFER
03D3 C0E1      1113            push    (_ANGLEBUFFER + 1)
03D5 C0E2      1114            push    (_ANGLEBUFFER + 2)
03D7 C0E3      1115            push    (_ANGLEBUFFER + 3)
03D9 8A82      1116            mov     dpl,r2
03DB 8B83      1117            mov     dph,r3
03DD 8CF0      1118            mov     b,r4
03DF ED        1119            mov     a,r5
03E0 120100    1120            lcall   ___fsadd
03E3 AA82      1121            mov     r2,dpl
03E5 AB83      1122            mov     r3,dph
03E7 ACF0      1123            mov     r4,b
03E9 FD        1124            mov     r5,a
03EA E581      1125            mov     a,sp
03EC 24FC      1126            add     a,#0xfc
03EE F581      1127            mov     sp,a
03F0 85E082    1128            mov     dpl,_distanceRight
03F3 85E183    1129            mov     dph,(_distanceRight + 1)
03F6 C002      1130            push    ar2
03F8 C003      1131            push    ar3
03FA C004      1132            push    ar4
03FC C005      1133            push    ar5
03FE 120100    1134            lcall   ___sint2fs
0401 120100    1135            lcall   ___fsgt
0404 AA82      1136            mov     r2,dpl
0406 E581      1137            mov     a,sp
0408 24FC      1138            add     a,#0xfc
040A F581      1139            mov     sp,a
040C EA        1140            mov     a,r2
040D 6001      1141            jz      L007004?
040F           1142   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:334: P2_2=1;
040F D2A2      1143            setb    _P2_2
0411           1144   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:335: P2_1=0;
0411 C2A1      1145            clr     _P2_1
0413           1146   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:336: P2_0=1;
0413 D2A0      1147            setb    _P2_0
0415           1148   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:337: pwmLeft = (-TURNSPEED);
0415 904370    1149            mov     dptr,#_TURNSPEED
0418 E4        1150            clr     a
0419 93        1151            movc    a,@a+dptr
041A FA        1152            mov     r2,a
041B 7401      1153            mov     a,#0x01
041D 93        1154            movc    a,@a+dptr
041E FB        1155            mov     r3,a
041F C3        1156            clr     c
0420 E4        1157            clr     a
0421 9A        1158            subb    a,r2
0422 F520      1159            mov     _pwmLeft,a
0424 E4        1160            clr     a
0425 9B        1161            subb    a,r3
0426 F521      1162            mov     (_pwmLeft + 1),a
0428           1163   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:338: pwmRight= (TURNSPEED);
0428 8AE0      1164            mov     _pwmRight,r2
042A 8BE1      1165            mov     (_pwmRight + 1),r3
042C 8001      1166            sjmp    L007005?
042E           1167   L007004?:
042E           1168   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:340: else if(distanceLeft > (distanceRight+ANGLEBUFFER))
042E 85E082    1169            mov     dpl,_distanceRight
0431 85E183    1170            mov     dph,(_distanceRight + 1)
0434 120100    1171            lcall   ___sint2fs
0437 AA82      1172            mov     r2,dpl
0439 AB83      1173            mov     r3,dph
043B ACF0      1174            mov     r4,b
043D FD        1175            mov     r5,a
043E C0E0      1176            push    _ANGLEBUFFER
0440 C0E1      1177            push    (_ANGLEBUFFER + 1)
0442 C0E2      1178            push    (_ANGLEBUFFER + 2)
0444 C0E3      1179            push    (_ANGLEBUFFER + 3)
0446 8A82      1180            mov     dpl,r2
0448 8B83      1181            mov     dph,r3
044A 8CF0      1182            mov     b,r4
044C ED        1183            mov     a,r5
044D 120100    1184            lcall   ___fsadd
0450 AA82      1185            mov     r2,dpl
0452 AB83      1186            mov     r3,dph
0454 ACF0      1187            mov     r4,b
0456 FD        1188            mov     r5,a
0457 E581      1189            mov     a,sp
0459 24FC      1190            add     a,#0xfc
045B F581      1191            mov     sp,a
045D 852082    1192            mov     dpl,_distanceLeft
0460 852183    1193            mov     dph,(_distanceLeft + 1)
0463 C002      1194            push    ar2
0465 C003      1195            push    ar3
0467 C004      1196            push    ar4
0469 C005      1197            push    ar5
046B 120100    1198            lcall   ___sint2fs
046E 120100    1199            lcall   ___fsgt
0471 AA82      1200            mov     r2,dpl
0473 E581      1201            mov     a,sp
0475 24FC      1202            add     a,#0xfc
0477 F581      1203            mov     sp,a
0479 EA        1204            mov     a,r2
047A 6001      1205            jz      L007005?
047C           1206   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:342: P2_2=1;
047C D2A2      1207            setb    _P2_2
047E           1208   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:343: P2_1=0;
047E C2A1      1209            clr     _P2_1
0480           1210   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:344: P2_0=1;
0480 D2A0      1211            setb    _P2_0
0482           1212   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:345: pwmLeft = (TURNSPEED);
0482 904370    1213            mov     dptr,#_TURNSPEED
0485 E4        1214            clr     a
0486 93        1215            movc    a,@a+dptr
0487 FA        1216            mov     r2,a
0488 7401      1217            mov     a,#0x01
048A 93        1218            movc    a,@a+dptr
048B FB        1219            mov     r3,a
048C 8A20      1220            mov     _pwmLeft,r2
048E 8B21      1221            mov     (_pwmLeft + 1),r3
0490           1222   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:346: pwmRight = (-TURNSPEED);
0490 C3        1223            clr     c
0491 E4        1224            clr     a
0492 9A        1225            subb    a,r2
0493 F5E0      1226            mov     _pwmRight,a
0495 E4        1227            clr     a
0496 9B        1228            subb    a,r3
0497 F5E1      1229            mov     (_pwmRight + 1),a
0499           1230   L007005?:
0499           1231   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:356: getDistance();
0499 120100    1232            lcall   _getDistance
049C           1233   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:358: if ((distanceRight+DISTANCEBUFFER) < PRESETS[Stage])
049C 9042F0    1234            mov     dptr,#_DISTANCEBUFFER
049F E4        1235            clr     a
04A0 93        1236            movc    a,@a+dptr
04A1 FA        1237            mov     r2,a
04A2 7401      1238            mov     a,#0x01
04A4 93        1239            movc    a,@a+dptr
04A5 FB        1240            mov     r3,a
04A6 7402      1241            mov     a,#0x02
04A8 93        1242            movc    a,@a+dptr
04A9 FC        1243            mov     r4,a
04AA 7403      1244            mov     a,#0x03
04AC 93        1245            movc    a,@a+dptr
04AD FD        1246            mov     r5,a
04AE 85E082    1247            mov     dpl,_distanceRight
04B1 85E183    1248            mov     dph,(_distanceRight + 1)
04B4 C002      1249            push    ar2
04B6 C003      1250            push    ar3
04B8 C004      1251            push    ar4
04BA C005      1252            push    ar5
04BC 120100    1253            lcall   ___sint2fs
04BF AE82      1254            mov     r6,dpl
04C1 AF83      1255            mov     r7,dph
04C3 A8F0      1256            mov     r0,b
04C5 F9        1257            mov     r1,a
04C6 D005      1258            pop     ar5
04C8 D004      1259            pop     ar4
04CA D003      1260            pop     ar3
04CC D002      1261            pop     ar2
04CE C002      1262            push    ar2
04D0 C003      1263            push    ar3
04D2 C004      1264            push    ar4
04D4 C005      1265            push    ar5
04D6 C002      1266            push    ar2
04D8 C003      1267            push    ar3
04DA C004      1268            push    ar4
04DC C005      1269            push    ar5
04DE 8E82      1270            mov     dpl,r6
04E0 8F83      1271            mov     dph,r7
04E2 88F0      1272            mov     b,r0
04E4 E9        1273            mov     a,r1
04E5 120100    1274            lcall   ___fsadd
04E8 858278    1275            mov     _moveCar_sloc0_1_0,dpl
04EB 858379    1276            mov     (_moveCar_sloc0_1_0 + 1),dph
04EE 85F07A    1277            mov     (_moveCar_sloc0_1_0 + 2),b
04F1 F57B      1278            mov     (_moveCar_sloc0_1_0 + 3),a
04F3 E581      1279            mov     a,sp
04F5 24FC      1280            add     a,#0xfc
04F7 F581      1281            mov     sp,a
04F9 E560      1282            mov     a,_Stage
04FB 25E0      1283            add     a,acc
04FD FE        1284            mov     r6,a
04FE E561      1285            mov     a,(_Stage + 1)
0500 33        1286            rlc     a
0501 FF        1287            mov     r7,a
0502 EE        1288            mov     a,r6
0503 2470      1289            add     a,#_PRESETS
0505 F582      1290            mov     dpl,a
0507 EF        1291            mov     a,r7
0508 3442      1292            addc    a,#(_PRESETS >> 8)
050A F583      1293            mov     dph,a
050C E4        1294            clr     a
050D 93        1295            movc    a,@a+dptr
050E FE        1296            mov     r6,a
050F A3        1297            inc     dptr
0510 E4        1298            clr     a
0511 93        1299            movc    a,@a+dptr
0512 FF        1300            mov     r7,a
0513 8E82      1301            mov     dpl,r6
0515 8F83      1302            mov     dph,r7
0517 120100    1303            lcall   ___sint2fs
051A AE82      1304            mov     r6,dpl
051C AF83      1305            mov     r7,dph
051E A8F0      1306            mov     r0,b
0520 F9        1307            mov     r1,a
0521 C006      1308            push    ar6
0523 C007      1309            push    ar7
0525 C000      1310            push    ar0
0527 C001      1311            push    ar1
0529 857882    1312            mov     dpl,_moveCar_sloc0_1_0
052C 857983    1313            mov     dph,(_moveCar_sloc0_1_0 + 1)
052F 857AF0    1314            mov     b,(_moveCar_sloc0_1_0 + 2)
0532 E57B      1315            mov     a,(_moveCar_sloc0_1_0 + 3)
0534 120100    1316            lcall   ___fslt
0537 AE82      1317            mov     r6,dpl
0539 E581      1318            mov     a,sp
053B 24FC      1319            add     a,#0xfc
053D F581      1320            mov     sp,a
053F D005      1321            pop     ar5
0541 D004      1322            pop     ar4
0543 D003      1323            pop     ar3
0545 D002      1324            pop     ar2
0547 EE        1325            mov     a,r6
0548 6001      1326            jz      L007010?
054A           1327   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:360: P2_2=1;
054A D2A2      1328            setb    _P2_2
054C           1329   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:361: P2_1=0;
054C C2A1      1330            clr     _P2_1
054E           1331   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:362: P2_0=1;
054E D2A0      1332            setb    _P2_0
0550           1333   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:363: pwmLeft = (MOVESPEED);
0550 9043B0    1334            mov     dptr,#_MOVESPEED
0553 E4        1335            clr     a
0554 93        1336            movc    a,@a+dptr
0555 FE        1337            mov     r6,a
0556 7401      1338            mov     a,#0x01
0558 93        1339            movc    a,@a+dptr
0559 FF        1340            mov     r7,a
055A 8E20      1341            mov     _pwmLeft,r6
055C 8F21      1342            mov     (_pwmLeft + 1),r7
055E           1343   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:364: pwmRight = (MOVESPEED);
055E 8EE0      1344            mov     _pwmRight,r6
0560 8FE1      1345            mov     (_pwmRight + 1),r7
0562 22        1346            ret
0563           1347   L007010?:
0563           1348   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:367: else if (distanceRight > (PRESETS[Stage]+DISTANCEBUFFER))
0563 E560      1349            mov     a,_Stage
0565 25E0      1350            add     a,acc
0567 FE        1351            mov     r6,a
0568 E561      1352            mov     a,(_Stage + 1)
056A 33        1353            rlc     a
056B FF        1354            mov     r7,a
056C EE        1355            mov     a,r6
056D 2470      1356            add     a,#_PRESETS
056F F582      1357            mov     dpl,a
0571 EF        1358            mov     a,r7
0572 3442      1359            addc    a,#(_PRESETS >> 8)
0574 F583      1360            mov     dph,a
0576 E4        1361            clr     a
0577 93        1362            movc    a,@a+dptr
0578 FE        1363            mov     r6,a
0579 A3        1364            inc     dptr
057A E4        1365            clr     a
057B 93        1366            movc    a,@a+dptr
057C FF        1367            mov     r7,a
057D 8E82      1368            mov     dpl,r6
057F 8F83      1369            mov     dph,r7
0581 C002      1370            push    ar2
0583 C003      1371            push    ar3
0585 C004      1372            push    ar4
0587 C005      1373            push    ar5
0589 120100    1374            lcall   ___sint2fs
058C 120100    1375            lcall   ___fsadd
058F AA82      1376            mov     r2,dpl
0591 AB83      1377            mov     r3,dph
0593 ACF0      1378            mov     r4,b
0595 FD        1379            mov     r5,a
0596 E581      1380            mov     a,sp
0598 24FC      1381            add     a,#0xfc
059A F581      1382            mov     sp,a
059C 85E082    1383            mov     dpl,_distanceRight
059F 85E183    1384            mov     dph,(_distanceRight + 1)
05A2 C002      1385            push    ar2
05A4 C003      1386            push    ar3
05A6 C004      1387            push    ar4
05A8 C005      1388            push    ar5
05AA 120100    1389            lcall   ___sint2fs
05AD 120100    1390            lcall   ___fsgt
05B0 AA82      1391            mov     r2,dpl
05B2 E581      1392            mov     a,sp
05B4 24FC      1393            add     a,#0xfc
05B6 F581      1394            mov     sp,a
05B8 EA        1395            mov     a,r2
05B9 6001      1396            jz      L007007?
05BB           1397   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:369: P2_2=1;
05BB D2A2      1398            setb    _P2_2
05BD           1399   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:370: P2_1=0;
05BD C2A1      1400            clr     _P2_1
05BF           1401   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:371: P2_0=1;
05BF D2A0      1402            setb    _P2_0
05C1           1403   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:372: pwmLeft = (-MOVESPEED);
05C1 9043B0    1404            mov     dptr,#_MOVESPEED
05C4 E4        1405            clr     a
05C5 93        1406            movc    a,@a+dptr
05C6 FA        1407            mov     r2,a
05C7 7401      1408            mov     a,#0x01
05C9 93        1409            movc    a,@a+dptr
05CA FB        1410            mov     r3,a
05CB C3        1411            clr     c
05CC E4        1412            clr     a
05CD 9A        1413            subb    a,r2
05CE FA        1414            mov     r2,a
05CF E4        1415            clr     a
05D0 9B        1416            subb    a,r3
05D1 FB        1417            mov     r3,a
05D2 8A20      1418            mov     _pwmLeft,r2
05D4 8B21      1419            mov     (_pwmLeft + 1),r3
05D6           1420   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:373: pwmRight = (-MOVESPEED);
05D6 8AE0      1421            mov     _pwmRight,r2
05D8 8BE1      1422            mov     (_pwmRight + 1),r3
05DA 22        1423            ret
05DB           1424   L007007?:
05DB           1425   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:377: P2_2=1;
05DB D2A2      1426            setb    _P2_2
05DD           1427   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:378: P2_1=1;
05DD D2A1      1428            setb    _P2_1
05DF           1429   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:379: P2_0=0;
05DF C2A0      1430            clr     _P2_0
05E1           1431   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:380: pwmLeft = pwmRight = 0;
05E1 E4        1432            clr     a
05E2 F5E0      1433            mov     _pwmRight,a
05E4 F5E1      1434            mov     (_pwmRight + 1),a
05E6 F520      1435            mov     _pwmLeft,a
05E8 F521      1436            mov     (_pwmLeft + 1),a
05EA           1437   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:383: return;
05EA 22        1438            ret
05EB           1439   ;------------------------------------------------------------
05EB           1440   ;Allocation info for local variables in function 'smooth_move'
05EB           1441   ;------------------------------------------------------------
05EB           1442   ;target                    Allocated with name '_smooth_move_PARM_2'
05EB           1443   ;history                   Allocated with name '_smooth_move_history_1_114'
05EB           1444   ;N                         Allocated with name '_smooth_move_N_1_115'
05EB           1445   ;sloc0                     Allocated with name '_smooth_move_sloc0_1_0'
05EB           1446   ;------------------------------------------------------------
05EB           1447   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:390: int smooth_move(int * history, int target)
05EB           1448   ;        -----------------------------------------
05EB           1449   ;         function smooth_move
05EB           1450   ;        -----------------------------------------
05EB           1451   _smooth_move:
05EB 8582C8    1452            mov     _smooth_move_history_1_114,dpl
05EE 8583C9    1453            mov     (_smooth_move_history_1_114 + 1),dph
05F1 85F0CA    1454            mov     (_smooth_move_history_1_114 + 2),b
05F4           1455   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:392: int N = MEMORY_LENGTH;
05F4 904230    1456            mov     dptr,#_MEMORY_LENGTH
05F7 E4        1457            clr     a
05F8 93        1458            movc    a,@a+dptr
05F9 F518      1459            mov     _smooth_move_N_1_115,a
05FB 7401      1460            mov     a,#0x01
05FD 93        1461            movc    a,@a+dptr
05FE F519      1462            mov     (_smooth_move_N_1_115 + 1),a
0600 AF18      1463            mov     r7,_smooth_move_N_1_115
0602 A819      1464            mov     r0,(_smooth_move_N_1_115 + 1)
0604           1465   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:394: history[0] = 0;
0604 85C882    1466            mov     dpl,_smooth_move_history_1_114
0607 85C983    1467            mov     dph,(_smooth_move_history_1_114 + 1)
060A 85CAF0    1468            mov     b,(_smooth_move_history_1_114 + 2)
060D E4        1469            clr     a
060E 120100    1470            lcall   __gptrput
0611 A3        1471            inc     dptr
0612 E4        1472            clr     a
0613 120100    1473            lcall   __gptrput
0616           1474   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:396: while(N-- > 0)
0616           1475   L008001?:
0616 8F01      1476            mov     ar1,r7
0618 8805      1477            mov     ar5,r0
061A 1F        1478            dec     r7
061B BFFF40    1479            cjne    r7,#0xff,L008009?
061E 18        1480            dec     r0
061F           1481   L008009?:
061F C3        1482            clr     c
0620 E4        1483            clr     a
0621 99        1484            subb    a,r1
0622 E4        1485            clr     a
0623 6480      1486            xrl     a,#0x80
0625 8DF0      1487            mov     b,r5
0627 63F080    1488            xrl     b,#0x80
062A 95F0      1489            subb    a,b
062C 4001      1490            jc      L008010?
062E 020100    1491            ljmp    L008003?
0631           1492   L008010?:
0631           1493   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:398: history[0] += history[N];
0631 85C882    1494            mov     dpl,_smooth_move_history_1_114
0634 85C983    1495            mov     dph,(_smooth_move_history_1_114 + 1)
0637 85CAF0    1496            mov     b,(_smooth_move_history_1_114 + 2)
063A 120100    1497            lcall   __gptrget
063D F568      1498            mov     _smooth_move_sloc0_1_0,a
063F A3        1499            inc     dptr
0640 120100    1500            lcall   __gptrget
0643 F569      1501            mov     (_smooth_move_sloc0_1_0 + 1),a
0645 8F01      1502            mov     ar1,r7
0647 E8        1503            mov     a,r0
0648 C9        1504            xch     a,r1
0649 25E0      1505            add     a,acc
064B C9        1506            xch     a,r1
064C 33        1507            rlc     a
064D FA        1508            mov     r2,a
064E E9        1509            mov     a,r1
064F 25C8      1510            add     a,_smooth_move_history_1_114
0651 F9        1511            mov     r1,a
0652 EA        1512            mov     a,r2
0653 35C9      1513            addc    a,(_smooth_move_history_1_114 + 1)
0655 FA        1514            mov     r2,a
0656 ABCA      1515            mov     r3,(_smooth_move_history_1_114 + 2)
0658 8982      1516            mov     dpl,r1
065A 8A83      1517            mov     dph,r2
065C 8BF0      1518            mov     b,r3
065E 120100    1519            lcall   __gptrget
0661 FC        1520            mov     r4,a
0662 A3        1521            inc     dptr
0663 120100    1522            lcall   __gptrget
0666 FD        1523            mov     r5,a
0667 EC        1524            mov     a,r4
0668 2568      1525            add     a,_smooth_move_sloc0_1_0
066A FC        1526            mov     r4,a
066B ED        1527            mov     a,r5
066C 3569      1528            addc    a,(_smooth_move_sloc0_1_0 + 1)
066E FD        1529            mov     r5,a
066F 85C882    1530            mov     dpl,_smooth_move_history_1_114
0672 85C983    1531            mov     dph,(_smooth_move_history_1_114 + 1)
0675 85CAF0    1532            mov     b,(_smooth_move_history_1_114 + 2)
0678 EC        1533            mov     a,r4
0679 120100    1534            lcall   __gptrput
067C A3        1535            inc     dptr
067D ED        1536            mov     a,r5
067E 120100    1537            lcall   __gptrput
0681           1538   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:399: history[N] = history[N-1];        
0681 EF        1539            mov     a,r7
0682 24FF      1540            add     a,#0xff
0684 FC        1541            mov     r4,a
0685 E8        1542            mov     a,r0
0686 34FF      1543            addc    a,#0xff
0688 CC        1544            xch     a,r4
0689 25E0      1545            add     a,acc
068B CC        1546            xch     a,r4
068C 33        1547            rlc     a
068D FD        1548            mov     r5,a
068E EC        1549            mov     a,r4
068F 25C8      1550            add     a,_smooth_move_history_1_114
0691 FC        1551            mov     r4,a
0692 ED        1552            mov     a,r5
0693 35C9      1553            addc    a,(_smooth_move_history_1_114 + 1)
0695 FD        1554            mov     r5,a
0696 AECA      1555            mov     r6,(_smooth_move_history_1_114 + 2)
0698 8C82      1556            mov     dpl,r4
069A 8D83      1557            mov     dph,r5
069C 8EF0      1558            mov     b,r6
069E 120100    1559            lcall   __gptrget
06A1 FC        1560            mov     r4,a
06A2 A3        1561            inc     dptr
06A3 120100    1562            lcall   __gptrget
06A6 FD        1563            mov     r5,a
06A7 8982      1564            mov     dpl,r1
06A9 8A83      1565            mov     dph,r2
06AB 8BF0      1566            mov     b,r3
06AD EC        1567            mov     a,r4
06AE 120100    1568            lcall   __gptrput
06B1 A3        1569            inc     dptr
06B2 ED        1570            mov     a,r5
06B3 120100    1571            lcall   __gptrput
06B6 020100    1572            ljmp    L008001?
06B9           1573   L008003?:
06B9           1574   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:402: history[0] += target;
06B9 85C882    1575            mov     dpl,_smooth_move_history_1_114
06BC 85C983    1576            mov     dph,(_smooth_move_history_1_114 + 1)
06BF 85CAF0    1577            mov     b,(_smooth_move_history_1_114 + 2)
06C2 120100    1578            lcall   __gptrget
06C5 FA        1579            mov     r2,a
06C6 A3        1580            inc     dptr
06C7 120100    1581            lcall   __gptrget
06CA FB        1582            mov     r3,a
06CB E5E0      1583            mov     a,_smooth_move_PARM_2
06CD 2A        1584            add     a,r2
06CE FA        1585            mov     r2,a
06CF E5E1      1586            mov     a,(_smooth_move_PARM_2 + 1)
06D1 3B        1587            addc    a,r3
06D2 FB        1588            mov     r3,a
06D3 85C882    1589            mov     dpl,_smooth_move_history_1_114
06D6 85C983    1590            mov     dph,(_smooth_move_history_1_114 + 1)
06D9 85CAF0    1591            mov     b,(_smooth_move_history_1_114 + 2)
06DC EA        1592            mov     a,r2
06DD 120100    1593            lcall   __gptrput
06E0 A3        1594            inc     dptr
06E1 EB        1595            mov     a,r3
06E2 120100    1596            lcall   __gptrput
06E5           1597   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:404: return history[0] / MEMORY_LENGTH;
06E5 851800    1598            mov     __divsint_PARM_2,_smooth_move_N_1_115
06E8 851901    1599            mov     (__divsint_PARM_2 + 1),(_smooth_move_N_1_115 + 1)
06EB 8A82      1600            mov     dpl,r2
06ED 8B83      1601            mov     dph,r3
06EF 020100    1602            ljmp    __divsint
06F2           1603   ;------------------------------------------------------------
06F2           1604   ;Allocation info for local variables in function 'uTurn'
06F2           1605   ;------------------------------------------------------------
06F2           1606   ;------------------------------------------------------------
06F2           1607   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:407: void uTurn()
06F2           1608   ;        -----------------------------------------
06F2           1609   ;         function uTurn
06F2           1610   ;        -----------------------------------------
06F2           1611   _uTurn:
06F2           1612   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:409: P2_2=1;
06F2 D2A2      1613            setb    _P2_2
06F4           1614   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:410: P2_1=0;
06F4 C2A1      1615            clr     _P2_1
06F6           1616   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:411: P2_0=1;
06F6 D2A0      1617            setb    _P2_0
06F8           1618   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:412: pwmLeft=TURNSPEED;
06F8 904370    1619            mov     dptr,#_TURNSPEED
06FB E4        1620            clr     a
06FC 93        1621            movc    a,@a+dptr
06FD FA        1622            mov     r2,a
06FE 7401      1623            mov     a,#0x01
0700 93        1624            movc    a,@a+dptr
0701 FB        1625            mov     r3,a
0702 8A20      1626            mov     _pwmLeft,r2
0704 8B21      1627            mov     (_pwmLeft + 1),r3
0706           1628   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:413: pwmRight=(-TURNSPEED);
0706 C3        1629            clr     c
0707 E4        1630            clr     a
0708 9A        1631            subb    a,r2
0709 F5E0      1632            mov     _pwmRight,a
070B E4        1633            clr     a
070C 9B        1634            subb    a,r3
070D F5E1      1635            mov     (_pwmRight + 1),a
070F           1636   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:414: wait1s();
070F 120100    1637            lcall   _wait1s
0712           1638   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:415: wait1s();
0712 120100    1639            lcall   _wait1s
0715           1640   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:416: pwmLeft=pwmRight=0;
0715 E4        1641            clr     a
0716 F5E0      1642            mov     _pwmRight,a
0718 F5E1      1643            mov     (_pwmRight + 1),a
071A F520      1644            mov     _pwmLeft,a
071C F521      1645            mov     (_pwmLeft + 1),a
071E           1646   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:417: return;
071E 22        1647            ret
071F           1648   ;------------------------------------------------------------
071F           1649   ;Allocation info for local variables in function 'getSig'
071F           1650   ;------------------------------------------------------------
071F           1651   ;j                         Allocated to registers r4 r5 
071F           1652   ;val                       Allocated to registers r2 r3 
071F           1653   ;v                         Allocated to registers r6 r7 r0 r1 
071F           1654   ;------------------------------------------------------------
071F           1655   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:420: unsigned int getSig()
071F           1656   ;        -----------------------------------------
071F           1657   ;         function getSig
071F           1658   ;        -----------------------------------------
071F           1659   _getSig:
071F           1660   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:426: val = 0;
071F 7A00      1661            mov     r2,#0x00
0721 7B00      1662            mov     r3,#0x00
0723           1663   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:429: for (j = 0; j < 3; j++) {
0723 7C00      1664            mov     r4,#0x00
0725 7D00      1665            mov     r5,#0x00
0727           1666   L010001?:
0727 C3        1667            clr     c
0728 EC        1668            mov     a,r4
0729 9403      1669            subb    a,#0x03
072B ED        1670            mov     a,r5
072C 9400      1671            subb    a,#0x00
072E 5001      1672            jnc     L010004?
0730           1673   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:430: v = GetADC(0);
0730 758200    1674            mov     dpl,#0x00
0733 C002      1675            push    ar2
0735 C003      1676            push    ar3
0737 C004      1677            push    ar4
0739 C005      1678            push    ar5
073B 120100    1679            lcall   _GetADC
073E 120100    1680            lcall   ___uint2fs
0741 AE82      1681            mov     r6,dpl
0743 AF83      1682            mov     r7,dph
0745 A8F0      1683            mov     r0,b
0747 F9        1684            mov     r1,a
0748           1685   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:431: val |= (v > MINVOLT) ? (0x01 << j) : 0x00;
0748 904330    1686            mov     dptr,#_MINVOLT
074B E4        1687            clr     a
074C 93        1688            movc    a,@a+dptr
074D C0E0      1689            push    acc
074F 7401      1690            mov     a,#0x01
0751 93        1691            movc    a,@a+dptr
0752 C0E0      1692            push    acc
0754 7402      1693            mov     a,#0x02
0756 93        1694            movc    a,@a+dptr
0757 C0E0      1695            push    acc
0759 7403      1696            mov     a,#0x03
075B 93        1697            movc    a,@a+dptr
075C C0E0      1698            push    acc
075E 8E82      1699            mov     dpl,r6
0760 8F83      1700            mov     dph,r7
0762 88F0      1701            mov     b,r0
0764 E9        1702            mov     a,r1
0765 120100    1703            lcall   ___fsgt
0768 AE82      1704            mov     r6,dpl
076A E581      1705            mov     a,sp
076C 24FC      1706            add     a,#0xfc
076E F581      1707            mov     sp,a
0770 D005      1708            pop     ar5
0772 D004      1709            pop     ar4
0774 D003      1710            pop     ar3
0776 D002      1711            pop     ar2
0778 EE        1712            mov     a,r6
0779 6001      1713            jz      L010007?
077B 8CF0      1714            mov     b,r4
077D 05F0      1715            inc     b
077F 7E01      1716            mov     r6,#0x01
0781 7F00      1717            mov     r7,#0x00
0783 8001      1718            sjmp    L010016?
0785           1719   L010015?:
0785 EE        1720            mov     a,r6
0786 2E        1721            add     a,r6
0787 FE        1722            mov     r6,a
0788 EF        1723            mov     a,r7
0789 33        1724            rlc     a
078A FF        1725            mov     r7,a
078B           1726   L010016?:
078B D5F010    1727            djnz    b,L010015?
078E 8001      1728            sjmp    L010008?
0790           1729   L010007?:
0790 7E00      1730            mov     r6,#0x00
0792 7F00      1731            mov     r7,#0x00
0794           1732   L010008?:
0794 EE        1733            mov     a,r6
0795 4202      1734            orl     ar2,a
0797 EF        1735            mov     a,r7
0798 4203      1736            orl     ar3,a
079A           1737   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:429: for (j = 0; j < 3; j++) {
079A 0C        1738            inc     r4
079B BC00D0    1739            cjne    r4,#0x00,L010001?
079E 0D        1740            inc     r5
079F 8001      1741            sjmp    L010001?
07A1           1742   L010004?:
07A1           1743   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:435: return val;
07A1 8A82      1744            mov     dpl,r2
07A3 8B83      1745            mov     dph,r3
07A5 22        1746            ret
07A6           1747   ;------------------------------------------------------------
07A6           1748   ;Allocation info for local variables in function 'waitBit'
07A6           1749   ;------------------------------------------------------------
07A6           1750   ;------------------------------------------------------------
07A6           1751   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:439: void waitBit (void)
07A6           1752   ;        -----------------------------------------
07A6           1753   ;         function waitBit
07A6           1754   ;        -----------------------------------------
07A6           1755   _waitBit:
07A6           1756   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:451: _endasm;
07A6           1757            
07A6           1758     ;For a 22.1184MHz crystal one machine cycle
07A6           1759     ;takes 12/22.1184MHz=0.5425347us
07A6 7A0A      1760                 mov R2, #10
07A8           1761             H3:
07A8 792D      1762            mov R1, #45
07AA           1763             H2:
07AA 782D      1764            mov R0, #45
07AC           1765             H1:
07AC D810      1766            djnz R0, H1 ; 2 machine cycles-> 2*0.5425347us*184=200us
07AE D9D0      1767                 djnz R1, H2 ; 200us*250=0.05s
07B0 DA90      1768                 djnz R2, H3 ; 0.05s*20=1s
07B2 22        1769                 ret
07B3           1770                
07B3 22        1771            ret
07B4           1772   ;------------------------------------------------------------
07B4           1773   ;Allocation info for local variables in function 'wait1s'
07B4           1774   ;------------------------------------------------------------
07B4           1775   ;------------------------------------------------------------
07B4           1776   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:455: void wait1s (void)
07B4           1777   ;        -----------------------------------------
07B4           1778   ;         function wait1s
07B4           1779   ;        -----------------------------------------
07B4           1780   _wait1s:
07B4           1781   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:467: _endasm;
07B4           1782            
07B4           1783     ;For a 22.1184MHz crystal one machine cycle
07B4           1784     ;takes 12/22.1184MHz=0.5425347us
07B4 7A0A      1785                 mov R2, #10
07B6           1786             L3:
07B6 79B4      1787            mov R1, #180
07B8           1788             L2:
07B8 78B4      1789            mov R0, #180
07BA           1790             L1:
07BA D8D0      1791            djnz R0, L1 ; 2 machine cycles-> 2*0.5425347us*184=200us
07BC D990      1792                 djnz R1, L2 ; 200us*250=0.05s
07BE DA50      1793                 djnz R2, L3 ; 0.05s*20=1s
07C0 22        1794                 ret
07C1           1795                
07C1 22        1796            ret
07C2           1797   ;------------------------------------------------------------
07C2           1798   ;Allocation info for local variables in function 'voltage'
07C2           1799   ;------------------------------------------------------------
07C2           1800   ;channel                   Allocated to registers 
07C2           1801   ;------------------------------------------------------------
07C2           1802   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:475: float voltage (unsigned char channel)
07C2           1803   ;        -----------------------------------------
07C2           1804   ;         function voltage
07C2           1805   ;        -----------------------------------------
07C2           1806   _voltage:
07C2           1807   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:477: return ((GetADC(channel) * 4.84) / 1023.0); // VCC=4.84V (measured)
07C2 120100    1808            lcall   _GetADC
07C5 120100    1809            lcall   ___uint2fs
07C8 AA82      1810            mov     r2,dpl
07CA AB83      1811            mov     r3,dph
07CC ACF0      1812            mov     r4,b
07CE FD        1813            mov     r5,a
07CF C002      1814            push    ar2
07D1 C003      1815            push    ar3
07D3 C004      1816            push    ar4
07D5 C005      1817            push    ar5
07D7 90E148    1818            mov     dptr,#0xE148
07DA 75F09A    1819            mov     b,#0x9A
07DD 7440      1820            mov     a,#0x40
07DF 120100    1821            lcall   ___fsmul
07E2 AA82      1822            mov     r2,dpl
07E4 AB83      1823            mov     r3,dph
07E6 ACF0      1824            mov     r4,b
07E8 FD        1825            mov     r5,a
07E9 E581      1826            mov     a,sp
07EB 24FC      1827            add     a,#0xfc
07ED F581      1828            mov     sp,a
07EF E4        1829            clr     a
07F0 C0E0      1830            push    acc
07F2 74C0      1831            mov     a,#0xC0
07F4 C0E0      1832            push    acc
07F6 747F      1833            mov     a,#0x7F
07F8 C0E0      1834            push    acc
07FA 7444      1835            mov     a,#0x44
07FC C0E0      1836            push    acc
07FE 8A82      1837            mov     dpl,r2
0800 8B83      1838            mov     dph,r3
0802 8CF0      1839            mov     b,r4
0804 ED        1840            mov     a,r5
0805 120100    1841            lcall   ___fsdiv
0808 AA82      1842            mov     r2,dpl
080A AB83      1843            mov     r3,dph
080C ACF0      1844            mov     r4,b
080E FD        1845            mov     r5,a
080F E581      1846            mov     a,sp
0811 24FC      1847            add     a,#0xfc
0813 F581      1848            mov     sp,a
0815 8A82      1849            mov     dpl,r2
0817 8B83      1850            mov     dph,r3
0819 8CF0      1851            mov     b,r4
081B ED        1852            mov     a,r5
081C 22        1853            ret
081D           1854   ;------------------------------------------------------------
081D           1855   ;Allocation info for local variables in function 'SPIWrite'
081D           1856   ;------------------------------------------------------------
081D           1857   ;value                     Allocated to registers r2 
081D           1858   ;------------------------------------------------------------
081D           1859   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:480: void SPIWrite(unsigned char value)
081D           1860   ;        -----------------------------------------
081D           1861   ;         function SPIWrite
081D           1862   ;        -----------------------------------------
081D           1863   _SPIWrite:
081D AA82      1864            mov     r2,dpl
081F           1865   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:482: SPSTA&=(~SPIF); // Clear the SPIF flag in SPSTA
081F 53C47F    1866            anl     _SPSTA,#0x7F
0822           1867   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:483: SPDAT=value;
0822 8AC5      1868            mov     _SPDAT,r2
0824           1869   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:484: while((SPSTA & SPIF)!=SPIF); //Wait for transmission to end
0824           1870   L014001?:
0824 7480      1871            mov     a,#0x80
0826 55C4      1872            anl     a,_SPSTA
0828 FA        1873            mov     r2,a
0829 BA8050    1874            cjne    r2,#0x80,L014001?
082C 22        1875            ret
082D           1876   ;------------------------------------------------------------
082D           1877   ;Allocation info for local variables in function 'GetADC'
082D           1878   ;------------------------------------------------------------
082D           1879   ;channel                   Allocated to registers r2 
082D           1880   ;adc                       Allocated to registers r2 r3 
082D           1881   ;------------------------------------------------------------
082D           1882   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:488: unsigned int GetADC(unsigned char channel)
082D           1883   ;        -----------------------------------------
082D           1884   ;         function GetADC
082D           1885   ;        -----------------------------------------
082D           1886   _GetADC:
082D AA82      1887            mov     r2,dpl
082F           1888   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:493: SPCON&=(~SPEN); // Disable SPI
082F 53C3BF    1889            anl     _SPCON,#0xBF
0832           1890   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:494: SPCON=MSTR|CPOL|CPHA|SPR1|SPR0|SSDIS;
0832 75C33F    1891            mov     _SPCON,#0x3F
0835           1892   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:495: SPCON|=SPEN; // Enable SPI
0835 43C340    1893            orl     _SPCON,#0x40
0838           1894   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:497: P1_4=0; // Activate the MCP3004 ADC.
0838 C294      1895            clr     _P1_4
083A           1896   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:498: SPIWrite(channel|0x18);   // Send start bit, single/diff* bit, D2, D1, and D0 bits.
083A 7418      1897            mov     a,#0x18
083C 4A        1898            orl     a,r2
083D F582      1899            mov     dpl,a
083F 120100    1900            lcall   _SPIWrite
0842           1901   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:499: for(adc=0; adc<10; adc++); // Wait for S/H to setup
0842 7A0A      1902            mov     r2,#0x0A
0844 7B00      1903            mov     r3,#0x00
0846           1904   L015003?:
0846 1A        1905            dec     r2
0847 BAFFD0    1906            cjne    r2,#0xff,L015009?
084A 1B        1907            dec     r3
084B           1908   L015009?:
084B EA        1909            mov     a,r2
084C 4B        1910            orl     a,r3
084D 7001      1911            jnz     L015003?
084F           1912   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:500: SPIWrite(0x55); // Read bits 9 down to 4
084F 758255    1913            mov     dpl,#0x55
0852 120100    1914            lcall   _SPIWrite
0855           1915   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:501: adc=((SPDAT&0x3f)*0x100);
0855 743F      1916            mov     a,#0x3F
0857 55C5      1917            anl     a,_SPDAT
0859 FB        1918            mov     r3,a
085A 7A00      1919            mov     r2,#0x00
085C           1920   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:502: SPIWrite(0x55);// Read bits 3 down to 0
085C 758255    1921            mov     dpl,#0x55
085F C002      1922            push    ar2
0861 C003      1923            push    ar3
0863 120100    1924            lcall   _SPIWrite
0866 D003      1925            pop     ar3
0868 D002      1926            pop     ar2
086A           1927   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:503: P1_4=1; // Deactivate the MCP3004 ADC.
086A D294      1928            setb    _P1_4
086C           1929   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:504: adc+=(SPDAT&0xf0); // SPDR contains the low part of the result. 
086C 74F0      1930            mov     a,#0xF0
086E 55C5      1931            anl     a,_SPDAT
0870 FC        1932            mov     r4,a
0871 7D00      1933            mov     r5,#0x00
0873 EC        1934            mov     a,r4
0874 2A        1935            add     a,r2
0875 FA        1936            mov     r2,a
0876 ED        1937            mov     a,r5
0877 3B        1938            addc    a,r3
0878           1939   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:505: adc>>=4;
0878 C4        1940            swap    a
0879 CA        1941            xch     a,r2
087A C4        1942            swap    a
087B 540F      1943            anl     a,#0x0f
087D 6A        1944            xrl     a,r2
087E CA        1945            xch     a,r2
087F 540F      1946            anl     a,#0x0f
0881 CA        1947            xch     a,r2
0882 6A        1948            xrl     a,r2
0883 CA        1949            xch     a,r2
0884           1950   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:507: return adc;
0884 8A82      1951            mov     dpl,r2
0886 F583      1952            mov     dph,a
0888 22        1953            ret
0889           1954   ;------------------------------------------------------------
0889           1955   ;Allocation info for local variables in function 'wait_bit_time'
0889           1956   ;------------------------------------------------------------
0889           1957   ;------------------------------------------------------------
0889           1958   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:510: void wait_bit_time (void)
0889           1959   ;        -----------------------------------------
0889           1960   ;         function wait_bit_time
0889           1961   ;        -----------------------------------------
0889           1962   _wait_bit_time:
0889           1963   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:522: _endasm;
0889           1964            
0889           1965     ;For a 22.1184MHz crystal one machine cycle
0889           1966     ;takes 12/22.1184MHz=0.5425347us
0889 7A02      1967                 mov R2, #2
088B           1968             K3:
088B 79F8      1969            mov R1, #248
088D           1970             K2:
088D 78B8      1971            mov R0, #184
088F           1972             K1:
088F D890      1973            djnz R0, K1 ; 2 machine cycKes-> 2*0.5425347us*184=200us
0891 D950      1974                 djnz R1, K2 ; 200us*250=0.05s
0893 DA10      1975                 djnz R2, K3 ; 0.05s*20=1s
0895 22        1976                 ret
0896           1977                
0896 22        1978            ret
0897           1979   ;------------------------------------------------------------
0897           1980   ;Allocation info for local variables in function 'wait_one_and_half_bit_time'
0897           1981   ;------------------------------------------------------------
0897           1982   ;------------------------------------------------------------
0897           1983   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:525: void wait_one_and_half_bit_time(void)
0897           1984   ;        -----------------------------------------
0897           1985   ;         function wait_one_and_half_bit_time
0897           1986   ;        -----------------------------------------
0897           1987   _wait_one_and_half_bit_time:
0897           1988   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:537: _endasm;
0897           1989            
0897           1990     ;For a 22.1184MHz crystal one machine cycle
0897           1991     ;takes 12/22.1184MHz=0.5425347us
0897 7A03      1992                 mov R2, #3
0899           1993             J3:
0899 79F8      1994            mov R1, #248
089B           1995             J2:
089B 78B8      1996            mov R0, #184
089D           1997             J1:
089D D850      1998            djnz R0, J1 ; 2 machine cycJes-> 2*0.5425347us*184=200us
089F D910      1999                 djnz R1, J2 ; 200us*250=0.05s
08A1 DAD0      2000                 djnz R2, J3 ; 0.05s*20=1s
08A3 22        2001                 ret
08A4           2002                
08A4 22        2003            ret
08A5           2004            rseg R_CSEG
08A5           2005   
0000           2006            rseg R_XINIT
0000           2007   
0000           2008            rseg R_CONST
0000           2009   _MOVESPEED:
0000 6400      2010            db 0x64,0x00    ;  100
0002           2011   _TURNSPEED:
0002 5000      2012            db 0x50,0x00    ;  80
0004           2013   _MINVOLT:
0004 CDCC4C3D  2014            db 0xCD,0xCC,0x4C,0x3D  ;  5.000000e-002
0008           2015   _DISTANCEBUFFER:
0008 0000A041  2016            db 0x00,0x00,0xA0,0x41  ;  2.000000e+001
000C           2017   _NSTAGES:
000C 0C00      2018            db 0x0C,0x00    ;  12
000E           2019   _PRESETS:
000E 5802      2020            db 0x58,0x02    ;  600
0010 2602      2021            db 0x26,0x02    ;  550
0012 F401      2022            db 0xF4,0x01    ;  500
0014 C201      2023            db 0xC2,0x01    ;  450
0016 9001      2024            db 0x90,0x01    ;  400
0018 5E01      2025            db 0x5E,0x01    ;  350
001A 2C01      2026            db 0x2C,0x01    ;  300
001C FA00      2027            db 0xFA,0x00    ;  250
001E C800      2028            db 0xC8,0x00    ;  200
0020 9600      2029            db 0x96,0x00    ;  150
0022 6400      2030            db 0x64,0x00    ;  100
0024 3200      2031            db 0x32,0x00    ;  50
0026           2032   _MEMORY_LENGTH:
0026 0400      2033            db 0x04,0x00    ;  4
0028           2034   __str_0:
0028 444C2025  2035            db 'DL %3d - DR %3d - Stage %3d(%d)'
     3364202D
     20445220
     25336420
     2D205374
     61676520
     25336428
     256429
0047 0D        2036            db 0x0D
0048 00        2037            db 0x00
0049           2038   __str_1:
0049 1B        2039            db 0x1B
004A 5B324A    2040            db '[2J'
004D 00        2041            db 0x00
004E           2042   
001E           2043            CSEG
001E           2044   
001E           2045   end
