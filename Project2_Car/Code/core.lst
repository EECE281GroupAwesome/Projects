0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Sat Mar 29 00:13:42 2014
0000              5   ;--------------------------------------------------------
                  5   $name core
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _PRESETS
0000             28            public _NSTAGES
0000             29            public _ANGLEBUFFER
0000             30            public _DISTANCEBUFFER
0000             31            public _MINVOLT
0000             32            public _TURNSPEED
0000             33            public _MOVESPEED
0000             34            public _main
0000             35            public __c51_external_startup
0000             36            public _beaconSignal
0000             37            public _pwmCounter
0000             38            public _smooth_move_PARM_2
0000             39            public _rightHistory
0000             40            public _leftHistory
0000             41            public _turn
0000             42            public _Stage
0000             43            public _gotInst
0000             44            public _instruction
0000             45            public _distanceRight
0000             46            public _distanceLeft
0000             47            public _pwmRightTemp
0000             48            public _pwmLeftTemp
0000             49            public _rightSensor
0000             50            public _leftSensor
0000             51            public _tether
0000             52            public _direction
0000             53            public _pwmRight
0000             54            public _pwmLeft
0000             55            public _distCount
0000             56            public _pwmCount
0000             57            public _getDistance
0000             58            public _turnRatio
0000             59            public _moveCar
0000             60            public _smooth_move
0000             61            public _uTurn
0000             62            public _getSig
0000             63            public _wait1s
0000             64            public _voltage
0000             65            public _SPIWrite
0000             66            public _GetADC
0000             67   ;--------------------------------------------------------
0000             68   ; Special Function Registers
0000             69   ;--------------------------------------------------------
0000             70   _ACC            DATA 0xe0
0000             71   _B              DATA 0xf0
0000             72   _PSW            DATA 0xd0
0000             73   _SP             DATA 0x81
0000             74   _SPX            DATA 0xef
0000             75   _DPL            DATA 0x82
0000             76   _DPH            DATA 0x83
0000             77   _DPLB           DATA 0xd4
0000             78   _DPHB           DATA 0xd5
0000             79   _PAGE           DATA 0xf6
0000             80   _AX             DATA 0xe1
0000             81   _BX             DATA 0xf7
0000             82   _DSPR           DATA 0xe2
0000             83   _FIRD           DATA 0xe3
0000             84   _MACL           DATA 0xe4
0000             85   _MACH           DATA 0xe5
0000             86   _PCON           DATA 0x87
0000             87   _AUXR           DATA 0x8e
0000             88   _AUXR1          DATA 0xa2
0000             89   _DPCF           DATA 0xa1
0000             90   _CKRL           DATA 0x97
0000             91   _CKCKON0        DATA 0x8f
0000             92   _CKCKON1        DATA 0xaf
0000             93   _CKSEL          DATA 0x85
0000             94   _CLKREG         DATA 0xae
0000             95   _OSCCON         DATA 0x85
0000             96   _IE             DATA 0xa8
0000             97   _IEN0           DATA 0xa8
0000             98   _IEN1           DATA 0xb1
0000             99   _IPH0           DATA 0xb7
0000            100   _IP             DATA 0xb8
0000            101   _IPL0           DATA 0xb8
0000            102   _IPH1           DATA 0xb3
0000            103   _IPL1           DATA 0xb2
0000            104   _P0             DATA 0x80
0000            105   _P1             DATA 0x90
0000            106   _P2             DATA 0xa0
0000            107   _P3             DATA 0xb0
0000            108   _P4             DATA 0xc0
0000            109   _P0M0           DATA 0xe6
0000            110   _P0M1           DATA 0xe7
0000            111   _P1M0           DATA 0xd6
0000            112   _P1M1           DATA 0xd7
0000            113   _P2M0           DATA 0xce
0000            114   _P2M1           DATA 0xcf
0000            115   _P3M0           DATA 0xc6
0000            116   _P3M1           DATA 0xc7
0000            117   _P4M0           DATA 0xbe
0000            118   _P4M1           DATA 0xbf
0000            119   _SCON           DATA 0x98
0000            120   _SBUF           DATA 0x99
0000            121   _SADEN          DATA 0xb9
0000            122   _SADDR          DATA 0xa9
0000            123   _BDRCON         DATA 0x9b
0000            124   _BRL            DATA 0x9a
0000            125   _TCON           DATA 0x88
0000            126   _TMOD           DATA 0x89
0000            127   _TCONB          DATA 0x91
0000            128   _TL0            DATA 0x8a
0000            129   _TH0            DATA 0x8c
0000            130   _TL1            DATA 0x8b
0000            131   _TH1            DATA 0x8d
0000            132   _RL0            DATA 0xf2
0000            133   _RH0            DATA 0xf4
0000            134   _RL1            DATA 0xf3
0000            135   _RH1            DATA 0xf5
0000            136   _WDTRST         DATA 0xa6
0000            137   _WDTPRG         DATA 0xa7
0000            138   _T2CON          DATA 0xc8
0000            139   _T2MOD          DATA 0xc9
0000            140   _RCAP2H         DATA 0xcb
0000            141   _RCAP2L         DATA 0xca
0000            142   _TH2            DATA 0xcd
0000            143   _TL2            DATA 0xcc
0000            144   _SPCON          DATA 0xc3
0000            145   _SPSTA          DATA 0xc4
0000            146   _SPDAT          DATA 0xc5
0000            147   _SSCON          DATA 0x93
0000            148   _SSCS           DATA 0x94
0000            149   _SSDAT          DATA 0x95
0000            150   _SSADR          DATA 0x96
0000            151   _KBLS           DATA 0x9c
0000            152   _KBE            DATA 0x9d
0000            153   _KBF            DATA 0x9e
0000            154   _KBMOD          DATA 0x9f
0000            155   _BMSEL          DATA 0x92
0000            156   _FCON           DATA 0xd2
0000            157   _EECON          DATA 0xd2
0000            158   _ACSRA          DATA 0xa3
0000            159   _ACSRB          DATA 0xab
0000            160   _AREF           DATA 0xbd
0000            161   _DADC           DATA 0xa4
0000            162   _DADI           DATA 0xa5
0000            163   _DADL           DATA 0xac
0000            164   _DADH           DATA 0xad
0000            165   _CCON           DATA 0xd8
0000            166   _CMOD           DATA 0xd9
0000            167   _CL             DATA 0xe9
0000            168   _CH             DATA 0xf9
0000            169   _CCAPM0         DATA 0xda
0000            170   _CCAPM1         DATA 0xdb
0000            171   _CCAPM2         DATA 0xdc
0000            172   _CCAPM3         DATA 0xdd
0000            173   _CCAPM4         DATA 0xde
0000            174   _CCAP0H         DATA 0xfa
0000            175   _CCAP1H         DATA 0xfb
0000            176   _CCAP2H         DATA 0xfc
0000            177   _CCAP3H         DATA 0xfd
0000            178   _CCAP4H         DATA 0xfe
0000            179   _CCAP0L         DATA 0xea
0000            180   _CCAP1L         DATA 0xeb
0000            181   _CCAP2L         DATA 0xec
0000            182   _CCAP3L         DATA 0xed
0000            183   _CCAP4L         DATA 0xee
0000            184   ;--------------------------------------------------------
0000            185   ; special function bits
0000            186   ;--------------------------------------------------------
0000            187   _ACC_0          BIT 0xe0
0000            188   _ACC_1          BIT 0xe1
0000            189   _ACC_2          BIT 0xe2
0000            190   _ACC_3          BIT 0xe3
0000            191   _ACC_4          BIT 0xe4
0000            192   _ACC_5          BIT 0xe5
0000            193   _ACC_6          BIT 0xe6
0000            194   _ACC_7          BIT 0xe7
0000            195   _B_0            BIT 0xf0
0000            196   _B_1            BIT 0xf1
0000            197   _B_2            BIT 0xf2
0000            198   _B_3            BIT 0xf3
0000            199   _B_4            BIT 0xf4
0000            200   _B_5            BIT 0xf5
0000            201   _B_6            BIT 0xf6
0000            202   _B_7            BIT 0xf7
0000            203   _P              BIT 0xd0
0000            204   _F1             BIT 0xd1
0000            205   _OV             BIT 0xd2
0000            206   _RS0            BIT 0xd3
0000            207   _RS1            BIT 0xd4
0000            208   _F0             BIT 0xd5
0000            209   _AC             BIT 0xd6
0000            210   _CY             BIT 0xd7
0000            211   _EX0            BIT 0xa8
0000            212   _ET0            BIT 0xa9
0000            213   _EX1            BIT 0xaa
0000            214   _ET1            BIT 0xab
0000            215   _ES             BIT 0xac
0000            216   _ET2            BIT 0xad
0000            217   _EC             BIT 0xae
0000            218   _EA             BIT 0xaf
0000            219   _PX0            BIT 0xb8
0000            220   _PT0            BIT 0xb9
0000            221   _PX1            BIT 0xba
0000            222   _PT1            BIT 0xbb
0000            223   _PS             BIT 0xbc
0000            224   _PT2            BIT 0xbd
0000            225   _IP0D           BIT 0xbf
0000            226   _PPCL           BIT 0xbe
0000            227   _PT2L           BIT 0xbd
0000            228   _PLS            BIT 0xbc
0000            229   _PT1L           BIT 0xbb
0000            230   _PX1L           BIT 0xba
0000            231   _PT0L           BIT 0xb9
0000            232   _PX0L           BIT 0xb8
0000            233   _P0_0           BIT 0x80
0000            234   _P0_1           BIT 0x81
0000            235   _P0_2           BIT 0x82
0000            236   _P0_3           BIT 0x83
0000            237   _P0_4           BIT 0x84
0000            238   _P0_5           BIT 0x85
0000            239   _P0_6           BIT 0x86
0000            240   _P0_7           BIT 0x87
0000            241   _P1_0           BIT 0x90
0000            242   _P1_1           BIT 0x91
0000            243   _P1_2           BIT 0x92
0000            244   _P1_3           BIT 0x93
0000            245   _P1_4           BIT 0x94
0000            246   _P1_5           BIT 0x95
0000            247   _P1_6           BIT 0x96
0000            248   _P1_7           BIT 0x97
0000            249   _P2_0           BIT 0xa0
0000            250   _P2_1           BIT 0xa1
0000            251   _P2_2           BIT 0xa2
0000            252   _P2_3           BIT 0xa3
0000            253   _P2_4           BIT 0xa4
0000            254   _P2_5           BIT 0xa5
0000            255   _P2_6           BIT 0xa6
0000            256   _P2_7           BIT 0xa7
0000            257   _P3_0           BIT 0xb0
0000            258   _P3_1           BIT 0xb1
0000            259   _P3_2           BIT 0xb2
0000            260   _P3_3           BIT 0xb3
0000            261   _P3_4           BIT 0xb4
0000            262   _P3_5           BIT 0xb5
0000            263   _P3_6           BIT 0xb6
0000            264   _P3_7           BIT 0xb7
0000            265   _RXD            BIT 0xb0
0000            266   _TXD            BIT 0xb1
0000            267   _INT0           BIT 0xb2
0000            268   _INT1           BIT 0xb3
0000            269   _T0             BIT 0xb4
0000            270   _T1             BIT 0xb5
0000            271   _WR             BIT 0xb6
0000            272   _RD             BIT 0xb7
0000            273   _P4_0           BIT 0xc0
0000            274   _P4_1           BIT 0xc1
0000            275   _P4_2           BIT 0xc2
0000            276   _P4_3           BIT 0xc3
0000            277   _P4_4           BIT 0xc4
0000            278   _P4_5           BIT 0xc5
0000            279   _P4_6           BIT 0xc6
0000            280   _P4_7           BIT 0xc7
0000            281   _RI             BIT 0x98
0000            282   _TI             BIT 0x99
0000            283   _RB8            BIT 0x9a
0000            284   _TB8            BIT 0x9b
0000            285   _REN            BIT 0x9c
0000            286   _SM2            BIT 0x9d
0000            287   _SM1            BIT 0x9e
0000            288   _SM0            BIT 0x9f
0000            289   _IT0            BIT 0x88
0000            290   _IE0            BIT 0x89
0000            291   _IT1            BIT 0x8a
0000            292   _IE1            BIT 0x8b
0000            293   _TR0            BIT 0x8c
0000            294   _TF0            BIT 0x8d
0000            295   _TR1            BIT 0x8e
0000            296   _TF1            BIT 0x8f
0000            297   _CP_RL2         BIT 0xc8
0000            298   _C_T2           BIT 0xc9
0000            299   _TR2            BIT 0xca
0000            300   _EXEN2          BIT 0xcb
0000            301   _TCLK           BIT 0xcc
0000            302   _RCLK           BIT 0xcd
0000            303   _EXF2           BIT 0xce
0000            304   _TF2            BIT 0xcf
0000            305   _CF             BIT 0xdf
0000            306   _CR             BIT 0xde
0000            307   _CCF4           BIT 0xdc
0000            308   _CCF3           BIT 0xdb
0000            309   _CCF2           BIT 0xda
0000            310   _CCF1           BIT 0xd9
0000            311   _CCF0           BIT 0xd8
0000            312   ;--------------------------------------------------------
0000            313   ; overlayable register banks
0000            314   ;--------------------------------------------------------
0000            315            rbank0 segment data overlay
0000            316   ;--------------------------------------------------------
0000            317   ; overlayable bit register bank
0000            318   ;--------------------------------------------------------
0000            319            rseg BIT_BANK
0000            320   bits:
0000            321            ds 1
0001            322            b0 equ  bits.0 
0001            323            b1 equ  bits.1 
0001            324            b2 equ  bits.2 
0001            325            b3 equ  bits.3 
0001            326            b4 equ  bits.4 
0001            327            b5 equ  bits.5 
0001            328            b6 equ  bits.6 
0001            329            b7 equ  bits.7 
0001            330   ;--------------------------------------------------------
0001            331   ; internal ram data
0001            332   ;--------------------------------------------------------
0000            333            rseg R_DSEG
0000            334   _pwmCount:
0000            335            ds 2
0002            336   _distCount:
0002            337            ds 2
0004            338   _pwmLeft:
0004            339            ds 2
0006            340   _pwmRight:
0006            341            ds 2
0008            342   _direction:
0008            343            ds 2
000A            344   _tether:
000A            345            ds 2
000C            346   _leftSensor:
000C            347            ds 2
000E            348   _rightSensor:
000E            349            ds 2
0010            350   _pwmLeftTemp:
0010            351            ds 2
0012            352   _pwmRightTemp:
0012            353            ds 2
0014            354   _distanceLeft:
0014            355            ds 4
0018            356   _distanceRight:
0018            357            ds 4
001C            358   _instruction:
001C            359            ds 2
001E            360   _gotInst:
001E            361            ds 2
0020            362   _Stage:
0020            363            ds 2
0022            364   _turn:
0022            365            ds 1
0023            366   _leftHistory:
0023            367            ds 6
0029            368   _rightHistory:
0029            369            ds 6
002F            370   _smooth_move_PARM_2:
002F            371            ds 2
0031            372   _smooth_move_history_1_113:
0031            373            ds 3
0034            374   ;--------------------------------------------------------
0034            375   ; overlayable items in internal ram 
0034            376   ;--------------------------------------------------------
0000            377            rseg    R_OSEG
0000            378   ;--------------------------------------------------------
0000            379   ; indirectly addressable internal ram data
0000            380   ;--------------------------------------------------------
0000            381            rseg R_ISEG
0000            382   ;--------------------------------------------------------
0000            383   ; absolute internal ram data
0000            384   ;--------------------------------------------------------
0000            385            DSEG
0000            386   ;--------------------------------------------------------
0000            387   ; bit data
0000            388   ;--------------------------------------------------------
0000            389            rseg R_BSEG
0000            390   _pwmCounter_sloc0_1_0:
0000            391            DBIT    1
0001            392   ;--------------------------------------------------------
0001            393   ; paged external ram data
0001            394   ;--------------------------------------------------------
0000            395            rseg R_PSEG
0000            396   ;--------------------------------------------------------
0000            397   ; external ram data
0000            398   ;--------------------------------------------------------
0000            399            rseg R_XSEG
0000            400   ;--------------------------------------------------------
0000            401   ; absolute external ram data
0000            402   ;--------------------------------------------------------
0000            403            XSEG
0000            404   ;--------------------------------------------------------
0000            405   ; external initialized ram data
0000            406   ;--------------------------------------------------------
0000            407            rseg R_IXSEG
0000            408            rseg R_HOME
0000            409            rseg R_GSINIT
0000            410            rseg R_CSEG
0000            411   ;--------------------------------------------------------
0000            412   ; Reset entry point and interrupt vectors
0000            413   ;--------------------------------------------------------
0000            414            CSEG at 0x0000
0000 020100     415            ljmp    _crt0
000B            416            CSEG at 0x000b
000B 020100     417            ljmp    _pwmCounter
001B            418            CSEG at 0x001b
001B 020100     419            ljmp    _beaconSignal
001E            420   ;--------------------------------------------------------
001E            421   ; global & static initialisations
001E            422   ;--------------------------------------------------------
0000            423            rseg R_HOME
0000            424            rseg R_GSINIT
0000            425            rseg R_GSINIT
0000            426   ;--------------------------------------------------------
0000            427   ; data variables initialization
0000            428   ;--------------------------------------------------------
0000            429            rseg R_DINIT
0000            430   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:74: volatile unsigned int pwmCount = 0;
0000 E4         431            clr     a
0001 F528       432            mov     _pwmCount,a
0003 F529       433            mov     (_pwmCount + 1),a
0005            434   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:75: volatile unsigned int distCount = 0;
0005 E4         435            clr     a
0006 F5E8       436            mov     _distCount,a
0008 F5E9       437            mov     (_distCount + 1),a
000A            438   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:80: volatile unsigned int leftSensor = 0;
000A E4         439            clr     a
000B F5A8       440            mov     _leftSensor,a
000D F5A9       441            mov     (_leftSensor + 1),a
000F            442   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:81: volatile unsigned int rightSensor = 0;
000F E4         443            clr     a
0010 F568       444            mov     _rightSensor,a
0012 F569       445            mov     (_rightSensor + 1),a
0014            446   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:82: volatile int pwmLeftTemp = 0;
0014 E4         447            clr     a
0015 F528       448            mov     _pwmLeftTemp,a
0017 F529       449            mov     (_pwmLeftTemp + 1),a
0019            450   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:83: volatile int pwmRightTemp = 0;
0019 E4         451            clr     a
001A F5E8       452            mov     _pwmRightTemp,a
001C F5E9       453            mov     (_pwmRightTemp + 1),a
001E            454   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:228: int leftHistory[] = {0, 0, 0};
001E 752800     455            mov     _leftHistory,#0x00
0021 752900     456            mov     (_leftHistory + 1),#0x00
0024 752A00     457            mov     (_leftHistory + 0x0002),#0x00
0027 752B00     458            mov     ((_leftHistory + 0x0002) + 1),#0x00
002A 752C00     459            mov     (_leftHistory + 0x0004),#0x00
002D 752D00     460            mov     ((_leftHistory + 0x0004) + 1),#0x00
0030            461   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:229: int rightHistory[] = {0, 0, 0};
0030 75E800     462            mov     _rightHistory,#0x00
0033 75E900     463            mov     (_rightHistory + 1),#0x00
0036 75EA00     464            mov     (_rightHistory + 0x0002),#0x00
0039 75EB00     465            mov     ((_rightHistory + 0x0002) + 1),#0x00
003C 75EC00     466            mov     (_rightHistory + 0x0004),#0x00
003F 75ED00     467            mov     ((_rightHistory + 0x0004) + 1),#0x00
0042            468            ; The linker places a 'ret' at the end of segment R_DINIT.
0042            469   ;--------------------------------------------------------
0042            470   ; code
0042            471   ;--------------------------------------------------------
0000            472            rseg R_CSEG
0000            473   ;------------------------------------------------------------
0000            474   ;Allocation info for local variables in function 'pwmCounter'
0000            475   ;------------------------------------------------------------
0000            476   ;------------------------------------------------------------
0000            477   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:115: void pwmCounter() interrupt 1
0000            478   ;        -----------------------------------------
0000            479   ;         function pwmCounter
0000            480   ;        -----------------------------------------
0000            481   _pwmCounter:
0000            482            using   0
0000 C0E8       483            push    bits
0002 C0E0       484            push    acc
0004 C0F0       485            push    b
0006 C082       486            push    dpl
0008 C083       487            push    dph
000A C002       488            push    (0+2)
000C C003       489            push    (0+3)
000E C004       490            push    (0+4)
0010 C005       491            push    (0+5)
0012 C006       492            push    (0+6)
0014 C007       493            push    (0+7)
0016 C000       494            push    (0+0)
0018 C001       495            push    (0+1)
001A C0D0       496            push    psw
001C 75D000     497            mov     psw,#0x00
001F            498   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:117: if(++pwmCount > 99)
001F 7401       499            mov     a,#0x01
0021 2528       500            add     a,_pwmCount
0023 F528       501            mov     _pwmCount,a
0025 E4         502            clr     a
0026 3529       503            addc    a,(_pwmCount + 1)
0028 F529       504            mov     (_pwmCount + 1),a
002A C3         505            clr     c
002B 7463       506            mov     a,#0x63
002D 9528       507            subb    a,_pwmCount
002F E4         508            clr     a
0030 9529       509            subb    a,(_pwmCount + 1)
0032 5001       510            jnc     L002002?
0034            511   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:119: pwmCount = 0;
0034 E4         512            clr     a
0035 F528       513            mov     _pwmCount,a
0037 F529       514            mov     (_pwmCount + 1),a
0039            515   L002002?:
0039            516   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:123: if (++distCount > 999)
0039 7401       517            mov     a,#0x01
003B 25E8       518            add     a,_distCount
003D F5E8       519            mov     _distCount,a
003F E4         520            clr     a
0040 35E9       521            addc    a,(_distCount + 1)
0042 F5E9       522            mov     (_distCount + 1),a
0044 C3         523            clr     c
0045 74E7       524            mov     a,#0xE7
0047 95E8       525            subb    a,_distCount
0049 7403       526            mov     a,#0x03
004B 95E9       527            subb    a,(_distCount + 1)
004D 5001       528            jnc     L002004?
004F            529   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:125: distCount = 0;   
004F E4         530            clr     a
0050 F5E8       531            mov     _distCount,a
0052 F5E9       532            mov     (_distCount + 1),a
0054            533   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:126: Stage = 6;
0054 75A806     534            mov     _Stage,#0x06
0057 E4         535            clr     a
0058 F5A9       536            mov     (_Stage + 1),a
005A            537   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:127: printf("DL %3.1f - DR %3.1f - Stage %3.1f(%d)\r", distanceLeft, distanceRight, PRESETS[Stage], Stage);
005A AAA8       538            mov     r2,_Stage
005C E5A9       539            mov     a,(_Stage + 1)
005E CA         540            xch     a,r2
005F 25E0       541            add     a,acc
0061 CA         542            xch     a,r2
0062 33         543            rlc     a
0063 CA         544            xch     a,r2
0064 25E0       545            add     a,acc
0066 CA         546            xch     a,r2
0067 33         547            rlc     a
0068 FB         548            mov     r3,a
0069 EA         549            mov     a,r2
006A 24C8       550            add     a,#_PRESETS
006C F582       551            mov     dpl,a
006E EB         552            mov     a,r3
006F 3441       553            addc    a,#(_PRESETS >> 8)
0071 F583       554            mov     dph,a
0073 E4         555            clr     a
0074 93         556            movc    a,@a+dptr
0075 FA         557            mov     r2,a
0076 A3         558            inc     dptr
0077 E4         559            clr     a
0078 93         560            movc    a,@a+dptr
0079 FB         561            mov     r3,a
007A A3         562            inc     dptr
007B E4         563            clr     a
007C 93         564            movc    a,@a+dptr
007D FC         565            mov     r4,a
007E A3         566            inc     dptr
007F E4         567            clr     a
0080 93         568            movc    a,@a+dptr
0081 FD         569            mov     r5,a
0082 C0A8       570            push    _Stage
0084 C0A9       571            push    (_Stage + 1)
0086 C002       572            push    ar2
0088 C003       573            push    ar3
008A C004       574            push    ar4
008C C005       575            push    ar5
008E C068       576            push    _distanceRight
0090 C069       577            push    (_distanceRight + 1)
0092 C06A       578            push    (_distanceRight + 2)
0094 C06B       579            push    (_distanceRight + 3)
0096 C0A8       580            push    _distanceLeft
0098 C0A9       581            push    (_distanceLeft + 1)
009A C0AA       582            push    (_distanceLeft + 2)
009C C0AB       583            push    (_distanceLeft + 3)
009E 7488       584            mov     a,#__str_0
00A0 C0E0       585            push    acc
00A2 748D       586            mov     a,#(__str_0 >> 8)
00A4 C0E0       587            push    acc
00A6 7480       588            mov     a,#0x80
00A8 C0E0       589            push    acc
00AA 120100     590            lcall   _printf
00AD E581       591            mov     a,sp
00AF 24EF       592            add     a,#0xef
00B1 F581       593            mov     sp,a
00B3            594   L002004?:
00B3            595   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:131: if(pwmLeft > 0)
00B3 C3         596            clr     c
00B4 E4         597            clr     a
00B5 95A8       598            subb    a,_pwmLeft
00B7 E4         599            clr     a
00B8 6480       600            xrl     a,#0x80
00BA 85A9F0     601            mov     b,(_pwmLeft + 1)
00BD 63F080     602            xrl     b,#0x80
00C0 95F0       603            subb    a,b
00C2 5001       604            jnc     L002008?
00C4            605   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:133: P0_1 = (pwmLeft > pwmCount) ? 0:1;
00C4 AAA8       606            mov     r2,_pwmLeft
00C6 ABA9       607            mov     r3,(_pwmLeft + 1)
00C8 C3         608            clr     c
00C9 E528       609            mov     a,_pwmCount
00CB 9A         610            subb    a,r2
00CC E529       611            mov     a,(_pwmCount + 1)
00CE 9B         612            subb    a,r3
00CF 9248       613            mov  _pwmCounter_sloc0_1_0,c
00D1 B3         614            cpl     c
00D2 9281       615            mov     _P0_1,c
00D4            616   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:134: P0_0 = 1;
00D4 D280       617            setb    _P0_0
00D6 8001       618            sjmp    L002009?
00D8            619   L002008?:
00D8            620   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:136: else if(pwmLeft < 0)
00D8 E5A9       621            mov     a,(_pwmLeft + 1)
00DA 30E788     622            jnb     acc.7,L002009?
00DD            623   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:139: P0_0 = ((-1) * pwmLeft > pwmCount) ? 0:1;
00DD C3         624            clr     c
00DE E4         625            clr     a
00DF 95A8       626            subb    a,_pwmLeft
00E1 FA         627            mov     r2,a
00E2 E4         628            clr     a
00E3 95A9       629            subb    a,(_pwmLeft + 1)
00E5 FB         630            mov     r3,a
00E6 C3         631            clr     c
00E7 E528       632            mov     a,_pwmCount
00E9 9A         633            subb    a,r2
00EA E529       634            mov     a,(_pwmCount + 1)
00EC 9B         635            subb    a,r3
00ED 9248       636            mov  _pwmCounter_sloc0_1_0,c
00EF B3         637            cpl     c
00F0 9280       638            mov     _P0_0,c
00F2            639   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:140: P0_1 = 1;
00F2 D281       640            setb    _P0_1
00F4            641   L002009?:
00F4            642   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:142: if(pwmLeft==0)
00F4 E5A8       643            mov     a,_pwmLeft
00F6 45A9       644            orl     a,(_pwmLeft + 1)
00F8 7001       645            jnz     L002011?
00FA            646   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:144: P0_1 = P0_0 = 1;
00FA D280       647            setb    _P0_0
00FC A280       648            mov     c,_P0_0
00FE 9281       649            mov     _P0_1,c
0100            650   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:146: P1_0 = ((-1) * pwmLeft > pwmCount) ? 0:1;
0100 C3         651            clr     c
0101 E4         652            clr     a
0102 95A8       653            subb    a,_pwmLeft
0104 FA         654            mov     r2,a
0105 E4         655            clr     a
0106 95A9       656            subb    a,(_pwmLeft + 1)
0108 FB         657            mov     r3,a
0109 C3         658            clr     c
010A E528       659            mov     a,_pwmCount
010C 9A         660            subb    a,r2
010D E529       661            mov     a,(_pwmCount + 1)
010F 9B         662            subb    a,r3
0110 9248       663            mov  _pwmCounter_sloc0_1_0,c
0112 B3         664            cpl     c
0113 9290       665            mov     _P1_0,c
0115            666   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:147: P1_1 = 1;
0115 D291       667            setb    _P1_1
0117 8001       668            sjmp    L002012?
0119            669   L002011?:
0119            670   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:150: P1_0 = 1;
0119 D290       671            setb    _P1_0
011B            672   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:151: P1_1 = 1;
011B D291       673            setb    _P1_1
011D            674   L002012?:
011D            675   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:155: if(pwmRight > 0)
011D C3         676            clr     c
011E E4         677            clr     a
011F 9568       678            subb    a,_pwmRight
0121 E4         679            clr     a
0122 6480       680            xrl     a,#0x80
0124 8569F0     681            mov     b,(_pwmRight + 1)
0127 63F080     682            xrl     b,#0x80
012A 95F0       683            subb    a,b
012C 5001       684            jnc     L002016?
012E            685   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:157: P0_4 = (pwmRight > pwmCount) ? 0:1;
012E AA68       686            mov     r2,_pwmRight
0130 AB69       687            mov     r3,(_pwmRight + 1)
0132 C3         688            clr     c
0133 E528       689            mov     a,_pwmCount
0135 9A         690            subb    a,r2
0136 E529       691            mov     a,(_pwmCount + 1)
0138 9B         692            subb    a,r3
0139 9248       693            mov  _pwmCounter_sloc0_1_0,c
013B B3         694            cpl     c
013C 9284       695            mov     _P0_4,c
013E            696   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:158: P0_3 = 1;
013E D283       697            setb    _P0_3
0140 8001       698            sjmp    L002017?
0142            699   L002016?:
0142            700   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:160: else if(pwmRight < 0)
0142 E569       701            mov     a,(_pwmRight + 1)
0144 30E788     702            jnb     acc.7,L002017?
0147            703   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:163: P0_3 = ((-1) * pwmRight > pwmCount) ? 0:1;
0147 C3         704            clr     c
0148 E4         705            clr     a
0149 9568       706            subb    a,_pwmRight
014B FA         707            mov     r2,a
014C E4         708            clr     a
014D 9569       709            subb    a,(_pwmRight + 1)
014F FB         710            mov     r3,a
0150 C3         711            clr     c
0151 E528       712            mov     a,_pwmCount
0153 9A         713            subb    a,r2
0154 E529       714            mov     a,(_pwmCount + 1)
0156 9B         715            subb    a,r3
0157 9248       716            mov  _pwmCounter_sloc0_1_0,c
0159 B3         717            cpl     c
015A 9283       718            mov     _P0_3,c
015C            719   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:164: P0_4 = 1;
015C D284       720            setb    _P0_4
015E            721   L002017?:
015E            722   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:166: if(pwmRight==0)
015E E568       723            mov     a,_pwmRight
0160 4569       724            orl     a,(_pwmRight + 1)
0162 7001       725            jnz     L002020?
0164            726   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:168: P0_4 = P0_3 = 1;
0164 D283       727            setb    _P0_3
0166 A283       728            mov     c,_P0_3
0168 9284       729            mov     _P0_4,c
016A            730   L002020?:
016A D0D0       731            pop     psw
016C D001       732            pop     (0+1)
016E D000       733            pop     (0+0)
0170 D007       734            pop     (0+7)
0172 D006       735            pop     (0+6)
0174 D005       736            pop     (0+5)
0176 D004       737            pop     (0+4)
0178 D003       738            pop     (0+3)
017A D002       739            pop     (0+2)
017C D083       740            pop     dph
017E D082       741            pop     dpl
0180 D0F0       742            pop     b
0182 D0E0       743            pop     acc
0184 D0E8       744            pop     bits
0186 32         745            reti
0187            746   ;------------------------------------------------------------
0187            747   ;Allocation info for local variables in function 'beaconSignal'
0187            748   ;------------------------------------------------------------
0187            749   ;------------------------------------------------------------
0187            750   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:173: void beaconSignal() interrupt 3
0187            751   ;        -----------------------------------------
0187            752   ;         function beaconSignal
0187            753   ;        -----------------------------------------
0187            754   _beaconSignal:
0187 C0E8       755            push    bits
0189 C0E0       756            push    acc
018B C0F0       757            push    b
018D C082       758            push    dpl
018F C083       759            push    dph
0191 C002       760            push    (0+2)
0193 C003       761            push    (0+3)
0195 C004       762            push    (0+4)
0197 C005       763            push    (0+5)
0199 C006       764            push    (0+6)
019B C007       765            push    (0+7)
019D C000       766            push    (0+0)
019F C001       767            push    (0+1)
01A1 C0D0       768            push    psw
01A3 75D000     769            mov     psw,#0x00
01A6            770   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:175: if (voltage(0) < 0.1) 
01A6 758200     771            mov     dpl,#0x00
01A9 120100     772            lcall   _voltage
01AC AA82       773            mov     r2,dpl
01AE AB83       774            mov     r3,dph
01B0 ACF0       775            mov     r4,b
01B2 FD         776            mov     r5,a
01B3 74CD       777            mov     a,#0xCD
01B5 C0E0       778            push    acc
01B7 74CC       779            mov     a,#0xCC
01B9 C0E0       780            push    acc
01BB C0E0       781            push    acc
01BD 743D       782            mov     a,#0x3D
01BF C0E0       783            push    acc
01C1 8A82       784            mov     dpl,r2
01C3 8B83       785            mov     dph,r3
01C5 8CF0       786            mov     b,r4
01C7 ED         787            mov     a,r5
01C8 120100     788            lcall   ___fslt
01CB AA82       789            mov     r2,dpl
01CD E581       790            mov     a,sp
01CF 24FC       791            add     a,#0xfc
01D1 F581       792            mov     sp,a
01D3 EA         793            mov     a,r2
01D4 6001       794            jz      L003006?
01D6            795   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:177: ET0 = 0;
01D6 C2A9       796            clr     _ET0
01D8            797   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:178: pwmLeftTemp = pwmLeft;
01D8 85A828     798            mov     _pwmLeftTemp,_pwmLeft
01DB 85A929     799            mov     (_pwmLeftTemp + 1),(_pwmLeft + 1)
01DE            800   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:179: pwmRightTemp = pwmRight;
01DE 8568E8     801            mov     _pwmRightTemp,_pwmRight
01E1 8569E9     802            mov     (_pwmRightTemp + 1),(_pwmRight + 1)
01E4            803   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:180: while(voltage(0) < 0.1);
01E4            804   L003001?:
01E4 758200     805            mov     dpl,#0x00
01E7 120100     806            lcall   _voltage
01EA AA82       807            mov     r2,dpl
01EC AB83       808            mov     r3,dph
01EE ACF0       809            mov     r4,b
01F0 FD         810            mov     r5,a
01F1 74CD       811            mov     a,#0xCD
01F3 C0E0       812            push    acc
01F5 74CC       813            mov     a,#0xCC
01F7 C0E0       814            push    acc
01F9 C0E0       815            push    acc
01FB 743D       816            mov     a,#0x3D
01FD C0E0       817            push    acc
01FF 8A82       818            mov     dpl,r2
0201 8B83       819            mov     dph,r3
0203 8CF0       820            mov     b,r4
0205 ED         821            mov     a,r5
0206 120100     822            lcall   ___fslt
0209 AA82       823            mov     r2,dpl
020B E581       824            mov     a,sp
020D 24FC       825            add     a,#0xfc
020F F581       826            mov     sp,a
0211 EA         827            mov     a,r2
0212 7001       828            jnz     L003001?
0214            829   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:181: instruction = getSig();
0214 120100     830            lcall   _getSig
0217 858228     831            mov     _instruction,dpl
021A 858329     832            mov     (_instruction + 1),dph
021D            833   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:182: pwmLeft = pwmLeftTemp;
021D 8528A8     834            mov     _pwmLeft,_pwmLeftTemp
0220 8529A9     835            mov     (_pwmLeft + 1),(_pwmLeftTemp + 1)
0223            836   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:183: pwmRight = pwmRightTemp;
0223 85E868     837            mov     _pwmRight,_pwmRightTemp
0226 85E969     838            mov     (_pwmRight + 1),(_pwmRightTemp + 1)
0229            839   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:184: ET0 =  1;
0229 D2A9       840            setb    _ET0
022B            841   L003006?:
022B D0D0       842            pop     psw
022D D001       843            pop     (0+1)
022F D000       844            pop     (0+0)
0231 D007       845            pop     (0+7)
0233 D006       846            pop     (0+6)
0235 D005       847            pop     (0+5)
0237 D004       848            pop     (0+4)
0239 D003       849            pop     (0+3)
023B D002       850            pop     (0+2)
023D D083       851            pop     dph
023F D082       852            pop     dpl
0241 D0F0       853            pop     b
0243 D0E0       854            pop     acc
0245 D0E8       855            pop     bits
0247 32         856            reti
0248            857   ;------------------------------------------------------------
0248            858   ;Allocation info for local variables in function '_c51_external_startup'
0248            859   ;------------------------------------------------------------
0248            860   ;------------------------------------------------------------
0248            861   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:190: unsigned char _c51_external_startup(void)
0248            862   ;        -----------------------------------------
0248            863   ;         function _c51_external_startup
0248            864   ;        -----------------------------------------
0248            865   __c51_external_startup:
0248            866   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:193: P0M0 = 0;        P0M1 = 0;
0248 75E600     867            mov     _P0M0,#0x00
024B 75E700     868            mov     _P0M1,#0x00
024E            869   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:194: P1M0 = 0;        P1M1 = 0;
024E 75D600     870            mov     _P1M0,#0x00
0251 75D700     871            mov     _P1M1,#0x00
0254            872   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:195: P2M0 = 0;        P2M1 = 0;
0254 75CE00     873            mov     _P2M0,#0x00
0257 75CF00     874            mov     _P2M1,#0x00
025A            875   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:196: P3M0 = 0;        P3M1 = 0;
025A 75C600     876            mov     _P3M0,#0x00
025D 75C700     877            mov     _P3M1,#0x00
0260            878   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:197: AUXR = 0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
0260 758E11     879            mov     _AUXR,#0x11
0263            880   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:198: P4M0 = 0;        P4M1 = 0;
0263 75BE00     881            mov     _P4M0,#0x00
0266 75BF00     882            mov     _P4M1,#0x00
0269            883   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:202: PCON |= 0x80;
0269 438780     884            orl     _PCON,#0x80
026C            885   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:203: SCON = 0x52;
026C 759852     886            mov     _SCON,#0x52
026F            887   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:204: BDRCON = 0;
026F 759B00     888            mov     _BDRCON,#0x00
0272            889   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:205: BRL = BRG_VAL;
0272 759AFA     890            mov     _BRL,#0xFA
0275            891   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:206: BDRCON = BRR | TBCK | RBCK | SPD;
0275 759B1E     892            mov     _BDRCON,#0x1E
0278            893   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:208: TMOD = 0B_0001_0001;     // Timer 0 as 16-bit timer      
0278 758911     894            mov     _TMOD,#0x11
027B            895   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:209: TH0 = RH0 = TIMER0_RELOAD_VALUE / 0x100;
027B 75F4FF     896            mov     _RH0,#0xFF
027E 758CFF     897            mov     _TH0,#0xFF
0281            898   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:210: TL0 = RL0 = TIMER0_RELOAD_VALUE % 0x100;
0281 75F248     899            mov     _RL0,#0x48
0284 758A48     900            mov     _TL0,#0x48
0287            901   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:211: TH1 = RH1 = TIMER1_RELOAD_VALUE / 0x100;
0287 75F5FE     902            mov     _RH1,#0xFE
028A 758DFE     903            mov     _TH1,#0xFE
028D            904   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:212: TL1 = RL1 = TIMER1_RELOAD_VALUE % 0x100;
028D 75F390     905            mov     _RL1,#0x90
0290 758B90     906            mov     _TL1,#0x90
0293            907   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:213: TR0 = 1;
0293 D28C       908            setb    _TR0
0295            909   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:214: TR1 = 0;
0295 C28E       910            clr     _TR1
0297            911   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:215: ET0 = 1;         // Enable timer 0 interrupt
0297 D2A9       912            setb    _ET0
0299            913   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:218: EA = 1;          // Enable global interrupts
0299 D2AF       914            setb    _EA
029B            915   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:219: tether=0;
029B E4         916            clr     a
029C F5E8       917            mov     _tether,a
029E F5E9       918            mov     (_tether + 1),a
02A0            919   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:220: direction=1;
02A0 752801     920            mov     _direction,#0x01
02A3 E4         921            clr     a
02A4 F529       922            mov     (_direction + 1),a
02A6            923   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:221: P2_2=1;
02A6 D2A2       924            setb    _P2_2
02A8            925   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:222: P2_1=1;
02A8 D2A1       926            setb    _P2_1
02AA            927   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:223: P2_0=1;
02AA D2A0       928            setb    _P2_0
02AC            929   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:224: printf(CLEAR_SCREEN);
02AC 74C8       930            mov     a,#__str_1
02AE C0E0       931            push    acc
02B0 7490       932            mov     a,#(__str_1 >> 8)
02B2 C0E0       933            push    acc
02B4 7480       934            mov     a,#0x80
02B6 C0E0       935            push    acc
02B8 120100     936            lcall   _printf
02BB 1581       937            dec     sp
02BD 1581       938            dec     sp
02BF 1581       939            dec     sp
02C1            940   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:225: return 0;
02C1 758200     941            mov     dpl,#0x00
02C4 22         942            ret
02C5            943   ;------------------------------------------------------------
02C5            944   ;Allocation info for local variables in function 'main'
02C5            945   ;------------------------------------------------------------
02C5            946   ;------------------------------------------------------------
02C5            947   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:232: int main (void)
02C5            948   ;        -----------------------------------------
02C5            949   ;         function main
02C5            950   ;        -----------------------------------------
02C5            951   _main:
02C5            952   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:235: pwmLeft = 0;
02C5            953   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:236: pwmRight = 0;
02C5            954   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:237: instruction = 0;
02C5 E4         955            clr     a
02C6 F5A8       956            mov     _pwmLeft,a
02C8 F5A9       957            mov     (_pwmLeft + 1),a
02CA F568       958            mov     _pwmRight,a
02CC F569       959            mov     (_pwmRight + 1),a
02CE F528       960            mov     _instruction,a
02D0 F529       961            mov     (_instruction + 1),a
02D2            962   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:241: while (instruction == 0)
02D2            963   L005001?:
02D2 E528       964            mov     a,_instruction
02D4 4529       965            orl     a,(_instruction + 1)
02D6 7001       966            jnz     L005001?
02D8            967   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:250: moveCar();
02D8 120100     968            lcall   _moveCar
02DB            969   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:251: P2_2=1;
02DB D2A2       970            setb    _P2_2
02DD            971   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:252: P2_1=1;
02DD D2A1       972            setb    _P2_1
02DF            973   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:253: P2_0=0;
02DF C2A0       974            clr     _P2_0
02E1            975   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:295: return 0;
02E1 8001       976            sjmp    L005001?
02E3            977   ;------------------------------------------------------------
02E3            978   ;Allocation info for local variables in function 'getDistance'
02E3            979   ;------------------------------------------------------------
02E3            980   ;------------------------------------------------------------
02E3            981   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:306: float getDistance() 
02E3            982   ;        -----------------------------------------
02E3            983   ;         function getDistance
02E3            984   ;        -----------------------------------------
02E3            985   _getDistance:
02E3            986   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:308: distanceRight = (float)GetADC(0)*1.2;
02E3 758200     987            mov     dpl,#0x00
02E6 120100     988            lcall   _GetADC
02E9 120100     989            lcall   ___uint2fs
02EC AA82       990            mov     r2,dpl
02EE AB83       991            mov     r3,dph
02F0 ACF0       992            mov     r4,b
02F2 FD         993            mov     r5,a
02F3 C002       994            push    ar2
02F5 C003       995            push    ar3
02F7 C004       996            push    ar4
02F9 C005       997            push    ar5
02FB 90999A     998            mov     dptr,#0x999A
02FE 75F099     999            mov     b,#0x99
0301 743F      1000            mov     a,#0x3F
0303 120100    1001            lcall   ___fsmul
0306 858268    1002            mov     _distanceRight,dpl
0309 858369    1003            mov     (_distanceRight + 1),dph
030C 85F06A    1004            mov     (_distanceRight + 2),b
030F F56B      1005            mov     (_distanceRight + 3),a
0311 E581      1006            mov     a,sp
0313 24FC      1007            add     a,#0xfc
0315 F581      1008            mov     sp,a
0317           1009   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:309: distanceLeft = (float)GetADC(1);
0317 758201    1010            mov     dpl,#0x01
031A 120100    1011            lcall   _GetADC
031D 120100    1012            lcall   ___uint2fs
0320 8582A8    1013            mov     _distanceLeft,dpl
0323 8583A9    1014            mov     (_distanceLeft + 1),dph
0326 85F0AA    1015            mov     (_distanceLeft + 2),b
0329 F5AB      1016            mov     (_distanceLeft + 3),a
032B           1017   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:310: return ((distanceRight + distanceLeft)/2);
032B C0A8      1018            push    _distanceLeft
032D C0A9      1019            push    (_distanceLeft + 1)
032F C0AA      1020            push    (_distanceLeft + 2)
0331 C0AB      1021            push    (_distanceLeft + 3)
0333 856882    1022            mov     dpl,_distanceRight
0336 856983    1023            mov     dph,(_distanceRight + 1)
0339 856AF0    1024            mov     b,(_distanceRight + 2)
033C E56B      1025            mov     a,(_distanceRight + 3)
033E 120100    1026            lcall   ___fsadd
0341 AA82      1027            mov     r2,dpl
0343 AB83      1028            mov     r3,dph
0345 ACF0      1029            mov     r4,b
0347 FD        1030            mov     r5,a
0348 E581      1031            mov     a,sp
034A 24FC      1032            add     a,#0xfc
034C F581      1033            mov     sp,a
034E E4        1034            clr     a
034F C0E0      1035            push    acc
0351 C0E0      1036            push    acc
0353 C0E0      1037            push    acc
0355 7440      1038            mov     a,#0x40
0357 C0E0      1039            push    acc
0359 8A82      1040            mov     dpl,r2
035B 8B83      1041            mov     dph,r3
035D 8CF0      1042            mov     b,r4
035F ED        1043            mov     a,r5
0360 120100    1044            lcall   ___fsdiv
0363 AA82      1045            mov     r2,dpl
0365 AB83      1046            mov     r3,dph
0367 ACF0      1047            mov     r4,b
0369 FD        1048            mov     r5,a
036A E581      1049            mov     a,sp
036C 24FC      1050            add     a,#0xfc
036E F581      1051            mov     sp,a
0370 8A82      1052            mov     dpl,r2
0372 8B83      1053            mov     dph,r3
0374 8CF0      1054            mov     b,r4
0376 ED        1055            mov     a,r5
0377 22        1056            ret
0378           1057   ;------------------------------------------------------------
0378           1058   ;Allocation info for local variables in function 'turnRatio'
0378           1059   ;------------------------------------------------------------
0378           1060   ;------------------------------------------------------------
0378           1061   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:313: int turnRatio()
0378           1062   ;        -----------------------------------------
0378           1063   ;         function turnRatio
0378           1064   ;        -----------------------------------------
0378           1065   _turnRatio:
0378           1066   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:315: if (getDistance() < 50.0)
0378 120100    1067            lcall   _getDistance
037B AA82      1068            mov     r2,dpl
037D AB83      1069            mov     r3,dph
037F ACF0      1070            mov     r4,b
0381 FD        1071            mov     r5,a
0382 E4        1072            clr     a
0383 C0E0      1073            push    acc
0385 C0E0      1074            push    acc
0387 7448      1075            mov     a,#0x48
0389 C0E0      1076            push    acc
038B 7442      1077            mov     a,#0x42
038D C0E0      1078            push    acc
038F 8A82      1079            mov     dpl,r2
0391 8B83      1080            mov     dph,r3
0393 8CF0      1081            mov     b,r4
0395 ED        1082            mov     a,r5
0396 120100    1083            lcall   ___fslt
0399 AA82      1084            mov     r2,dpl
039B E581      1085            mov     a,sp
039D 24FC      1086            add     a,#0xfc
039F F581      1087            mov     sp,a
03A1 EA        1088            mov     a,r2
03A2 6001      1089            jz      L007002?
03A4           1090   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:316: return 0;
03A4 900000    1091            mov     dptr,#0x0000
03A7 22        1092            ret
03A8           1093   L007002?:
03A8           1094   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:318: if ( ((distanceRight - distanceLeft)/(distanceRight + distanceLeft)) > 0.2 )
03A8 C0A8      1095            push    _distanceLeft
03AA C0A9      1096            push    (_distanceLeft + 1)
03AC C0AA      1097            push    (_distanceLeft + 2)
03AE C0AB      1098            push    (_distanceLeft + 3)
03B0 856882    1099            mov     dpl,_distanceRight
03B3 856983    1100            mov     dph,(_distanceRight + 1)
03B6 856AF0    1101            mov     b,(_distanceRight + 2)
03B9 E56B      1102            mov     a,(_distanceRight + 3)
03BB 120100    1103            lcall   ___fssub
03BE AA82      1104            mov     r2,dpl
03C0 AB83      1105            mov     r3,dph
03C2 ACF0      1106            mov     r4,b
03C4 FD        1107            mov     r5,a
03C5 E581      1108            mov     a,sp
03C7 24FC      1109            add     a,#0xfc
03C9 F581      1110            mov     sp,a
03CB C002      1111            push    ar2
03CD C003      1112            push    ar3
03CF C004      1113            push    ar4
03D1 C005      1114            push    ar5
03D3 C0A8      1115            push    _distanceLeft
03D5 C0A9      1116            push    (_distanceLeft + 1)
03D7 C0AA      1117            push    (_distanceLeft + 2)
03D9 C0AB      1118            push    (_distanceLeft + 3)
03DB 856882    1119            mov     dpl,_distanceRight
03DE 856983    1120            mov     dph,(_distanceRight + 1)
03E1 856AF0    1121            mov     b,(_distanceRight + 2)
03E4 E56B      1122            mov     a,(_distanceRight + 3)
03E6 120100    1123            lcall   ___fsadd
03E9 AE82      1124            mov     r6,dpl
03EB AF83      1125            mov     r7,dph
03ED A8F0      1126            mov     r0,b
03EF F9        1127            mov     r1,a
03F0 E581      1128            mov     a,sp
03F2 24FC      1129            add     a,#0xfc
03F4 F581      1130            mov     sp,a
03F6 D005      1131            pop     ar5
03F8 D004      1132            pop     ar4
03FA D003      1133            pop     ar3
03FC D002      1134            pop     ar2
03FE C006      1135            push    ar6
0400 C007      1136            push    ar7
0402 C000      1137            push    ar0
0404 C001      1138            push    ar1
0406 8A82      1139            mov     dpl,r2
0408 8B83      1140            mov     dph,r3
040A 8CF0      1141            mov     b,r4
040C ED        1142            mov     a,r5
040D 120100    1143            lcall   ___fsdiv
0410 AA82      1144            mov     r2,dpl
0412 AB83      1145            mov     r3,dph
0414 ACF0      1146            mov     r4,b
0416 FD        1147            mov     r5,a
0417 E581      1148            mov     a,sp
0419 24FC      1149            add     a,#0xfc
041B F581      1150            mov     sp,a
041D 74CD      1151            mov     a,#0xCD
041F C0E0      1152            push    acc
0421 74CC      1153            mov     a,#0xCC
0423 C0E0      1154            push    acc
0425 744C      1155            mov     a,#0x4C
0427 C0E0      1156            push    acc
0429 743E      1157            mov     a,#0x3E
042B C0E0      1158            push    acc
042D 8A82      1159            mov     dpl,r2
042F 8B83      1160            mov     dph,r3
0431 8CF0      1161            mov     b,r4
0433 ED        1162            mov     a,r5
0434 120100    1163            lcall   ___fsgt
0437 AA82      1164            mov     r2,dpl
0439 E581      1165            mov     a,sp
043B 24FC      1166            add     a,#0xfc
043D F581      1167            mov     sp,a
043F EA        1168            mov     a,r2
0440 6001      1169            jz      L007004?
0442           1170   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:319: return -1;
0442 90FFFF    1171            mov     dptr,#0xFFFF
0445 22        1172            ret
0446           1173   L007004?:
0446           1174   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:321: if ( ((distanceLeft - distanceRight)/(distanceRight + distanceLeft)) > 0.1 )
0446 C068      1175            push    _distanceRight
0448 C069      1176            push    (_distanceRight + 1)
044A C06A      1177            push    (_distanceRight + 2)
044C C06B      1178            push    (_distanceRight + 3)
044E 85A882    1179            mov     dpl,_distanceLeft
0451 85A983    1180            mov     dph,(_distanceLeft + 1)
0454 85AAF0    1181            mov     b,(_distanceLeft + 2)
0457 E5AB      1182            mov     a,(_distanceLeft + 3)
0459 120100    1183            lcall   ___fssub
045C AA82      1184            mov     r2,dpl
045E AB83      1185            mov     r3,dph
0460 ACF0      1186            mov     r4,b
0462 FD        1187            mov     r5,a
0463 E581      1188            mov     a,sp
0465 24FC      1189            add     a,#0xfc
0467 F581      1190            mov     sp,a
0469 C002      1191            push    ar2
046B C003      1192            push    ar3
046D C004      1193            push    ar4
046F C005      1194            push    ar5
0471 C0A8      1195            push    _distanceLeft
0473 C0A9      1196            push    (_distanceLeft + 1)
0475 C0AA      1197            push    (_distanceLeft + 2)
0477 C0AB      1198            push    (_distanceLeft + 3)
0479 856882    1199            mov     dpl,_distanceRight
047C 856983    1200            mov     dph,(_distanceRight + 1)
047F 856AF0    1201            mov     b,(_distanceRight + 2)
0482 E56B      1202            mov     a,(_distanceRight + 3)
0484 120100    1203            lcall   ___fsadd
0487 AE82      1204            mov     r6,dpl
0489 AF83      1205            mov     r7,dph
048B A8F0      1206            mov     r0,b
048D F9        1207            mov     r1,a
048E E581      1208            mov     a,sp
0490 24FC      1209            add     a,#0xfc
0492 F581      1210            mov     sp,a
0494 D005      1211            pop     ar5
0496 D004      1212            pop     ar4
0498 D003      1213            pop     ar3
049A D002      1214            pop     ar2
049C C006      1215            push    ar6
049E C007      1216            push    ar7
04A0 C000      1217            push    ar0
04A2 C001      1218            push    ar1
04A4 8A82      1219            mov     dpl,r2
04A6 8B83      1220            mov     dph,r3
04A8 8CF0      1221            mov     b,r4
04AA ED        1222            mov     a,r5
04AB 120100    1223            lcall   ___fsdiv
04AE AA82      1224            mov     r2,dpl
04B0 AB83      1225            mov     r3,dph
04B2 ACF0      1226            mov     r4,b
04B4 FD        1227            mov     r5,a
04B5 E581      1228            mov     a,sp
04B7 24FC      1229            add     a,#0xfc
04B9 F581      1230            mov     sp,a
04BB 74CD      1231            mov     a,#0xCD
04BD C0E0      1232            push    acc
04BF 74CC      1233            mov     a,#0xCC
04C1 C0E0      1234            push    acc
04C3 C0E0      1235            push    acc
04C5 743D      1236            mov     a,#0x3D
04C7 C0E0      1237            push    acc
04C9 8A82      1238            mov     dpl,r2
04CB 8B83      1239            mov     dph,r3
04CD 8CF0      1240            mov     b,r4
04CF ED        1241            mov     a,r5
04D0 120100    1242            lcall   ___fsgt
04D3 AA82      1243            mov     r2,dpl
04D5 E581      1244            mov     a,sp
04D7 24FC      1245            add     a,#0xfc
04D9 F581      1246            mov     sp,a
04DB EA        1247            mov     a,r2
04DC 6001      1248            jz      L007006?
04DE           1249   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:322: return 1;
04DE 900001    1250            mov     dptr,#0x0001
04E1           1251   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:324: return 0;
04E1 22        1252            ret
04E2           1253   L007006?:
04E2 900000    1254            mov     dptr,#0x0000
04E5 22        1255            ret
04E6           1256   ;------------------------------------------------------------
04E6           1257   ;Allocation info for local variables in function 'moveCar'
04E6           1258   ;------------------------------------------------------------
04E6           1259   ;------------------------------------------------------------
04E6           1260   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:333: void moveCar()
04E6           1261   ;        -----------------------------------------
04E6           1262   ;         function moveCar
04E6           1263   ;        -----------------------------------------
04E6           1264   _moveCar:
04E6           1265   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:336: if(turnRatio() == 1)
04E6 120100    1266            lcall   _turnRatio
04E9 AA82      1267            mov     r2,dpl
04EB AB83      1268            mov     r3,dph
04ED BA0188    1269            cjne    r2,#0x01,L008005?
04F0 BB0088    1270            cjne    r3,#0x00,L008005?
04F3           1271   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:338: pwmLeft = smooth_move(leftHistory, TURNSPEED);
04F3 904308    1272            mov     dptr,#_TURNSPEED
04F6 E4        1273            clr     a
04F7 93        1274            movc    a,@a+dptr
04F8 F5A8      1275            mov     _smooth_move_PARM_2,a
04FA 7401      1276            mov     a,#0x01
04FC 93        1277            movc    a,@a+dptr
04FD F5A9      1278            mov     (_smooth_move_PARM_2 + 1),a
04FF 904528    1279            mov     dptr,#_leftHistory
0502 75F040    1280            mov     b,#0x40
0505 120100    1281            lcall   _smooth_move
0508 8582A8    1282            mov     _pwmLeft,dpl
050B 8583A9    1283            mov     (_pwmLeft + 1),dph
050E           1284   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:339: pwmRight= smooth_move(rightHistory, -TURNSPEED);
050E 904308    1285            mov     dptr,#_TURNSPEED
0511 E4        1286            clr     a
0512 93        1287            movc    a,@a+dptr
0513 FA        1288            mov     r2,a
0514 7401      1289            mov     a,#0x01
0516 93        1290            movc    a,@a+dptr
0517 FB        1291            mov     r3,a
0518 C3        1292            clr     c
0519 E4        1293            clr     a
051A 9A        1294            subb    a,r2
051B F5A8      1295            mov     _smooth_move_PARM_2,a
051D E4        1296            clr     a
051E 9B        1297            subb    a,r3
051F F5A9      1298            mov     (_smooth_move_PARM_2 + 1),a
0521 9044E8    1299            mov     dptr,#_rightHistory
0524 75F040    1300            mov     b,#0x40
0527 120100    1301            lcall   _smooth_move
052A 858268    1302            mov     _pwmRight,dpl
052D 858369    1303            mov     (_pwmRight + 1),dph
0530 8001      1304            sjmp    L008006?
0532           1305   L008005?:
0532           1306   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:341: else if(turnRatio() == -1)//(distanceLeft > distanceRight+ANGLEBUFFER)
0532 120100    1307            lcall   _turnRatio
0535 AA82      1308            mov     r2,dpl
0537 AB83      1309            mov     r3,dph
0539 BAFF08    1310            cjne    r2,#0xFF,L008002?
053C BBFF08    1311            cjne    r3,#0xFF,L008002?
053F           1312   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:343: pwmLeft = smooth_move(leftHistory, -TURNSPEED);
053F 904308    1313            mov     dptr,#_TURNSPEED
0542 E4        1314            clr     a
0543 93        1315            movc    a,@a+dptr
0544 FA        1316            mov     r2,a
0545 7401      1317            mov     a,#0x01
0547 93        1318            movc    a,@a+dptr
0548 FB        1319            mov     r3,a
0549 C3        1320            clr     c
054A E4        1321            clr     a
054B 9A        1322            subb    a,r2
054C F5A8      1323            mov     _smooth_move_PARM_2,a
054E E4        1324            clr     a
054F 9B        1325            subb    a,r3
0550 F5A9      1326            mov     (_smooth_move_PARM_2 + 1),a
0552 904528    1327            mov     dptr,#_leftHistory
0555 75F040    1328            mov     b,#0x40
0558 120100    1329            lcall   _smooth_move
055B 8582A8    1330            mov     _pwmLeft,dpl
055E 8583A9    1331            mov     (_pwmLeft + 1),dph
0561           1332   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:344: pwmRight = smooth_move(rightHistory, TURNSPEED);
0561 904308    1333            mov     dptr,#_TURNSPEED
0564 E4        1334            clr     a
0565 93        1335            movc    a,@a+dptr
0566 F5A8      1336            mov     _smooth_move_PARM_2,a
0568 7401      1337            mov     a,#0x01
056A 93        1338            movc    a,@a+dptr
056B F5A9      1339            mov     (_smooth_move_PARM_2 + 1),a
056D 9044E8    1340            mov     dptr,#_rightHistory
0570 75F040    1341            mov     b,#0x40
0573 120100    1342            lcall   _smooth_move
0576 858268    1343            mov     _pwmRight,dpl
0579 858369    1344            mov     (_pwmRight + 1),dph
057C 8001      1345            sjmp    L008006?
057E           1346   L008002?:
057E           1347   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:347: pwmLeft = smooth_move(leftHistory, 0);
057E E4        1348            clr     a
057F F5A8      1349            mov     _smooth_move_PARM_2,a
0581 F5A9      1350            mov     (_smooth_move_PARM_2 + 1),a
0583 904528    1351            mov     dptr,#_leftHistory
0586 75F040    1352            mov     b,#0x40
0589 120100    1353            lcall   _smooth_move
058C 8582A8    1354            mov     _pwmLeft,dpl
058F 8583A9    1355            mov     (_pwmLeft + 1),dph
0592           1356   L008006?:
0592           1357   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:348: pwmRight = smooth_move(rightHistory, 0);
0592 E4        1358            clr     a
0593 F5A8      1359            mov     _smooth_move_PARM_2,a
0595 F5A9      1360            mov     (_smooth_move_PARM_2 + 1),a
0597 9044E8    1361            mov     dptr,#_rightHistory
059A 75F040    1362            mov     b,#0x40
059D 120100    1363            lcall   _smooth_move
05A0 858268    1364            mov     _pwmRight,dpl
05A3 858369    1365            mov     (_pwmRight + 1),dph
05A6           1366   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:351: if ((getDistance()+DISTANCEBUFFER) < PRESETS[Stage])
05A6 120100    1367            lcall   _getDistance
05A9 AA82      1368            mov     r2,dpl
05AB AB83      1369            mov     r3,dph
05AD ACF0      1370            mov     r4,b
05AF FD        1371            mov     r5,a
05B0 904288    1372            mov     dptr,#_DISTANCEBUFFER
05B3 E4        1373            clr     a
05B4 93        1374            movc    a,@a+dptr
05B5 C0E0      1375            push    acc
05B7 7401      1376            mov     a,#0x01
05B9 93        1377            movc    a,@a+dptr
05BA C0E0      1378            push    acc
05BC 7402      1379            mov     a,#0x02
05BE 93        1380            movc    a,@a+dptr
05BF C0E0      1381            push    acc
05C1 7403      1382            mov     a,#0x03
05C3 93        1383            movc    a,@a+dptr
05C4 C0E0      1384            push    acc
05C6 8A82      1385            mov     dpl,r2
05C8 8B83      1386            mov     dph,r3
05CA 8CF0      1387            mov     b,r4
05CC ED        1388            mov     a,r5
05CD 120100    1389            lcall   ___fsadd
05D0 AA82      1390            mov     r2,dpl
05D2 AB83      1391            mov     r3,dph
05D4 ACF0      1392            mov     r4,b
05D6 FD        1393            mov     r5,a
05D7 E581      1394            mov     a,sp
05D9 24FC      1395            add     a,#0xfc
05DB F581      1396            mov     sp,a
05DD AEA8      1397            mov     r6,_Stage
05DF E5A9      1398            mov     a,(_Stage + 1)
05E1 CE        1399            xch     a,r6
05E2 25E0      1400            add     a,acc
05E4 CE        1401            xch     a,r6
05E5 33        1402            rlc     a
05E6 CE        1403            xch     a,r6
05E7 25E0      1404            add     a,acc
05E9 CE        1405            xch     a,r6
05EA 33        1406            rlc     a
05EB FF        1407            mov     r7,a
05EC EE        1408            mov     a,r6
05ED 24C8      1409            add     a,#_PRESETS
05EF F582      1410            mov     dpl,a
05F1 EF        1411            mov     a,r7
05F2 3441      1412            addc    a,#(_PRESETS >> 8)
05F4 F583      1413            mov     dph,a
05F6 E4        1414            clr     a
05F7 93        1415            movc    a,@a+dptr
05F8 FE        1416            mov     r6,a
05F9 A3        1417            inc     dptr
05FA E4        1418            clr     a
05FB 93        1419            movc    a,@a+dptr
05FC FF        1420            mov     r7,a
05FD A3        1421            inc     dptr
05FE E4        1422            clr     a
05FF 93        1423            movc    a,@a+dptr
0600 F8        1424            mov     r0,a
0601 A3        1425            inc     dptr
0602 E4        1426            clr     a
0603 93        1427            movc    a,@a+dptr
0604 F9        1428            mov     r1,a
0605 C006      1429            push    ar6
0607 C007      1430            push    ar7
0609 C000      1431            push    ar0
060B C001      1432            push    ar1
060D 8A82      1433            mov     dpl,r2
060F 8B83      1434            mov     dph,r3
0611 8CF0      1435            mov     b,r4
0613 ED        1436            mov     a,r5
0614 120100    1437            lcall   ___fslt
0617 AA82      1438            mov     r2,dpl
0619 E581      1439            mov     a,sp
061B 24FC      1440            add     a,#0xfc
061D F581      1441            mov     sp,a
061F EA        1442            mov     a,r2
0620 6001      1443            jz      L008011?
0622           1444   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:353: P2_2=1;
0622 D2A2      1445            setb    _P2_2
0624           1446   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:354: P2_1=0;
0624 C2A1      1447            clr     _P2_1
0626           1448   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:355: P2_0=1;
0626 D2A0      1449            setb    _P2_0
0628           1450   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:356: pwmLeft = smooth_move(leftHistory, MOVESPEED);
0628 904348    1451            mov     dptr,#_MOVESPEED
062B E4        1452            clr     a
062C 93        1453            movc    a,@a+dptr
062D F5A8      1454            mov     _smooth_move_PARM_2,a
062F 7401      1455            mov     a,#0x01
0631 93        1456            movc    a,@a+dptr
0632 F5A9      1457            mov     (_smooth_move_PARM_2 + 1),a
0634 904528    1458            mov     dptr,#_leftHistory
0637 75F040    1459            mov     b,#0x40
063A 120100    1460            lcall   _smooth_move
063D 8582A8    1461            mov     _pwmLeft,dpl
0640 8583A9    1462            mov     (_pwmLeft + 1),dph
0643           1463   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:357: pwmRight = smooth_move(rightHistory, MOVESPEED);
0643 904348    1464            mov     dptr,#_MOVESPEED
0646 E4        1465            clr     a
0647 93        1466            movc    a,@a+dptr
0648 F5A8      1467            mov     _smooth_move_PARM_2,a
064A 7401      1468            mov     a,#0x01
064C 93        1469            movc    a,@a+dptr
064D F5A9      1470            mov     (_smooth_move_PARM_2 + 1),a
064F 9044E8    1471            mov     dptr,#_rightHistory
0652 75F040    1472            mov     b,#0x40
0655 120100    1473            lcall   _smooth_move
0658 858268    1474            mov     _pwmRight,dpl
065B 858369    1475            mov     (_pwmRight + 1),dph
065E 020100    1476            ljmp    L008012?
0661           1477   L008011?:
0661           1478   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:360: else if (getDistance() > (PRESETS[Stage]+DISTANCEBUFFER))
0661 120100    1479            lcall   _getDistance
0664 AA82      1480            mov     r2,dpl
0666 AB83      1481            mov     r3,dph
0668 ACF0      1482            mov     r4,b
066A FD        1483            mov     r5,a
066B AEA8      1484            mov     r6,_Stage
066D E5A9      1485            mov     a,(_Stage + 1)
066F CE        1486            xch     a,r6
0670 25E0      1487            add     a,acc
0672 CE        1488            xch     a,r6
0673 33        1489            rlc     a
0674 CE        1490            xch     a,r6
0675 25E0      1491            add     a,acc
0677 CE        1492            xch     a,r6
0678 33        1493            rlc     a
0679 FF        1494            mov     r7,a
067A EE        1495            mov     a,r6
067B 24C8      1496            add     a,#_PRESETS
067D F582      1497            mov     dpl,a
067F EF        1498            mov     a,r7
0680 3441      1499            addc    a,#(_PRESETS >> 8)
0682 F583      1500            mov     dph,a
0684 E4        1501            clr     a
0685 93        1502            movc    a,@a+dptr
0686 FE        1503            mov     r6,a
0687 A3        1504            inc     dptr
0688 E4        1505            clr     a
0689 93        1506            movc    a,@a+dptr
068A FF        1507            mov     r7,a
068B A3        1508            inc     dptr
068C E4        1509            clr     a
068D 93        1510            movc    a,@a+dptr
068E F8        1511            mov     r0,a
068F A3        1512            inc     dptr
0690 E4        1513            clr     a
0691 93        1514            movc    a,@a+dptr
0692 F9        1515            mov     r1,a
0693 C002      1516            push    ar2
0695 C003      1517            push    ar3
0697 C004      1518            push    ar4
0699 C005      1519            push    ar5
069B 904288    1520            mov     dptr,#_DISTANCEBUFFER
069E E4        1521            clr     a
069F 93        1522            movc    a,@a+dptr
06A0 C0E0      1523            push    acc
06A2 7401      1524            mov     a,#0x01
06A4 93        1525            movc    a,@a+dptr
06A5 C0E0      1526            push    acc
06A7 7402      1527            mov     a,#0x02
06A9 93        1528            movc    a,@a+dptr
06AA C0E0      1529            push    acc
06AC 7403      1530            mov     a,#0x03
06AE 93        1531            movc    a,@a+dptr
06AF C0E0      1532            push    acc
06B1 8E82      1533            mov     dpl,r6
06B3 8F83      1534            mov     dph,r7
06B5 88F0      1535            mov     b,r0
06B7 E9        1536            mov     a,r1
06B8 120100    1537            lcall   ___fsadd
06BB AE82      1538            mov     r6,dpl
06BD AF83      1539            mov     r7,dph
06BF A8F0      1540            mov     r0,b
06C1 F9        1541            mov     r1,a
06C2 E581      1542            mov     a,sp
06C4 24FC      1543            add     a,#0xfc
06C6 F581      1544            mov     sp,a
06C8 D005      1545            pop     ar5
06CA D004      1546            pop     ar4
06CC D003      1547            pop     ar3
06CE D002      1548            pop     ar2
06D0 C006      1549            push    ar6
06D2 C007      1550            push    ar7
06D4 C000      1551            push    ar0
06D6 C001      1552            push    ar1
06D8 8A82      1553            mov     dpl,r2
06DA 8B83      1554            mov     dph,r3
06DC 8CF0      1555            mov     b,r4
06DE ED        1556            mov     a,r5
06DF 120100    1557            lcall   ___fsgt
06E2 AA82      1558            mov     r2,dpl
06E4 E581      1559            mov     a,sp
06E6 24FC      1560            add     a,#0xfc
06E8 F581      1561            mov     sp,a
06EA EA        1562            mov     a,r2
06EB 6001      1563            jz      L008008?
06ED           1564   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:362: P2_2=1;
06ED D2A2      1565            setb    _P2_2
06EF           1566   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:363: P2_1=0;
06EF C2A1      1567            clr     _P2_1
06F1           1568   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:364: P2_0=1;
06F1 D2A0      1569            setb    _P2_0
06F3           1570   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:365: pwmLeft = smooth_move(leftHistory, -MOVESPEED);
06F3 904348    1571            mov     dptr,#_MOVESPEED
06F6 E4        1572            clr     a
06F7 93        1573            movc    a,@a+dptr
06F8 FA        1574            mov     r2,a
06F9 7401      1575            mov     a,#0x01
06FB 93        1576            movc    a,@a+dptr
06FC FB        1577            mov     r3,a
06FD C3        1578            clr     c
06FE E4        1579            clr     a
06FF 9A        1580            subb    a,r2
0700 F5A8      1581            mov     _smooth_move_PARM_2,a
0702 E4        1582            clr     a
0703 9B        1583            subb    a,r3
0704 F5A9      1584            mov     (_smooth_move_PARM_2 + 1),a
0706 904528    1585            mov     dptr,#_leftHistory
0709 75F040    1586            mov     b,#0x40
070C 120100    1587            lcall   _smooth_move
070F 8582A8    1588            mov     _pwmLeft,dpl
0712 8583A9    1589            mov     (_pwmLeft + 1),dph
0715           1590   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:366: pwmRight = smooth_move(rightHistory, -MOVESPEED);
0715 904348    1591            mov     dptr,#_MOVESPEED
0718 E4        1592            clr     a
0719 93        1593            movc    a,@a+dptr
071A FA        1594            mov     r2,a
071B 7401      1595            mov     a,#0x01
071D 93        1596            movc    a,@a+dptr
071E FB        1597            mov     r3,a
071F C3        1598            clr     c
0720 E4        1599            clr     a
0721 9A        1600            subb    a,r2
0722 F5A8      1601            mov     _smooth_move_PARM_2,a
0724 E4        1602            clr     a
0725 9B        1603            subb    a,r3
0726 F5A9      1604            mov     (_smooth_move_PARM_2 + 1),a
0728 9044E8    1605            mov     dptr,#_rightHistory
072B 75F040    1606            mov     b,#0x40
072E 120100    1607            lcall   _smooth_move
0731 858268    1608            mov     _pwmRight,dpl
0734 858369    1609            mov     (_pwmRight + 1),dph
0737 8001      1610            sjmp    L008012?
0739           1611   L008008?:
0739           1612   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:370: pwmLeft = smooth_move(leftHistory, 0);
0739 E4        1613            clr     a
073A F5A8      1614            mov     _smooth_move_PARM_2,a
073C F5A9      1615            mov     (_smooth_move_PARM_2 + 1),a
073E 904528    1616            mov     dptr,#_leftHistory
0741 75F040    1617            mov     b,#0x40
0744 120100    1618            lcall   _smooth_move
0747 8582A8    1619            mov     _pwmLeft,dpl
074A 8583A9    1620            mov     (_pwmLeft + 1),dph
074D           1621   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:371: pwmRight = smooth_move(rightHistory, 0);
074D E4        1622            clr     a
074E F5A8      1623            mov     _smooth_move_PARM_2,a
0750 F5A9      1624            mov     (_smooth_move_PARM_2 + 1),a
0752 9044E8    1625            mov     dptr,#_rightHistory
0755 75F040    1626            mov     b,#0x40
0758 120100    1627            lcall   _smooth_move
075B 858268    1628            mov     _pwmRight,dpl
075E 858369    1629            mov     (_pwmRight + 1),dph
0761           1630   L008012?:
0761           1631   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:374: return;
0761 22        1632            ret
0762           1633   ;------------------------------------------------------------
0762           1634   ;Allocation info for local variables in function 'smooth_move'
0762           1635   ;------------------------------------------------------------
0762           1636   ;target                    Allocated with name '_smooth_move_PARM_2'
0762           1637   ;history                   Allocated with name '_smooth_move_history_1_113'
0762           1638   ;------------------------------------------------------------
0762           1639   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:377: int smooth_move(int * history, int target)
0762           1640   ;        -----------------------------------------
0762           1641   ;         function smooth_move
0762           1642   ;        -----------------------------------------
0762           1643   _smooth_move:
0762 8582F8    1644            mov     _smooth_move_history_1_113,dpl
0765 8583F9    1645            mov     (_smooth_move_history_1_113 + 1),dph
0768 85F0FA    1646            mov     (_smooth_move_history_1_113 + 2),b
076B           1647   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:379: history[2] = history[1];         
076B 7404      1648            mov     a,#0x04
076D 25F8      1649            add     a,_smooth_move_history_1_113
076F FD        1650            mov     r5,a
0770 E4        1651            clr     a
0771 35F9      1652            addc    a,(_smooth_move_history_1_113 + 1)
0773 FE        1653            mov     r6,a
0774 AFFA      1654            mov     r7,(_smooth_move_history_1_113 + 2)
0776 7402      1655            mov     a,#0x02
0778 25F8      1656            add     a,_smooth_move_history_1_113
077A F8        1657            mov     r0,a
077B E4        1658            clr     a
077C 35F9      1659            addc    a,(_smooth_move_history_1_113 + 1)
077E F9        1660            mov     r1,a
077F AAFA      1661            mov     r2,(_smooth_move_history_1_113 + 2)
0781 8882      1662            mov     dpl,r0
0783 8983      1663            mov     dph,r1
0785 8AF0      1664            mov     b,r2
0787 120100    1665            lcall   __gptrget
078A FB        1666            mov     r3,a
078B A3        1667            inc     dptr
078C 120100    1668            lcall   __gptrget
078F FC        1669            mov     r4,a
0790 8D82      1670            mov     dpl,r5
0792 8E83      1671            mov     dph,r6
0794 8FF0      1672            mov     b,r7
0796 EB        1673            mov     a,r3
0797 120100    1674            lcall   __gptrput
079A A3        1675            inc     dptr
079B EC        1676            mov     a,r4
079C 120100    1677            lcall   __gptrput
079F           1678   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:380: history[1] = history[0];
079F 85F882    1679            mov     dpl,_smooth_move_history_1_113
07A2 85F983    1680            mov     dph,(_smooth_move_history_1_113 + 1)
07A5 85FAF0    1681            mov     b,(_smooth_move_history_1_113 + 2)
07A8 120100    1682            lcall   __gptrget
07AB FD        1683            mov     r5,a
07AC A3        1684            inc     dptr
07AD 120100    1685            lcall   __gptrget
07B0 FE        1686            mov     r6,a
07B1 8882      1687            mov     dpl,r0
07B3 8983      1688            mov     dph,r1
07B5 8AF0      1689            mov     b,r2
07B7 ED        1690            mov     a,r5
07B8 120100    1691            lcall   __gptrput
07BB A3        1692            inc     dptr
07BC EE        1693            mov     a,r6
07BD 120100    1694            lcall   __gptrput
07C0           1695   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:381: history[0] = (target + history[1] + history[2])/3;
07C0 ED        1696            mov     a,r5
07C1 25A8      1697            add     a,_smooth_move_PARM_2
07C3 FD        1698            mov     r5,a
07C4 EE        1699            mov     a,r6
07C5 35A9      1700            addc    a,(_smooth_move_PARM_2 + 1)
07C7 FE        1701            mov     r6,a
07C8 EB        1702            mov     a,r3
07C9 2D        1703            add     a,r5
07CA F582      1704            mov     dpl,a
07CC EC        1705            mov     a,r4
07CD 3E        1706            addc    a,r6
07CE F583      1707            mov     dph,a
07D0 750003    1708            mov     __divsint_PARM_2,#0x03
07D3 E4        1709            clr     a
07D4 F501      1710            mov     (__divsint_PARM_2 + 1),a
07D6 120100    1711            lcall   __divsint
07D9 AA82      1712            mov     r2,dpl
07DB AB83      1713            mov     r3,dph
07DD 85F882    1714            mov     dpl,_smooth_move_history_1_113
07E0 85F983    1715            mov     dph,(_smooth_move_history_1_113 + 1)
07E3 85FAF0    1716            mov     b,(_smooth_move_history_1_113 + 2)
07E6 EA        1717            mov     a,r2
07E7 120100    1718            lcall   __gptrput
07EA A3        1719            inc     dptr
07EB EB        1720            mov     a,r3
07EC 120100    1721            lcall   __gptrput
07EF           1722   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:383: return history[0];
07EF 8A82      1723            mov     dpl,r2
07F1 8B83      1724            mov     dph,r3
07F3 22        1725            ret
07F4           1726   ;------------------------------------------------------------
07F4           1727   ;Allocation info for local variables in function 'uTurn'
07F4           1728   ;------------------------------------------------------------
07F4           1729   ;------------------------------------------------------------
07F4           1730   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:386: void uTurn()
07F4           1731   ;        -----------------------------------------
07F4           1732   ;         function uTurn
07F4           1733   ;        -----------------------------------------
07F4           1734   _uTurn:
07F4           1735   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:388: P2_2=1;
07F4 D2A2      1736            setb    _P2_2
07F6           1737   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:389: P2_1=0;
07F6 C2A1      1738            clr     _P2_1
07F8           1739   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:390: P2_0=1;
07F8 D2A0      1740            setb    _P2_0
07FA           1741   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:391: pwmLeft=TURNSPEED;
07FA 904308    1742            mov     dptr,#_TURNSPEED
07FD E4        1743            clr     a
07FE 93        1744            movc    a,@a+dptr
07FF FA        1745            mov     r2,a
0800 7401      1746            mov     a,#0x01
0802 93        1747            movc    a,@a+dptr
0803 FB        1748            mov     r3,a
0804 8AA8      1749            mov     _pwmLeft,r2
0806 8BA9      1750            mov     (_pwmLeft + 1),r3
0808           1751   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:392: pwmRight=(-TURNSPEED);
0808 C3        1752            clr     c
0809 E4        1753            clr     a
080A 9A        1754            subb    a,r2
080B F568      1755            mov     _pwmRight,a
080D E4        1756            clr     a
080E 9B        1757            subb    a,r3
080F F569      1758            mov     (_pwmRight + 1),a
0811           1759   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:393: wait1s();
0811 120100    1760            lcall   _wait1s
0814           1761   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:394: wait1s();
0814 120100    1762            lcall   _wait1s
0817           1763   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:395: pwmLeft=pwmRight=0;
0817 E4        1764            clr     a
0818 F568      1765            mov     _pwmRight,a
081A F569      1766            mov     (_pwmRight + 1),a
081C F5A8      1767            mov     _pwmLeft,a
081E F5A9      1768            mov     (_pwmLeft + 1),a
0820           1769   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:396: return;
0820 22        1770            ret
0821           1771   ;------------------------------------------------------------
0821           1772   ;Allocation info for local variables in function 'getSig'
0821           1773   ;------------------------------------------------------------
0821           1774   ;j                         Allocated to registers r4 r5 
0821           1775   ;val                       Allocated to registers r2 r3 
0821           1776   ;v                         Allocated to registers r6 r7 r0 r1 
0821           1777   ;------------------------------------------------------------
0821           1778   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:399: unsigned int getSig()
0821           1779   ;        -----------------------------------------
0821           1780   ;         function getSig
0821           1781   ;        -----------------------------------------
0821           1782   _getSig:
0821           1783   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:405: val = 0;
0821 7A00      1784            mov     r2,#0x00
0823 7B00      1785            mov     r3,#0x00
0825           1786   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:408: for (j = 0; j < 3; j++) {
0825 7C00      1787            mov     r4,#0x00
0827 7D00      1788            mov     r5,#0x00
0829           1789   L011001?:
0829 C3        1790            clr     c
082A EC        1791            mov     a,r4
082B 9403      1792            subb    a,#0x03
082D ED        1793            mov     a,r5
082E 9400      1794            subb    a,#0x00
0830 5001      1795            jnc     L011004?
0832           1796   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:409: v = GetADC(0);
0832 758200    1797            mov     dpl,#0x00
0835 C002      1798            push    ar2
0837 C003      1799            push    ar3
0839 C004      1800            push    ar4
083B C005      1801            push    ar5
083D 120100    1802            lcall   _GetADC
0840 120100    1803            lcall   ___uint2fs
0843 AE82      1804            mov     r6,dpl
0845 AF83      1805            mov     r7,dph
0847 A8F0      1806            mov     r0,b
0849 F9        1807            mov     r1,a
084A           1808   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:410: val |= (v > MINVOLT) ? (0x01 << j) : 0x00;
084A 9042C8    1809            mov     dptr,#_MINVOLT
084D E4        1810            clr     a
084E 93        1811            movc    a,@a+dptr
084F C0E0      1812            push    acc
0851 7401      1813            mov     a,#0x01
0853 93        1814            movc    a,@a+dptr
0854 C0E0      1815            push    acc
0856 7402      1816            mov     a,#0x02
0858 93        1817            movc    a,@a+dptr
0859 C0E0      1818            push    acc
085B 7403      1819            mov     a,#0x03
085D 93        1820            movc    a,@a+dptr
085E C0E0      1821            push    acc
0860 8E82      1822            mov     dpl,r6
0862 8F83      1823            mov     dph,r7
0864 88F0      1824            mov     b,r0
0866 E9        1825            mov     a,r1
0867 120100    1826            lcall   ___fsgt
086A AE82      1827            mov     r6,dpl
086C E581      1828            mov     a,sp
086E 24FC      1829            add     a,#0xfc
0870 F581      1830            mov     sp,a
0872 D005      1831            pop     ar5
0874 D004      1832            pop     ar4
0876 D003      1833            pop     ar3
0878 D002      1834            pop     ar2
087A EE        1835            mov     a,r6
087B 6001      1836            jz      L011007?
087D 8CF0      1837            mov     b,r4
087F 05F0      1838            inc     b
0881 7E01      1839            mov     r6,#0x01
0883 7F00      1840            mov     r7,#0x00
0885 8001      1841            sjmp    L011016?
0887           1842   L011015?:
0887 EE        1843            mov     a,r6
0888 2E        1844            add     a,r6
0889 FE        1845            mov     r6,a
088A EF        1846            mov     a,r7
088B 33        1847            rlc     a
088C FF        1848            mov     r7,a
088D           1849   L011016?:
088D D5F018    1850            djnz    b,L011015?
0890 8001      1851            sjmp    L011008?
0892           1852   L011007?:
0892 7E00      1853            mov     r6,#0x00
0894 7F00      1854            mov     r7,#0x00
0896           1855   L011008?:
0896 EE        1856            mov     a,r6
0897 4202      1857            orl     ar2,a
0899 EF        1858            mov     a,r7
089A 4203      1859            orl     ar3,a
089C           1860   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:408: for (j = 0; j < 3; j++) {
089C 0C        1861            inc     r4
089D BC0018    1862            cjne    r4,#0x00,L011001?
08A0 0D        1863            inc     r5
08A1 8001      1864            sjmp    L011001?
08A3           1865   L011004?:
08A3           1866   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:414: return val;
08A3 8A82      1867            mov     dpl,r2
08A5 8B83      1868            mov     dph,r3
08A7 22        1869            ret
08A8           1870   ;------------------------------------------------------------
08A8           1871   ;Allocation info for local variables in function 'wait1s'
08A8           1872   ;------------------------------------------------------------
08A8           1873   ;------------------------------------------------------------
08A8           1874   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:418: void wait1s (void)
08A8           1875   ;        -----------------------------------------
08A8           1876   ;         function wait1s
08A8           1877   ;        -----------------------------------------
08A8           1878   _wait1s:
08A8           1879   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:430: _endasm;
08A8           1880            
08A8           1881     ;For a 22.1184MHz crystal one machine cycle
08A8           1882     ;takes 12/22.1184MHz=0.5425347us
08A8 7A0A      1883                 mov R2, #10
08AA           1884             L3:
08AA 79B4      1885            mov R1, #180
08AC           1886             L2:
08AC 78B4      1887            mov R0, #180
08AE           1888             L1:
08AE D818      1889            djnz R0, L1 ; 2 machine cycles-> 2*0.5425347us*184=200us
08B0 D9D8      1890                 djnz R1, L2 ; 200us*250=0.05s
08B2 DA98      1891                 djnz R2, L3 ; 0.05s*20=1s
08B4 22        1892                 ret
08B5           1893                
08B5 22        1894            ret
08B6           1895   ;------------------------------------------------------------
08B6           1896   ;Allocation info for local variables in function 'voltage'
08B6           1897   ;------------------------------------------------------------
08B6           1898   ;channel                   Allocated to registers 
08B6           1899   ;------------------------------------------------------------
08B6           1900   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:438: float voltage (unsigned char channel)
08B6           1901   ;        -----------------------------------------
08B6           1902   ;         function voltage
08B6           1903   ;        -----------------------------------------
08B6           1904   _voltage:
08B6           1905   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:440: return ((GetADC(channel) * 4.84) / 1023.0); // VCC=4.84V (measured)
08B6 120100    1906            lcall   _GetADC
08B9 120100    1907            lcall   ___uint2fs
08BC AA82      1908            mov     r2,dpl
08BE AB83      1909            mov     r3,dph
08C0 ACF0      1910            mov     r4,b
08C2 FD        1911            mov     r5,a
08C3 C002      1912            push    ar2
08C5 C003      1913            push    ar3
08C7 C004      1914            push    ar4
08C9 C005      1915            push    ar5
08CB 90E148    1916            mov     dptr,#0xE148
08CE 75F09A    1917            mov     b,#0x9A
08D1 7440      1918            mov     a,#0x40
08D3 120100    1919            lcall   ___fsmul
08D6 AA82      1920            mov     r2,dpl
08D8 AB83      1921            mov     r3,dph
08DA ACF0      1922            mov     r4,b
08DC FD        1923            mov     r5,a
08DD E581      1924            mov     a,sp
08DF 24FC      1925            add     a,#0xfc
08E1 F581      1926            mov     sp,a
08E3 E4        1927            clr     a
08E4 C0E0      1928            push    acc
08E6 74C0      1929            mov     a,#0xC0
08E8 C0E0      1930            push    acc
08EA 747F      1931            mov     a,#0x7F
08EC C0E0      1932            push    acc
08EE 7444      1933            mov     a,#0x44
08F0 C0E0      1934            push    acc
08F2 8A82      1935            mov     dpl,r2
08F4 8B83      1936            mov     dph,r3
08F6 8CF0      1937            mov     b,r4
08F8 ED        1938            mov     a,r5
08F9 120100    1939            lcall   ___fsdiv
08FC AA82      1940            mov     r2,dpl
08FE AB83      1941            mov     r3,dph
0900 ACF0      1942            mov     r4,b
0902 FD        1943            mov     r5,a
0903 E581      1944            mov     a,sp
0905 24FC      1945            add     a,#0xfc
0907 F581      1946            mov     sp,a
0909 8A82      1947            mov     dpl,r2
090B 8B83      1948            mov     dph,r3
090D 8CF0      1949            mov     b,r4
090F ED        1950            mov     a,r5
0910 22        1951            ret
0911           1952   ;------------------------------------------------------------
0911           1953   ;Allocation info for local variables in function 'SPIWrite'
0911           1954   ;------------------------------------------------------------
0911           1955   ;value                     Allocated to registers r2 
0911           1956   ;------------------------------------------------------------
0911           1957   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:443: void SPIWrite(unsigned char value)
0911           1958   ;        -----------------------------------------
0911           1959   ;         function SPIWrite
0911           1960   ;        -----------------------------------------
0911           1961   _SPIWrite:
0911 AA82      1962            mov     r2,dpl
0913           1963   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:445: SPSTA&=(~SPIF); // Clear the SPIF flag in SPSTA
0913 53C47F    1964            anl     _SPSTA,#0x7F
0916           1965   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:446: SPDAT=value;
0916 8AC5      1966            mov     _SPDAT,r2
0918           1967   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:447: while((SPSTA & SPIF)!=SPIF); //Wait for transmission to end
0918           1968   L014001?:
0918 7480      1969            mov     a,#0x80
091A 55C4      1970            anl     a,_SPSTA
091C FA        1971            mov     r2,a
091D BA8058    1972            cjne    r2,#0x80,L014001?
0920 22        1973            ret
0921           1974   ;------------------------------------------------------------
0921           1975   ;Allocation info for local variables in function 'GetADC'
0921           1976   ;------------------------------------------------------------
0921           1977   ;channel                   Allocated to registers r2 
0921           1978   ;adc                       Allocated to registers r2 r3 
0921           1979   ;------------------------------------------------------------
0921           1980   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:451: unsigned int GetADC(unsigned char channel)
0921           1981   ;        -----------------------------------------
0921           1982   ;         function GetADC
0921           1983   ;        -----------------------------------------
0921           1984   _GetADC:
0921 AA82      1985            mov     r2,dpl
0923           1986   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:456: SPCON&=(~SPEN); // Disable SPI
0923 53C3BF    1987            anl     _SPCON,#0xBF
0926           1988   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:457: SPCON=MSTR|CPOL|CPHA|SPR1|SPR0|SSDIS;
0926 75C33F    1989            mov     _SPCON,#0x3F
0929           1990   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:458: SPCON|=SPEN; // Enable SPI
0929 43C340    1991            orl     _SPCON,#0x40
092C           1992   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:460: P1_4=0; // Activate the MCP3004 ADC.
092C C294      1993            clr     _P1_4
092E           1994   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:461: SPIWrite(channel|0x18);  // Send start bit, single/diff* bit, D2, D1, and D0 bits.
092E 7418      1995            mov     a,#0x18
0930 4A        1996            orl     a,r2
0931 F582      1997            mov     dpl,a
0933 120100    1998            lcall   _SPIWrite
0936           1999   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:462: for(adc=0; adc<10; adc++); // Wait for S/H to setup
0936 7A0A      2000            mov     r2,#0x0A
0938 7B00      2001            mov     r3,#0x00
093A           2002   L015003?:
093A 1A        2003            dec     r2
093B BAFFD8    2004            cjne    r2,#0xff,L015009?
093E 1B        2005            dec     r3
093F           2006   L015009?:
093F EA        2007            mov     a,r2
0940 4B        2008            orl     a,r3
0941 7001      2009            jnz     L015003?
0943           2010   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:463: SPIWrite(0x55); // Read bits 9 down to 4
0943 758255    2011            mov     dpl,#0x55
0946 120100    2012            lcall   _SPIWrite
0949           2013   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:464: adc=((SPDAT&0x3f)*0x100);
0949 743F      2014            mov     a,#0x3F
094B 55C5      2015            anl     a,_SPDAT
094D FB        2016            mov     r3,a
094E 7A00      2017            mov     r2,#0x00
0950           2018   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:465: SPIWrite(0x55);// Read bits 3 down to 0
0950 758255    2019            mov     dpl,#0x55
0953 C002      2020            push    ar2
0955 C003      2021            push    ar3
0957 120100    2022            lcall   _SPIWrite
095A D003      2023            pop     ar3
095C D002      2024            pop     ar2
095E           2025   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:466: P1_4=1; // Deactivate the MCP3004 ADC.
095E D294      2026            setb    _P1_4
0960           2027   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:467: adc+=(SPDAT&0xf0); // SPDR contains the low part of the result. 
0960 74F0      2028            mov     a,#0xF0
0962 55C5      2029            anl     a,_SPDAT
0964 FC        2030            mov     r4,a
0965 7D00      2031            mov     r5,#0x00
0967 EC        2032            mov     a,r4
0968 2A        2033            add     a,r2
0969 FA        2034            mov     r2,a
096A ED        2035            mov     a,r5
096B 3B        2036            addc    a,r3
096C           2037   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:468: adc>>=4;
096C C4        2038            swap    a
096D CA        2039            xch     a,r2
096E C4        2040            swap    a
096F 540F      2041            anl     a,#0x0f
0971 6A        2042            xrl     a,r2
0972 CA        2043            xch     a,r2
0973 540F      2044            anl     a,#0x0f
0975 CA        2045            xch     a,r2
0976 6A        2046            xrl     a,r2
0977 CA        2047            xch     a,r2
0978           2048   ;        C:\Users\Maxim\Documents\GitHub\Projects\Project2_Car\Code\core.c:470: return adc;
0978 8A82      2049            mov     dpl,r2
097A F583      2050            mov     dph,a
097C 22        2051            ret
097D           2052            rseg R_CSEG
097D           2053   
0000           2054            rseg R_XINIT
0000           2055   
0000           2056            rseg R_CONST
0000           2057   _MOVESPEED:
0000 6400      2058            db 0x64,0x00    ;  100
0002           2059   _TURNSPEED:
0002 6400      2060            db 0x64,0x00    ;  100
0004           2061   _MINVOLT:
0004 CDCC4C3D  2062            db 0xCD,0xCC,0x4C,0x3D  ;  5.000000e-002
0008           2063   _DISTANCEBUFFER:
0008 00007041  2064            db 0x00,0x00,0x70,0x41  ;  1.500000e+001
000C           2065   _ANGLEBUFFER:
000C CDCCCC3D  2066            db 0xCD,0xCC,0xCC,0x3D  ;  1.000000e-001
0010           2067   _NSTAGES:
0010 0C00      2068            db 0x0C,0x00    ;  12
0012           2069   _PRESETS:
0012 00001644  2070            db 0x00,0x00,0x16,0x44  ;  6.000000e+002
0016 00800944  2071            db 0x00,0x80,0x09,0x44  ;  5.500000e+002
001A 0000FA43  2072            db 0x00,0x00,0xFA,0x43  ;  5.000000e+002
001E 0000E143  2073            db 0x00,0x00,0xE1,0x43  ;  4.500000e+002
0022 0000C843  2074            db 0x00,0x00,0xC8,0x43  ;  4.000000e+002
0026 0000AF43  2075            db 0x00,0x00,0xAF,0x43  ;  3.500000e+002
002A 00009643  2076            db 0x00,0x00,0x96,0x43  ;  3.000000e+002
002E 00007A43  2077            db 0x00,0x00,0x7A,0x43  ;  2.500000e+002
0032 00004843  2078            db 0x00,0x00,0x48,0x43  ;  2.000000e+002
0036 00001643  2079            db 0x00,0x00,0x16,0x43  ;  1.500000e+002
003A 0000C842  2080            db 0x00,0x00,0xC8,0x42  ;  1.000000e+002
003E 00004842  2081            db 0x00,0x00,0x48,0x42  ;  5.000000e+001
0042           2082   __str_0:
0042 444C2025  2083            db 'DL %3.1f - DR %3.1f - Stage %3.1f(%d)'
     332E3166
     202D2044
     52202533
     2E316620
     2D205374
     61676520
     25332E31
     66282564
     29
0067 0D        2084            db 0x0D
0068 00        2085            db 0x00
0069           2086   __str_1:
0069 1B        2087            db 0x1B
006A 5B324A    2088            db '[2J'
006D 00        2089            db 0x00
006E           2090   
001E           2091            CSEG
001E           2092   
001E           2093   end
