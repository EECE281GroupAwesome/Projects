0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Tue Mar 25 12:09:55 2014
0000              5   ;--------------------------------------------------------
                  5   $name core
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _PRESETS
0000             27            public _NSTAGES
0000             28            public _ANGLEBUFFER
0000             29            public _DISTANCEBUFFER
0000             30            public _TURNSPEED
0000             31            public _MOVESPEED
0000             32            public _main
0000             33            public __c51_external_startup
0000             34            public _pwmCounter
0000             35            public _beaconSignal
0000             36            public _Stage
0000             37            public _instruction
0000             38            public _distanceRight
0000             39            public _distanceLeft
0000             40            public _rightSensor
0000             41            public _leftSensor
0000             42            public _tether
0000             43            public _direction
0000             44            public _pwmRight
0000             45            public _pwmLeft
0000             46            public _pwmCount
0000             47            public _getDistance
0000             48            public _turnCar
0000             49            public _moveCar
0000             50            public _uTurn
0000             51            public _wait2ms
0000             52            public _wait1s
0000             53            public _voltage
0000             54            public _SPIWrite
0000             55            public _GetADC
0000             56   ;--------------------------------------------------------
0000             57   ; Special Function Registers
0000             58   ;--------------------------------------------------------
0000             59   _ACC            DATA 0xe0
0000             60   _B              DATA 0xf0
0000             61   _PSW            DATA 0xd0
0000             62   _SP             DATA 0x81
0000             63   _SPX            DATA 0xef
0000             64   _DPL            DATA 0x82
0000             65   _DPH            DATA 0x83
0000             66   _DPLB           DATA 0xd4
0000             67   _DPHB           DATA 0xd5
0000             68   _PAGE           DATA 0xf6
0000             69   _AX             DATA 0xe1
0000             70   _BX             DATA 0xf7
0000             71   _DSPR           DATA 0xe2
0000             72   _FIRD           DATA 0xe3
0000             73   _MACL           DATA 0xe4
0000             74   _MACH           DATA 0xe5
0000             75   _PCON           DATA 0x87
0000             76   _AUXR           DATA 0x8e
0000             77   _AUXR1          DATA 0xa2
0000             78   _DPCF           DATA 0xa1
0000             79   _CKRL           DATA 0x97
0000             80   _CKCKON0        DATA 0x8f
0000             81   _CKCKON1        DATA 0xaf
0000             82   _CKSEL          DATA 0x85
0000             83   _CLKREG         DATA 0xae
0000             84   _OSCCON         DATA 0x85
0000             85   _IE             DATA 0xa8
0000             86   _IEN0           DATA 0xa8
0000             87   _IEN1           DATA 0xb1
0000             88   _IPH0           DATA 0xb7
0000             89   _IP             DATA 0xb8
0000             90   _IPL0           DATA 0xb8
0000             91   _IPH1           DATA 0xb3
0000             92   _IPL1           DATA 0xb2
0000             93   _P0             DATA 0x80
0000             94   _P1             DATA 0x90
0000             95   _P2             DATA 0xa0
0000             96   _P3             DATA 0xb0
0000             97   _P4             DATA 0xc0
0000             98   _P0M0           DATA 0xe6
0000             99   _P0M1           DATA 0xe7
0000            100   _P1M0           DATA 0xd6
0000            101   _P1M1           DATA 0xd7
0000            102   _P2M0           DATA 0xce
0000            103   _P2M1           DATA 0xcf
0000            104   _P3M0           DATA 0xc6
0000            105   _P3M1           DATA 0xc7
0000            106   _P4M0           DATA 0xbe
0000            107   _P4M1           DATA 0xbf
0000            108   _SCON           DATA 0x98
0000            109   _SBUF           DATA 0x99
0000            110   _SADEN          DATA 0xb9
0000            111   _SADDR          DATA 0xa9
0000            112   _BDRCON         DATA 0x9b
0000            113   _BRL            DATA 0x9a
0000            114   _TCON           DATA 0x88
0000            115   _TMOD           DATA 0x89
0000            116   _TCONB          DATA 0x91
0000            117   _TL0            DATA 0x8a
0000            118   _TH0            DATA 0x8c
0000            119   _TL1            DATA 0x8b
0000            120   _TH1            DATA 0x8d
0000            121   _RL0            DATA 0xf2
0000            122   _RH0            DATA 0xf4
0000            123   _RL1            DATA 0xf3
0000            124   _RH1            DATA 0xf5
0000            125   _WDTRST         DATA 0xa6
0000            126   _WDTPRG         DATA 0xa7
0000            127   _T2CON          DATA 0xc8
0000            128   _T2MOD          DATA 0xc9
0000            129   _RCAP2H         DATA 0xcb
0000            130   _RCAP2L         DATA 0xca
0000            131   _TH2            DATA 0xcd
0000            132   _TL2            DATA 0xcc
0000            133   _SPCON          DATA 0xc3
0000            134   _SPSTA          DATA 0xc4
0000            135   _SPDAT          DATA 0xc5
0000            136   _SSCON          DATA 0x93
0000            137   _SSCS           DATA 0x94
0000            138   _SSDAT          DATA 0x95
0000            139   _SSADR          DATA 0x96
0000            140   _KBLS           DATA 0x9c
0000            141   _KBE            DATA 0x9d
0000            142   _KBF            DATA 0x9e
0000            143   _KBMOD          DATA 0x9f
0000            144   _BMSEL          DATA 0x92
0000            145   _FCON           DATA 0xd2
0000            146   _EECON          DATA 0xd2
0000            147   _ACSRA          DATA 0xa3
0000            148   _ACSRB          DATA 0xab
0000            149   _AREF           DATA 0xbd
0000            150   _DADC           DATA 0xa4
0000            151   _DADI           DATA 0xa5
0000            152   _DADL           DATA 0xac
0000            153   _DADH           DATA 0xad
0000            154   _CCON           DATA 0xd8
0000            155   _CMOD           DATA 0xd9
0000            156   _CL             DATA 0xe9
0000            157   _CH             DATA 0xf9
0000            158   _CCAPM0         DATA 0xda
0000            159   _CCAPM1         DATA 0xdb
0000            160   _CCAPM2         DATA 0xdc
0000            161   _CCAPM3         DATA 0xdd
0000            162   _CCAPM4         DATA 0xde
0000            163   _CCAP0H         DATA 0xfa
0000            164   _CCAP1H         DATA 0xfb
0000            165   _CCAP2H         DATA 0xfc
0000            166   _CCAP3H         DATA 0xfd
0000            167   _CCAP4H         DATA 0xfe
0000            168   _CCAP0L         DATA 0xea
0000            169   _CCAP1L         DATA 0xeb
0000            170   _CCAP2L         DATA 0xec
0000            171   _CCAP3L         DATA 0xed
0000            172   _CCAP4L         DATA 0xee
0000            173   ;--------------------------------------------------------
0000            174   ; special function bits
0000            175   ;--------------------------------------------------------
0000            176   _ACC_0          BIT 0xe0
0000            177   _ACC_1          BIT 0xe1
0000            178   _ACC_2          BIT 0xe2
0000            179   _ACC_3          BIT 0xe3
0000            180   _ACC_4          BIT 0xe4
0000            181   _ACC_5          BIT 0xe5
0000            182   _ACC_6          BIT 0xe6
0000            183   _ACC_7          BIT 0xe7
0000            184   _B_0            BIT 0xf0
0000            185   _B_1            BIT 0xf1
0000            186   _B_2            BIT 0xf2
0000            187   _B_3            BIT 0xf3
0000            188   _B_4            BIT 0xf4
0000            189   _B_5            BIT 0xf5
0000            190   _B_6            BIT 0xf6
0000            191   _B_7            BIT 0xf7
0000            192   _P              BIT 0xd0
0000            193   _F1             BIT 0xd1
0000            194   _OV             BIT 0xd2
0000            195   _RS0            BIT 0xd3
0000            196   _RS1            BIT 0xd4
0000            197   _F0             BIT 0xd5
0000            198   _AC             BIT 0xd6
0000            199   _CY             BIT 0xd7
0000            200   _EX0            BIT 0xa8
0000            201   _ET0            BIT 0xa9
0000            202   _EX1            BIT 0xaa
0000            203   _ET1            BIT 0xab
0000            204   _ES             BIT 0xac
0000            205   _ET2            BIT 0xad
0000            206   _EC             BIT 0xae
0000            207   _EA             BIT 0xaf
0000            208   _PX0            BIT 0xb8
0000            209   _PT0            BIT 0xb9
0000            210   _PX1            BIT 0xba
0000            211   _PT1            BIT 0xbb
0000            212   _PS             BIT 0xbc
0000            213   _PT2            BIT 0xbd
0000            214   _IP0D           BIT 0xbf
0000            215   _PPCL           BIT 0xbe
0000            216   _PT2L           BIT 0xbd
0000            217   _PLS            BIT 0xbc
0000            218   _PT1L           BIT 0xbb
0000            219   _PX1L           BIT 0xba
0000            220   _PT0L           BIT 0xb9
0000            221   _PX0L           BIT 0xb8
0000            222   _P0_0           BIT 0x80
0000            223   _P0_1           BIT 0x81
0000            224   _P0_2           BIT 0x82
0000            225   _P0_3           BIT 0x83
0000            226   _P0_4           BIT 0x84
0000            227   _P0_5           BIT 0x85
0000            228   _P0_6           BIT 0x86
0000            229   _P0_7           BIT 0x87
0000            230   _P1_0           BIT 0x90
0000            231   _P1_1           BIT 0x91
0000            232   _P1_2           BIT 0x92
0000            233   _P1_3           BIT 0x93
0000            234   _P1_4           BIT 0x94
0000            235   _P1_5           BIT 0x95
0000            236   _P1_6           BIT 0x96
0000            237   _P1_7           BIT 0x97
0000            238   _P2_0           BIT 0xa0
0000            239   _P2_1           BIT 0xa1
0000            240   _P2_2           BIT 0xa2
0000            241   _P2_3           BIT 0xa3
0000            242   _P2_4           BIT 0xa4
0000            243   _P2_5           BIT 0xa5
0000            244   _P2_6           BIT 0xa6
0000            245   _P2_7           BIT 0xa7
0000            246   _P3_0           BIT 0xb0
0000            247   _P3_1           BIT 0xb1
0000            248   _P3_2           BIT 0xb2
0000            249   _P3_3           BIT 0xb3
0000            250   _P3_4           BIT 0xb4
0000            251   _P3_5           BIT 0xb5
0000            252   _P3_6           BIT 0xb6
0000            253   _P3_7           BIT 0xb7
0000            254   _RXD            BIT 0xb0
0000            255   _TXD            BIT 0xb1
0000            256   _INT0           BIT 0xb2
0000            257   _INT1           BIT 0xb3
0000            258   _T0             BIT 0xb4
0000            259   _T1             BIT 0xb5
0000            260   _WR             BIT 0xb6
0000            261   _RD             BIT 0xb7
0000            262   _P4_0           BIT 0xc0
0000            263   _P4_1           BIT 0xc1
0000            264   _P4_2           BIT 0xc2
0000            265   _P4_3           BIT 0xc3
0000            266   _P4_4           BIT 0xc4
0000            267   _P4_5           BIT 0xc5
0000            268   _P4_6           BIT 0xc6
0000            269   _P4_7           BIT 0xc7
0000            270   _RI             BIT 0x98
0000            271   _TI             BIT 0x99
0000            272   _RB8            BIT 0x9a
0000            273   _TB8            BIT 0x9b
0000            274   _REN            BIT 0x9c
0000            275   _SM2            BIT 0x9d
0000            276   _SM1            BIT 0x9e
0000            277   _SM0            BIT 0x9f
0000            278   _IT0            BIT 0x88
0000            279   _IE0            BIT 0x89
0000            280   _IT1            BIT 0x8a
0000            281   _IE1            BIT 0x8b
0000            282   _TR0            BIT 0x8c
0000            283   _TF0            BIT 0x8d
0000            284   _TR1            BIT 0x8e
0000            285   _TF1            BIT 0x8f
0000            286   _CP_RL2         BIT 0xc8
0000            287   _C_T2           BIT 0xc9
0000            288   _TR2            BIT 0xca
0000            289   _EXEN2          BIT 0xcb
0000            290   _TCLK           BIT 0xcc
0000            291   _RCLK           BIT 0xcd
0000            292   _EXF2           BIT 0xce
0000            293   _TF2            BIT 0xcf
0000            294   _CF             BIT 0xdf
0000            295   _CR             BIT 0xde
0000            296   _CCF4           BIT 0xdc
0000            297   _CCF3           BIT 0xdb
0000            298   _CCF2           BIT 0xda
0000            299   _CCF1           BIT 0xd9
0000            300   _CCF0           BIT 0xd8
0000            301   ;--------------------------------------------------------
0000            302   ; overlayable register banks
0000            303   ;--------------------------------------------------------
0000            304            rbank0 segment data overlay
0000            305   ;--------------------------------------------------------
0000            306   ; internal ram data
0000            307   ;--------------------------------------------------------
0000            308            rseg R_DSEG
0000            309   _pwmCount:
0000            310            ds 2
0002            311   _pwmLeft:
0002            312            ds 2
0004            313   _pwmRight:
0004            314            ds 2
0006            315   _direction:
0006            316            ds 2
0008            317   _tether:
0008            318            ds 2
000A            319   _leftSensor:
000A            320            ds 2
000C            321   _rightSensor:
000C            322            ds 2
000E            323   _distanceLeft:
000E            324            ds 2
0010            325   _distanceRight:
0010            326            ds 2
0012            327   _instruction:
0012            328            ds 2
0014            329   _Stage:
0014            330            ds 2
0016            331   ;--------------------------------------------------------
0016            332   ; overlayable items in internal ram 
0016            333   ;--------------------------------------------------------
0000            334            rseg    R_OSEG
0000            335   ;--------------------------------------------------------
0000            336   ; indirectly addressable internal ram data
0000            337   ;--------------------------------------------------------
0000            338            rseg R_ISEG
0000            339   ;--------------------------------------------------------
0000            340   ; absolute internal ram data
0000            341   ;--------------------------------------------------------
0000            342            DSEG
0000            343   ;--------------------------------------------------------
0000            344   ; bit data
0000            345   ;--------------------------------------------------------
0000            346            rseg R_BSEG
0000            347   _pwmCounter_sloc0_1_0:
0000            348            DBIT    1
0001            349   ;--------------------------------------------------------
0001            350   ; paged external ram data
0001            351   ;--------------------------------------------------------
0000            352            rseg R_PSEG
0000            353   ;--------------------------------------------------------
0000            354   ; external ram data
0000            355   ;--------------------------------------------------------
0000            356            rseg R_XSEG
0000            357   ;--------------------------------------------------------
0000            358   ; absolute external ram data
0000            359   ;--------------------------------------------------------
0000            360            XSEG
0000            361   ;--------------------------------------------------------
0000            362   ; external initialized ram data
0000            363   ;--------------------------------------------------------
0000            364            rseg R_IXSEG
0000            365            rseg R_HOME
0000            366            rseg R_GSINIT
0000            367            rseg R_CSEG
0000            368   ;--------------------------------------------------------
0000            369   ; Reset entry point and interrupt vectors
0000            370   ;--------------------------------------------------------
0000            371            CSEG at 0x0000
0000 020100     372            ljmp    _crt0
0003            373            CSEG at 0x0003
0003 020100     374            ljmp    _beaconSignal
000B            375            CSEG at 0x000b
000B 020100     376            ljmp    _pwmCounter
000E            377   ;--------------------------------------------------------
000E            378   ; global & static initialisations
000E            379   ;--------------------------------------------------------
0000            380            rseg R_HOME
0000            381            rseg R_GSINIT
0000            382            rseg R_GSINIT
0000            383   ;--------------------------------------------------------
0000            384   ; data variables initialization
0000            385   ;--------------------------------------------------------
0000            386            rseg R_DINIT
0000            387   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:81: volatile unsigned int pwmCount = 0;
0000 E4         388            clr     a
0001 F5B0       389            mov     _pwmCount,a
0003 F5B1       390            mov     (_pwmCount + 1),a
0005            391   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:86: volatile unsigned int leftSensor = 0;
0005 E4         392            clr     a
0006 F570       393            mov     _leftSensor,a
0008 F571       394            mov     (_leftSensor + 1),a
000A            395   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:87: volatile unsigned int rightSensor = 0;
000A E4         396            clr     a
000B F530       397            mov     _rightSensor,a
000D F531       398            mov     (_rightSensor + 1),a
000F            399            ; The linker places a 'ret' at the end of segment R_DINIT.
000F            400   ;--------------------------------------------------------
000F            401   ; code
000F            402   ;--------------------------------------------------------
0000            403            rseg R_CSEG
0000            404   ;------------------------------------------------------------
0000            405   ;Allocation info for local variables in function 'beaconSignal'
0000            406   ;------------------------------------------------------------
0000            407   ;------------------------------------------------------------
0000            408   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:113: void beaconSignal() interrupt 0
0000            409   ;        -----------------------------------------
0000            410   ;         function beaconSignal
0000            411   ;        -----------------------------------------
0000            412   _beaconSignal:
0000            413            using   0
0000            414   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:120: }
0000 32         415            reti
0001            416   ;        eliminated unneeded push/pop psw
0001            417   ;        eliminated unneeded push/pop dpl
0001            418   ;        eliminated unneeded push/pop dph
0001            419   ;        eliminated unneeded push/pop b
0001            420   ;        eliminated unneeded push/pop acc
0001            421   ;------------------------------------------------------------
0001            422   ;Allocation info for local variables in function 'pwmCounter'
0001            423   ;------------------------------------------------------------
0001            424   ;------------------------------------------------------------
0001            425   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:122: void pwmCounter() interrupt 1
0001            426   ;        -----------------------------------------
0001            427   ;         function pwmCounter
0001            428   ;        -----------------------------------------
0001            429   _pwmCounter:
0001 C0E0       430            push    acc
0003 C0F0       431            push    b
0005 C002       432            push    ar2
0007 C003       433            push    ar3
0009 C0D0       434            push    psw
000B 75D000     435            mov     psw,#0x00
000E            436   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:127: if(++pwmCount > 99)
000E 7401       437            mov     a,#0x01
0010 25B0       438            add     a,_pwmCount
0012 F5B0       439            mov     _pwmCount,a
0014 E4         440            clr     a
0015 35B1       441            addc    a,(_pwmCount + 1)
0017 F5B1       442            mov     (_pwmCount + 1),a
0019 C3         443            clr     c
001A 7463       444            mov     a,#0x63
001C 95B0       445            subb    a,_pwmCount
001E E4         446            clr     a
001F 95B1       447            subb    a,(_pwmCount + 1)
0021 5001       448            jnc     L003002?
0023            449   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:128: pwmCount = 0;
0023 E4         450            clr     a
0024 F5B0       451            mov     _pwmCount,a
0026 F5B1       452            mov     (_pwmCount + 1),a
0028            453   L003002?:
0028            454   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:130: if(pwmLeft > 0)
0028 C3         455            clr     c
0029 E4         456            clr     a
002A 9570       457            subb    a,_pwmLeft
002C E4         458            clr     a
002D 6480       459            xrl     a,#0x80
002F 8571F0     460            mov     b,(_pwmLeft + 1)
0032 63F080     461            xrl     b,#0x80
0035 95F0       462            subb    a,b
0037 5001       463            jnc     L003004?
0039            464   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:132: P1_1 = (pwmLeft > pwmCount) ? 0:1;
0039 AA70       465            mov     r2,_pwmLeft
003B AB71       466            mov     r3,(_pwmLeft + 1)
003D C3         467            clr     c
003E E5B0       468            mov     a,_pwmCount
0040 9A         469            subb    a,r2
0041 E5B1       470            mov     a,(_pwmCount + 1)
0043 9B         471            subb    a,r3
0044 9240       472            mov  _pwmCounter_sloc0_1_0,c
0046 B3         473            cpl     c
0047 9291       474            mov     _P1_1,c
0049            475   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:133: P1_0 = 1;
0049 D290       476            setb    _P1_0
004B            477   L003004?:
004B            478   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:135: if(pwmLeft < 0)
004B E571       479            mov     a,(_pwmLeft + 1)
004D 30E700     480            jnb     acc.7,L003006?
0050            481   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:137: P1_0 = ((-1) * pwmLeft > pwmCount) ? 0:1;
0050 C3         482            clr     c
0051 E4         483            clr     a
0052 9570       484            subb    a,_pwmLeft
0054 FA         485            mov     r2,a
0055 E4         486            clr     a
0056 9571       487            subb    a,(_pwmLeft + 1)
0058 FB         488            mov     r3,a
0059 C3         489            clr     c
005A E5B0       490            mov     a,_pwmCount
005C 9A         491            subb    a,r2
005D E5B1       492            mov     a,(_pwmCount + 1)
005F 9B         493            subb    a,r3
0060 9240       494            mov  _pwmCounter_sloc0_1_0,c
0062 B3         495            cpl     c
0063 9290       496            mov     _P1_0,c
0065            497   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:138: P1_1 = 1;
0065 D291       498            setb    _P1_1
0067            499   L003006?:
0067            500   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:140: if(pwmLeft==0)
0067 E570       501            mov     a,_pwmLeft
0069 4571       502            orl     a,(_pwmLeft + 1)
006B 7001       503            jnz     L003008?
006D            504   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:142: P1_1 = P1_0 = 1;
006D D290       505            setb    _P1_0
006F A290       506            mov     c,_P1_0
0071 9291       507            mov     _P1_1,c
0073            508   L003008?:
0073            509   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:145: if(pwmRight > 0)
0073 C3         510            clr     c
0074 E4         511            clr     a
0075 9530       512            subb    a,_pwmRight
0077 E4         513            clr     a
0078 6480       514            xrl     a,#0x80
007A 8531F0     515            mov     b,(_pwmRight + 1)
007D 63F080     516            xrl     b,#0x80
0080 95F0       517            subb    a,b
0082 5001       518            jnc     L003010?
0084            519   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:147: P1_4 = (pwmRight > pwmCount) ? 0:1;
0084 AA30       520            mov     r2,_pwmRight
0086 AB31       521            mov     r3,(_pwmRight + 1)
0088 C3         522            clr     c
0089 E5B0       523            mov     a,_pwmCount
008B 9A         524            subb    a,r2
008C E5B1       525            mov     a,(_pwmCount + 1)
008E 9B         526            subb    a,r3
008F 9240       527            mov  _pwmCounter_sloc0_1_0,c
0091 B3         528            cpl     c
0092 9294       529            mov     _P1_4,c
0094            530   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:148: P1_3 = 1;
0094 D293       531            setb    _P1_3
0096            532   L003010?:
0096            533   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:150: if(pwmRight < 0)
0096 E531       534            mov     a,(_pwmRight + 1)
0098 30E7C0     535            jnb     acc.7,L003012?
009B            536   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:152: P1_3 = ((-1) * pwmRight > pwmCount) ? 0:1;
009B C3         537            clr     c
009C E4         538            clr     a
009D 9530       539            subb    a,_pwmRight
009F FA         540            mov     r2,a
00A0 E4         541            clr     a
00A1 9531       542            subb    a,(_pwmRight + 1)
00A3 FB         543            mov     r3,a
00A4 C3         544            clr     c
00A5 E5B0       545            mov     a,_pwmCount
00A7 9A         546            subb    a,r2
00A8 E5B1       547            mov     a,(_pwmCount + 1)
00AA 9B         548            subb    a,r3
00AB 9240       549            mov  _pwmCounter_sloc0_1_0,c
00AD B3         550            cpl     c
00AE 9293       551            mov     _P1_3,c
00B0            552   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:153: P1_4 = 1;
00B0 D294       553            setb    _P1_4
00B2            554   L003012?:
00B2            555   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:155: if(pwmRight==0)
00B2 E530       556            mov     a,_pwmRight
00B4 4531       557            orl     a,(_pwmRight + 1)
00B6 7001       558            jnz     L003015?
00B8            559   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:157: P1_4 = P1_3 = 1;
00B8 D293       560            setb    _P1_3
00BA A293       561            mov     c,_P1_3
00BC 9294       562            mov     _P1_4,c
00BE            563   L003015?:
00BE D0D0       564            pop     psw
00C0 D003       565            pop     ar3
00C2 D002       566            pop     ar2
00C4 D0F0       567            pop     b
00C6 D0E0       568            pop     acc
00C8 32         569            reti
00C9            570   ;        eliminated unneeded push/pop dpl
00C9            571   ;        eliminated unneeded push/pop dph
00C9            572   ;------------------------------------------------------------
00C9            573   ;Allocation info for local variables in function '_c51_external_startup'
00C9            574   ;------------------------------------------------------------
00C9            575   ;------------------------------------------------------------
00C9            576   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:163: unsigned char _c51_external_startup(void)
00C9            577   ;        -----------------------------------------
00C9            578   ;         function _c51_external_startup
00C9            579   ;        -----------------------------------------
00C9            580   __c51_external_startup:
00C9            581   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:166: P0M0 = 0;         P0M1 = 0;
00C9 75E600     582            mov     _P0M0,#0x00
00CC 75E700     583            mov     _P0M1,#0x00
00CF            584   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:167: P1M0 = 0;         P1M1 = 0;
00CF 75D600     585            mov     _P1M0,#0x00
00D2 75D700     586            mov     _P1M1,#0x00
00D5            587   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:168: P2M0 = 0;         P2M1 = 0;
00D5 75CE00     588            mov     _P2M0,#0x00
00D8 75CF00     589            mov     _P2M1,#0x00
00DB            590   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:169: P3M0 = 0;         P3M1 = 0;
00DB 75C600     591            mov     _P3M0,#0x00
00DE 75C700     592            mov     _P3M1,#0x00
00E1            593   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:170: AUXR = 0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
00E1 758E11     594            mov     _AUXR,#0x11
00E4            595   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:171: P4M0 = 0;         P4M1 = 0;
00E4 75BE00     596            mov     _P4M0,#0x00
00E7 75BF00     597            mov     _P4M1,#0x00
00EA            598   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:175: PCON |= 0x80;
00EA 438780     599            orl     _PCON,#0x80
00ED            600   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:176: SCON = 0x52;
00ED 759852     601            mov     _SCON,#0x52
00F0            602   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:177: BDRCON = 0;
00F0 759B00     603            mov     _BDRCON,#0x00
00F3            604   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:178: BRL = BRG_VAL;
00F3 759AFA     605            mov     _BRL,#0xFA
00F6            606   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:179: BDRCON = BRR | TBCK | RBCK | SPD;
00F6 759B1E     607            mov     _BDRCON,#0x1E
00F9            608   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:181: TMOD = 0x01;      // Timer 0 as 16-bit timer      
00F9 758901     609            mov     _TMOD,#0x01
00FC            610   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:182: TH0 = RH0 = TIMER0_RELOAD_VALUE / 0x100;
00FC 75F4FF     611            mov     _RH0,#0xFF
00FF 758CFF     612            mov     _TH0,#0xFF
0102            613   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:183: TL0 = RL0 = TIMER0_RELOAD_VALUE % 0x100;
0102 75F248     614            mov     _RL0,#0x48
0105 758A48     615            mov     _TL0,#0x48
0108            616   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:184: TR0 = 1;
0108 D28C       617            setb    _TR0
010A            618   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:185: ET0 = 1;  // Enable timer 0 interrupt
010A D2A9       619            setb    _ET0
010C            620   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:186: EX0 = 1;  // Enable external interrupt 0
010C D2A8       621            setb    _EX0
010E            622   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:187: IT0 = 1;
010E D288       623            setb    _IT0
0110            624   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:188: EA = 1;   // Enable global interrupts
0110 D2AF       625            setb    _EA
0112            626   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:189: tether=0;
0112 E4         627            clr     a
0113 F5B0       628            mov     _tether,a
0115 F5B1       629            mov     (_tether + 1),a
0117            630   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:190: direction=1;
0117 75F001     631            mov     _direction,#0x01
011A E4         632            clr     a
011B F5F1       633            mov     (_direction + 1),a
011D            634   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:191: P2_2=1;
011D D2A2       635            setb    _P2_2
011F            636   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:192: P2_1=1;
011F D2A1       637            setb    _P2_1
0121            638   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:193: P2_0=1;
0121 D2A0       639            setb    _P2_0
0123            640   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:194: return 0;
0123 758200     641            mov     dpl,#0x00
0126 22         642            ret
0127            643   ;------------------------------------------------------------
0127            644   ;Allocation info for local variables in function 'main'
0127            645   ;------------------------------------------------------------
0127            646   ;i                         Allocated to registers r2 r3 
0127            647   ;------------------------------------------------------------
0127            648   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:198: int main (void)
0127            649   ;        -----------------------------------------
0127            650   ;         function main
0127            651   ;        -----------------------------------------
0127            652   _main:
0127            653   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:200: distanceLeft=15;
0127 75F00F     654            mov     _distanceLeft,#0x0F
012A E4         655            clr     a
012B F5F1       656            mov     (_distanceLeft + 1),a
012D            657   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:201: distanceRight=15;         
012D 75B00F     658            mov     _distanceRight,#0x0F
0130 E4         659            clr     a
0131 F5B1       660            mov     (_distanceRight + 1),a
0133            661   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:202: Stage=2;
0133 753002     662            mov     _Stage,#0x02
0136 E4         663            clr     a
0137 F531       664            mov     (_Stage + 1),a
0139            665   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:203: pwmLeft=0;
0139            666   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:204: pwmRight=0;
0139 E4         667            clr     a
013A F570       668            mov     _pwmLeft,a
013C F571       669            mov     (_pwmLeft + 1),a
013E F530       670            mov     _pwmRight,a
0140 F531       671            mov     (_pwmRight + 1),a
0142            672   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:205: while (1)
0142            673   L005030?:
0142            674   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:207: instruction = 0;
0142 E4         675            clr     a
0143 F570       676            mov     _instruction,a
0145 F571       677            mov     (_instruction + 1),a
0147            678   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:209: while (instruction == 0)
0147            679   L005001?:
0147 E570       680            mov     a,_instruction
0149 4571       681            orl     a,(_instruction + 1)
014B 7001       682            jnz     L005003?
014D            683   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:212: if(distanceLeft != distanceRight)
014D E5B0       684            mov     a,_distanceRight
014F E5B1       685            mov     a,(_distanceRight + 1)
0151 E5F0       686            mov     a,_distanceLeft
0153 E5F1       687            mov     a,(_distanceLeft + 1)
0155            688   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:217: P2_2=1;
0155 D2A2       689            setb    _P2_2
0157            690   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:218: P2_1=1;
0157 D2A1       691            setb    _P2_1
0159            692   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:219: P2_0=0;
0159 C2A0       693            clr     _P2_0
015B            694   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:220: printf("\nIntstruction: ");
015B 7440       695            mov     a,#__str_0
015D C0E0       696            push    acc
015F 7485       697            mov     a,#(__str_0 >> 8)
0161 C0E0       698            push    acc
0163 7480       699            mov     a,#0x80
0165 C0E0       700            push    acc
0167 120100     701            lcall   _printf
016A 1581       702            dec     sp
016C 1581       703            dec     sp
016E 1581       704            dec     sp
0170            705   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:221: scanf("%ud", &instruction);
0170 7470       706            mov     a,#_instruction
0172 C0E0       707            push    acc
0174 7440       708            mov     a,#(_instruction >> 8)
0176 C0E0       709            push    acc
0178 7440       710            mov     a,#0x40
017A C0E0       711            push    acc
017C 7400       712            mov     a,#__str_1
017E C0E0       713            push    acc
0180 7486       714            mov     a,#(__str_1 >> 8)
0182 C0E0       715            push    acc
0184 7480       716            mov     a,#0x80
0186 C0E0       717            push    acc
0188 120100     718            lcall   _scanf
018B E581       719            mov     a,sp
018D 24FA       720            add     a,#0xfa
018F F581       721            mov     sp,a
0191 8001       722            sjmp    L005001?
0193            723   L005003?:
0193            724   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:224: if(instruction==1)                        //move forward
0193 7401       725            mov     a,#0x01
0195 B57080     726            cjne    a,_instruction,L005055?
0198 E4         727            clr     a
0199 B57180     728            cjne    a,(_instruction + 1),L005055?
019C 8001       729            sjmp    L005056?
019E            730   L005055?:
019E 8001       731            sjmp    L005027?
01A0            732   L005056?:
01A0            733   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:226: if(Stage!=0)
01A0 E530       734            mov     a,_Stage
01A2 4531       735            orl     a,(_Stage + 1)
01A4 6001       736            jz      L005005?
01A6            737   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:227: Stage--;
01A6 1530       738            dec     _Stage
01A8 74FF       739            mov     a,#0xff
01AA B53080     740            cjne    a,_Stage,L005058?
01AD 1531       741            dec     (_Stage + 1)
01AF            742   L005058?:
01AF            743   L005005?:
01AF            744   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:228: printf("\nMove forwrds");
01AF 74C0       745            mov     a,#__str_2
01B1 C0E0       746            push    acc
01B3 7487       747            mov     a,#(__str_2 >> 8)
01B5 C0E0       748            push    acc
01B7 7480       749            mov     a,#0x80
01B9 C0E0       750            push    acc
01BB 120100     751            lcall   _printf
01BE 1581       752            dec     sp
01C0 1581       753            dec     sp
01C2 1581       754            dec     sp
01C4 020100     755            ljmp    L005030?
01C7            756   L005027?:
01C7            757   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:229: }else if(instruction==2)                  //move backwards
01C7 7402       758            mov     a,#0x02
01C9 B57000     759            cjne    a,_instruction,L005059?
01CC E4         760            clr     a
01CD B57100     761            cjne    a,(_instruction + 1),L005059?
01D0 8001       762            sjmp    L005060?
01D2            763   L005059?:
01D2 8001       764            sjmp    L005024?
01D4            765   L005060?:
01D4            766   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:231: if(Stage!=NSTAGES)
01D4 9012F0     767            mov     dptr,#_NSTAGES
01D7 E4         768            clr     a
01D8 93         769            movc    a,@a+dptr
01D9 FA         770            mov     r2,a
01DA 7401       771            mov     a,#0x01
01DC 93         772            movc    a,@a+dptr
01DD FB         773            mov     r3,a
01DE EA         774            mov     a,r2
01DF B530C0     775            cjne    a,_Stage,L005061?
01E2 EB         776            mov     a,r3
01E3 B531C0     777            cjne    a,(_Stage + 1),L005061?
01E6 8001       778            sjmp    L005007?
01E8            779   L005061?:
01E8            780   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:232: Stage++;
01E8 7401       781            mov     a,#0x01
01EA 2530       782            add     a,_Stage
01EC F530       783            mov     _Stage,a
01EE E4         784            clr     a
01EF 3531       785            addc    a,(_Stage + 1)
01F1 F531       786            mov     (_Stage + 1),a
01F3            787   L005007?:
01F3            788   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:233: printf("\n Move back");   
01F3 7440       789            mov     a,#__str_3
01F5 C0E0       790            push    acc
01F7 7489       791            mov     a,#(__str_3 >> 8)
01F9 C0E0       792            push    acc
01FB 7480       793            mov     a,#0x80
01FD C0E0       794            push    acc
01FF 120100     795            lcall   _printf
0202 1581       796            dec     sp
0204 1581       797            dec     sp
0206 1581       798            dec     sp
0208 020100     799            ljmp    L005030?
020B            800   L005024?:
020B            801   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:234: }else if(instruction==3)                  //uturn
020B 7403       802            mov     a,#0x03
020D B57080     803            cjne    a,_instruction,L005062?
0210 E4         804            clr     a
0211 B57180     805            cjne    a,(_instruction + 1),L005062?
0214 8001       806            sjmp    L005063?
0216            807   L005062?:
0216 8001       808            sjmp    L005021?
0218            809   L005063?:
0218            810   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:236: uTurn();
0218 120100     811            lcall   _uTurn
021B            812   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:237: printf("\nturned");
021B 7440       813            mov     a,#__str_4
021D C0E0       814            push    acc
021F 748A       815            mov     a,#(__str_4 >> 8)
0221 C0E0       816            push    acc
0223 7480       817            mov     a,#0x80
0225 C0E0       818            push    acc
0227 120100     819            lcall   _printf
022A 1581       820            dec     sp
022C 1581       821            dec     sp
022E 1581       822            dec     sp
0230 020100     823            ljmp    L005030?
0233            824   L005021?:
0233            825   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:238: }else if(instruction==4)                  //parralell park
0233 7404       826            mov     a,#0x04
0235 B57080     827            cjne    a,_instruction,L005064?
0238 E4         828            clr     a
0239 B57180     829            cjne    a,(_instruction + 1),L005064?
023C 020100     830            ljmp    L005030?
023F            831   L005064?:
023F            832   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:241: }else if(instruction==5)
023F 7405       833            mov     a,#0x05
0241 B570C0     834            cjne    a,_instruction,L005065?
0244 E4         835            clr     a
0245 B571C0     836            cjne    a,(_instruction + 1),L005065?
0248 8001       837            sjmp    L005066?
024A            838   L005065?:
024A 020100     839            ljmp    L005015?
024D            840   L005066?:
024D            841   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:245: instruction=0;
024D E4         842            clr     a
024E F570       843            mov     _instruction,a
0250 F571       844            mov     (_instruction + 1),a
0252            845   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:246: while(instruction!=5);
0252            846   L005008?:
0252 7405       847            mov     a,#0x05
0254 B570C0     848            cjne    a,_instruction,L005067?
0257 E4         849            clr     a
0258 B571C0     850            cjne    a,(_instruction + 1),L005067?
025B 8001       851            sjmp    L005068?
025D            852   L005067?:
025D 8001       853            sjmp    L005008?
025F            854   L005068?:
025F            855   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:248: for(i=0;i<NSTAGES;i++)
025F 7A00       856            mov     r2,#0x00
0261 7B00       857            mov     r3,#0x00
0263            858   L005032?:
0263 9012F0     859            mov     dptr,#_NSTAGES
0266 E4         860            clr     a
0267 93         861            movc    a,@a+dptr
0268 FC         862            mov     r4,a
0269 7401       863            mov     a,#0x01
026B 93         864            movc    a,@a+dptr
026C FD         865            mov     r5,a
026D C3         866            clr     c
026E EA         867            mov     a,r2
026F 9C         868            subb    a,r4
0270 EB         869            mov     a,r3
0271 6480       870            xrl     a,#0x80
0273 8DF0       871            mov     b,r5
0275 63F080     872            xrl     b,#0x80
0278 95F0       873            subb    a,b
027A 4001       874            jc      L005069?
027C 020100     875            ljmp    L005030?
027F            876   L005069?:
027F            877   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:250: if(distanceLeft>PRESETS[i]-3 && distanceLeft<PRESETS[i]+3)
027F 8A04       878            mov     ar4,r2
0281 EB         879            mov     a,r3
0282 CC         880            xch     a,r4
0283 25E0       881            add     a,acc
0285 CC         882            xch     a,r4
0286 33         883            rlc     a
0287 FD         884            mov     r5,a
0288 EC         885            mov     a,r4
0289 24B0       886            add     a,#_PRESETS
028B F582       887            mov     dpl,a
028D ED         888            mov     a,r5
028E 3412       889            addc    a,#(_PRESETS >> 8)
0290 F583       890            mov     dph,a
0292 E4         891            clr     a
0293 93         892            movc    a,@a+dptr
0294 FC         893            mov     r4,a
0295 A3         894            inc     dptr
0296 E4         895            clr     a
0297 93         896            movc    a,@a+dptr
0298 FD         897            mov     r5,a
0299 EC         898            mov     a,r4
029A 24FD       899            add     a,#0xfd
029C FE         900            mov     r6,a
029D ED         901            mov     a,r5
029E 34FF       902            addc    a,#0xff
02A0 FF         903            mov     r7,a
02A1 A8F0       904            mov     r0,_distanceLeft
02A3 A9F1       905            mov     r1,(_distanceLeft + 1)
02A5 C3         906            clr     c
02A6 EE         907            mov     a,r6
02A7 98         908            subb    a,r0
02A8 EF         909            mov     a,r7
02A9 99         910            subb    a,r1
02AA 5001       911            jnc     L005034?
02AC 7403       912            mov     a,#0x03
02AE 2C         913            add     a,r4
02AF FC         914            mov     r4,a
02B0 E4         915            clr     a
02B1 3D         916            addc    a,r5
02B2 FD         917            mov     r5,a
02B3 AEF0       918            mov     r6,_distanceLeft
02B5 AFF1       919            mov     r7,(_distanceLeft + 1)
02B7 C3         920            clr     c
02B8 EE         921            mov     a,r6
02B9 9C         922            subb    a,r4
02BA EF         923            mov     a,r7
02BB 9D         924            subb    a,r5
02BC 5001       925            jnc     L005034?
02BE            926   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:251: Stage=i;
02BE 8A30       927            mov     _Stage,r2
02C0 8B31       928            mov     (_Stage + 1),r3
02C2            929   L005034?:
02C2            930   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:248: for(i=0;i<NSTAGES;i++)
02C2 0A         931            inc     r2
02C3 BA0040     932            cjne    r2,#0x00,L005032?
02C6 0B         933            inc     r3
02C7 8001       934            sjmp    L005032?
02C9            935   L005015?:
02C9            936   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:256: printf("\nERROR");
02C9 7440       937            mov     a,#__str_5
02CB C0E0       938            push    acc
02CD 748D       939            mov     a,#(__str_5 >> 8)
02CF C0E0       940            push    acc
02D1 7480       941            mov     a,#0x80
02D3 C0E0       942            push    acc
02D5 120100     943            lcall   _printf
02D8 1581       944            dec     sp
02DA 1581       945            dec     sp
02DC 1581       946            dec     sp
02DE            947   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:257: P2_2=0;
02DE C2A2       948            clr     _P2_2
02E0            949   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:258: P2_1=1;
02E0 D2A1       950            setb    _P2_1
02E2            951   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:259: P2_0=1;
02E2 D2A0       952            setb    _P2_0
02E4            953   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:262: return 0;
02E4 020100     954            ljmp    L005030?
02E7            955   ;------------------------------------------------------------
02E7            956   ;Allocation info for local variables in function 'getDistance'
02E7            957   ;------------------------------------------------------------
02E7            958   ;------------------------------------------------------------
02E7            959   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:273: void getDistance() 
02E7            960   ;        -----------------------------------------
02E7            961   ;         function getDistance
02E7            962   ;        -----------------------------------------
02E7            963   _getDistance:
02E7            964   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:277: }
02E7 22         965            ret
02E8            966   ;------------------------------------------------------------
02E8            967   ;Allocation info for local variables in function 'turnCar'
02E8            968   ;------------------------------------------------------------
02E8            969   ;------------------------------------------------------------
02E8            970   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:284: void turnCar()
02E8            971   ;        -----------------------------------------
02E8            972   ;         function turnCar
02E8            973   ;        -----------------------------------------
02E8            974   _turnCar:
02E8            975   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:286: P2_2=1;
02E8 D2A2       976            setb    _P2_2
02EA            977   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:287: P2_1=0;
02EA C2A1       978            clr     _P2_1
02EC            979   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:288: P2_0=1;
02EC D2A0       980            setb    _P2_0
02EE            981   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:290: while(distanceLeft < distanceRight+ANGLEBUFFER)
02EE            982   L007001?:
02EE 901330     983            mov     dptr,#_ANGLEBUFFER
02F1 E4         984            clr     a
02F2 93         985            movc    a,@a+dptr
02F3 FA         986            mov     r2,a
02F4 7401       987            mov     a,#0x01
02F6 93         988            movc    a,@a+dptr
02F7 FB         989            mov     r3,a
02F8 EA         990            mov     a,r2
02F9 25B0       991            add     a,_distanceRight
02FB FC         992            mov     r4,a
02FC EB         993            mov     a,r3
02FD 35B1       994            addc    a,(_distanceRight + 1)
02FF FD         995            mov     r5,a
0300 C3         996            clr     c
0301 E5F0       997            mov     a,_distanceLeft
0303 9C         998            subb    a,r4
0304 E5F1       999            mov     a,(_distanceLeft + 1)
0306 6480      1000            xrl     a,#0x80
0308 8DF0      1001            mov     b,r5
030A 63F080    1002            xrl     b,#0x80
030D 95F0      1003            subb    a,b
030F 5001      1004            jnc     L007004?
0311           1005   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:292: pwmLeft = TURNSPEED;
0311 9013B0    1006            mov     dptr,#_TURNSPEED
0314 E4        1007            clr     a
0315 93        1008            movc    a,@a+dptr
0316 FC        1009            mov     r4,a
0317 7401      1010            mov     a,#0x01
0319 93        1011            movc    a,@a+dptr
031A FD        1012            mov     r5,a
031B 8C70      1013            mov     _pwmLeft,r4
031D 8D71      1014            mov     (_pwmLeft + 1),r5
031F           1015   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:293: pwmRight = (-TURNSPEED);
031F C3        1016            clr     c
0320 E4        1017            clr     a
0321 9C        1018            subb    a,r4
0322 F530      1019            mov     _pwmRight,a
0324 E4        1020            clr     a
0325 9D        1021            subb    a,r5
0326 F531      1022            mov     (_pwmRight + 1),a
0328           1023   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:295: while(distanceLeft+ANGLEBUFFER > distanceRight)
0328 8001      1024            sjmp    L007001?
032A           1025   L007004?:
032A EA        1026            mov     a,r2
032B 25F0      1027            add     a,_distanceLeft
032D FC        1028            mov     r4,a
032E EB        1029            mov     a,r3
032F 35F1      1030            addc    a,(_distanceLeft + 1)
0331 FD        1031            mov     r5,a
0332 C3        1032            clr     c
0333 E5B0      1033            mov     a,_distanceRight
0335 9C        1034            subb    a,r4
0336 E5B1      1035            mov     a,(_distanceRight + 1)
0338 6480      1036            xrl     a,#0x80
033A 8DF0      1037            mov     b,r5
033C 63F080    1038            xrl     b,#0x80
033F 95F0      1039            subb    a,b
0341 5001      1040            jnc     L007006?
0343           1041   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:297: pwmLeft = (-TURNSPEED);
0343 9013B0    1042            mov     dptr,#_TURNSPEED
0346 E4        1043            clr     a
0347 93        1044            movc    a,@a+dptr
0348 FC        1045            mov     r4,a
0349 7401      1046            mov     a,#0x01
034B 93        1047            movc    a,@a+dptr
034C FD        1048            mov     r5,a
034D C3        1049            clr     c
034E E4        1050            clr     a
034F 9C        1051            subb    a,r4
0350 F570      1052            mov     _pwmLeft,a
0352 E4        1053            clr     a
0353 9D        1054            subb    a,r5
0354 F571      1055            mov     (_pwmLeft + 1),a
0356           1056   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:298: pwmRight = TURNSPEED;
0356 8C30      1057            mov     _pwmRight,r4
0358 8D31      1058            mov     (_pwmRight + 1),r5
035A 8001      1059            sjmp    L007004?
035C           1060   L007006?:
035C           1061   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:300: pwmLeft=pwmRight=0;
035C E4        1062            clr     a
035D F530      1063            mov     _pwmRight,a
035F F531      1064            mov     (_pwmRight + 1),a
0361 F570      1065            mov     _pwmLeft,a
0363 F571      1066            mov     (_pwmLeft + 1),a
0365           1067   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:301: return;
0365 22        1068            ret
0366           1069   ;------------------------------------------------------------
0366           1070   ;Allocation info for local variables in function 'moveCar'
0366           1071   ;------------------------------------------------------------
0366           1072   ;------------------------------------------------------------
0366           1073   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:309: void moveCar()
0366           1074   ;        -----------------------------------------
0366           1075   ;         function moveCar
0366           1076   ;        -----------------------------------------
0366           1077   _moveCar:
0366           1078   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:312: while (distanceRight+DISTANCEBUFFER > PRESETS[Stage] && distanceLeft==distanceRight)
0366           1079   L008002?:
0366 901370    1080            mov     dptr,#_DISTANCEBUFFER
0369 E4        1081            clr     a
036A 93        1082            movc    a,@a+dptr
036B FA        1083            mov     r2,a
036C 7401      1084            mov     a,#0x01
036E 93        1085            movc    a,@a+dptr
036F FB        1086            mov     r3,a
0370 EA        1087            mov     a,r2
0371 25B0      1088            add     a,_distanceRight
0373 FC        1089            mov     r4,a
0374 EB        1090            mov     a,r3
0375 35B1      1091            addc    a,(_distanceRight + 1)
0377 FD        1092            mov     r5,a
0378 E530      1093            mov     a,_Stage
037A 25E0      1094            add     a,acc
037C FE        1095            mov     r6,a
037D E531      1096            mov     a,(_Stage + 1)
037F 33        1097            rlc     a
0380 FF        1098            mov     r7,a
0381 EE        1099            mov     a,r6
0382 24B0      1100            add     a,#_PRESETS
0384 F582      1101            mov     dpl,a
0386 EF        1102            mov     a,r7
0387 3412      1103            addc    a,#(_PRESETS >> 8)
0389 F583      1104            mov     dph,a
038B E4        1105            clr     a
038C 93        1106            movc    a,@a+dptr
038D FE        1107            mov     r6,a
038E A3        1108            inc     dptr
038F E4        1109            clr     a
0390 93        1110            movc    a,@a+dptr
0391 FF        1111            mov     r7,a
0392 C3        1112            clr     c
0393 EE        1113            mov     a,r6
0394 9C        1114            subb    a,r4
0395 EF        1115            mov     a,r7
0396 9D        1116            subb    a,r5
0397 5001      1117            jnc     L008006?
0399 E5B0      1118            mov     a,_distanceRight
039B B5F080    1119            cjne    a,_distanceLeft,L008006?
039E E5B1      1120            mov     a,(_distanceRight + 1)
03A0 B5F180    1121            cjne    a,(_distanceLeft + 1),L008006?
03A3           1122   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:314: P2_2=1;
03A3 D2A2      1123            setb    _P2_2
03A5           1124   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:315: P2_1=0;
03A5 C2A1      1125            clr     _P2_1
03A7           1126   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:316: P2_0=1;
03A7 D2A0      1127            setb    _P2_0
03A9           1128   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:317: pwmLeft = MOVESPEED;
03A9 9013F0    1129            mov     dptr,#_MOVESPEED
03AC E4        1130            clr     a
03AD 93        1131            movc    a,@a+dptr
03AE FC        1132            mov     r4,a
03AF 7401      1133            mov     a,#0x01
03B1 93        1134            movc    a,@a+dptr
03B2 FD        1135            mov     r5,a
03B3 8C70      1136            mov     _pwmLeft,r4
03B5 8D71      1137            mov     (_pwmLeft + 1),r5
03B7           1138   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:318: pwmRight = MOVESPEED;
03B7 8C30      1139            mov     _pwmRight,r4
03B9 8D31      1140            mov     (_pwmRight + 1),r5
03BB           1141   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:321: while(distanceRight < PRESETS[Stage]+DISTANCEBUFFER && distanceLeft==distanceRight)
03BB 8001      1142            sjmp    L008002?
03BD           1143   L008006?:
03BD E530      1144            mov     a,_Stage
03BF 25E0      1145            add     a,acc
03C1 FC        1146            mov     r4,a
03C2 E531      1147            mov     a,(_Stage + 1)
03C4 33        1148            rlc     a
03C5 FD        1149            mov     r5,a
03C6 EC        1150            mov     a,r4
03C7 24B0      1151            add     a,#_PRESETS
03C9 F582      1152            mov     dpl,a
03CB ED        1153            mov     a,r5
03CC 3412      1154            addc    a,#(_PRESETS >> 8)
03CE F583      1155            mov     dph,a
03D0 E4        1156            clr     a
03D1 93        1157            movc    a,@a+dptr
03D2 FC        1158            mov     r4,a
03D3 A3        1159            inc     dptr
03D4 E4        1160            clr     a
03D5 93        1161            movc    a,@a+dptr
03D6 FD        1162            mov     r5,a
03D7 EA        1163            mov     a,r2
03D8 2C        1164            add     a,r4
03D9 FC        1165            mov     r4,a
03DA EB        1166            mov     a,r3
03DB 3D        1167            addc    a,r5
03DC FD        1168            mov     r5,a
03DD AEB0      1169            mov     r6,_distanceRight
03DF AFB1      1170            mov     r7,(_distanceRight + 1)
03E1 C3        1171            clr     c
03E2 EE        1172            mov     a,r6
03E3 9C        1173            subb    a,r4
03E4 EF        1174            mov     a,r7
03E5 9D        1175            subb    a,r5
03E6 5001      1176            jnc     L008008?
03E8 E5B0      1177            mov     a,_distanceRight
03EA B5F0C0    1178            cjne    a,_distanceLeft,L008008?
03ED E5B1      1179            mov     a,(_distanceRight + 1)
03EF B5F1C0    1180            cjne    a,(_distanceLeft + 1),L008008?
03F2           1181   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:323: pwmLeft = (-MOVESPEED); 
03F2 9013F0    1182            mov     dptr,#_MOVESPEED
03F5 E4        1183            clr     a
03F6 93        1184            movc    a,@a+dptr
03F7 FC        1185            mov     r4,a
03F8 7401      1186            mov     a,#0x01
03FA 93        1187            movc    a,@a+dptr
03FB FD        1188            mov     r5,a
03FC C3        1189            clr     c
03FD E4        1190            clr     a
03FE 9C        1191            subb    a,r4
03FF FC        1192            mov     r4,a
0400 E4        1193            clr     a
0401 9D        1194            subb    a,r5
0402 FD        1195            mov     r5,a
0403 8C70      1196            mov     _pwmLeft,r4
0405 8D71      1197            mov     (_pwmLeft + 1),r5
0407           1198   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:324: pwmRight = (-MOVESPEED);          
0407 8C30      1199            mov     _pwmRight,r4
0409 8D31      1200            mov     (_pwmRight + 1),r5
040B           1201   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:325: P2_2=1;
040B D2A2      1202            setb    _P2_2
040D           1203   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:326: P2_1=0;
040D C2A1      1204            clr     _P2_1
040F           1205   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:327: P2_0=1;
040F D2A0      1206            setb    _P2_0
0411 8001      1207            sjmp    L008006?
0413           1208   L008008?:
0413           1209   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:330: pwmLeft=pwmRight=0;
0413 E4        1210            clr     a
0414 F530      1211            mov     _pwmRight,a
0416 F531      1212            mov     (_pwmRight + 1),a
0418 F570      1213            mov     _pwmLeft,a
041A F571      1214            mov     (_pwmLeft + 1),a
041C           1215   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:331: return;
041C 22        1216            ret
041D           1217   ;------------------------------------------------------------
041D           1218   ;Allocation info for local variables in function 'uTurn'
041D           1219   ;------------------------------------------------------------
041D           1220   ;------------------------------------------------------------
041D           1221   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:334: void uTurn()
041D           1222   ;        -----------------------------------------
041D           1223   ;         function uTurn
041D           1224   ;        -----------------------------------------
041D           1225   _uTurn:
041D           1226   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:336: P2_2=1;
041D D2A2      1227            setb    _P2_2
041F           1228   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:337: P2_1=0;
041F C2A1      1229            clr     _P2_1
0421           1230   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:338: P2_0=1;
0421 D2A0      1231            setb    _P2_0
0423           1232   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:339: pwmLeft=TURNSPEED;
0423 9013B0    1233            mov     dptr,#_TURNSPEED
0426 E4        1234            clr     a
0427 93        1235            movc    a,@a+dptr
0428 FA        1236            mov     r2,a
0429 7401      1237            mov     a,#0x01
042B 93        1238            movc    a,@a+dptr
042C FB        1239            mov     r3,a
042D 8A70      1240            mov     _pwmLeft,r2
042F 8B71      1241            mov     (_pwmLeft + 1),r3
0431           1242   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:340: pwmRight=(-TURNSPEED);
0431 C3        1243            clr     c
0432 E4        1244            clr     a
0433 9A        1245            subb    a,r2
0434 F530      1246            mov     _pwmRight,a
0436 E4        1247            clr     a
0437 9B        1248            subb    a,r3
0438 F531      1249            mov     (_pwmRight + 1),a
043A           1250   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:341: wait1s();
043A 120100    1251            lcall   _wait1s
043D           1252   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:342: pwmLeft=pwmRight=0;
043D E4        1253            clr     a
043E F530      1254            mov     _pwmRight,a
0440 F531      1255            mov     (_pwmRight + 1),a
0442 F570      1256            mov     _pwmLeft,a
0444 F571      1257            mov     (_pwmLeft + 1),a
0446           1258   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:343: return;
0446 22        1259            ret
0447           1260   ;------------------------------------------------------------
0447           1261   ;Allocation info for local variables in function 'wait2ms'
0447           1262   ;------------------------------------------------------------
0447           1263   ;------------------------------------------------------------
0447           1264   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:347: void wait2ms (void)
0447           1265   ;        -----------------------------------------
0447           1266   ;         function wait2ms
0447           1267   ;        -----------------------------------------
0447           1268   _wait2ms:
0447           1269   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:357: _endasm;
0447           1270            
0447           1271     ;For a 22.1184MHz crystal one machine cycle
0447           1272     ;takes 12/22.1184MHz=0.5425347us
0447           1273             J3:
0447 7C0A      1274            mov R4, #10
0449           1275             J2:
0449 7BB8      1276            mov R3, #184
044B           1277             J1:
044B DB80      1278            djnz R3, J1 ; 2 machine cycles-> 2*0.5425347us*184=200us
044D DC40      1279                 djnz R4, J2 ; 200us*250=0.05s
044F 22        1280                 ret
0450           1281                
0450 22        1282            ret
0451           1283   ;------------------------------------------------------------
0451           1284   ;Allocation info for local variables in function 'wait1s'
0451           1285   ;------------------------------------------------------------
0451           1286   ;------------------------------------------------------------
0451           1287   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:361: void wait1s (void)
0451           1288   ;        -----------------------------------------
0451           1289   ;         function wait1s
0451           1290   ;        -----------------------------------------
0451           1291   _wait1s:
0451           1292   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:373: _endasm;
0451           1293            
0451           1294     ;For a 22.1184MHz crystal one machine cycle
0451           1295     ;takes 12/22.1184MHz=0.5425347us
0451 7A1E      1296                 mov R2, #30
0453           1297             L3:
0453 79B4      1298            mov R1, #180
0455           1299             L2:
0455 78B4      1300            mov R0, #180
0457           1301             L1:
0457 D840      1302            djnz R0, L1 ; 2 machine cycles-> 2*0.5425347us*184=200us
0459 D900      1303                 djnz R1, L2 ; 200us*250=0.05s
045B DAC0      1304                 djnz R2, L3 ; 0.05s*20=1s
045D 22        1305                 ret
045E           1306                
045E 22        1307            ret
045F           1308   ;------------------------------------------------------------
045F           1309   ;Allocation info for local variables in function 'voltage'
045F           1310   ;------------------------------------------------------------
045F           1311   ;channel                   Allocated to registers 
045F           1312   ;------------------------------------------------------------
045F           1313   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:381: float voltage (unsigned char channel)
045F           1314   ;        -----------------------------------------
045F           1315   ;         function voltage
045F           1316   ;        -----------------------------------------
045F           1317   _voltage:
045F           1318   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:383: return ((GetADC(channel) * 4.84) / 1023.0); // VCC=4.84V (measured)
045F 120100    1319            lcall   _GetADC
0462 120100    1320            lcall   ___uint2fs
0465 AA82      1321            mov     r2,dpl
0467 AB83      1322            mov     r3,dph
0469 ACF0      1323            mov     r4,b
046B FD        1324            mov     r5,a
046C C002      1325            push    ar2
046E C003      1326            push    ar3
0470 C004      1327            push    ar4
0472 C005      1328            push    ar5
0474 90E148    1329            mov     dptr,#0xE148
0477 75F09A    1330            mov     b,#0x9A
047A 7440      1331            mov     a,#0x40
047C 120100    1332            lcall   ___fsmul
047F AA82      1333            mov     r2,dpl
0481 AB83      1334            mov     r3,dph
0483 ACF0      1335            mov     r4,b
0485 FD        1336            mov     r5,a
0486 E581      1337            mov     a,sp
0488 24FC      1338            add     a,#0xfc
048A F581      1339            mov     sp,a
048C E4        1340            clr     a
048D C0E0      1341            push    acc
048F 74C0      1342            mov     a,#0xC0
0491 C0E0      1343            push    acc
0493 747F      1344            mov     a,#0x7F
0495 C0E0      1345            push    acc
0497 7444      1346            mov     a,#0x44
0499 C0E0      1347            push    acc
049B 8A82      1348            mov     dpl,r2
049D 8B83      1349            mov     dph,r3
049F 8CF0      1350            mov     b,r4
04A1 ED        1351            mov     a,r5
04A2 120100    1352            lcall   ___fsdiv
04A5 AA82      1353            mov     r2,dpl
04A7 AB83      1354            mov     r3,dph
04A9 ACF0      1355            mov     r4,b
04AB FD        1356            mov     r5,a
04AC E581      1357            mov     a,sp
04AE 24FC      1358            add     a,#0xfc
04B0 F581      1359            mov     sp,a
04B2 8A82      1360            mov     dpl,r2
04B4 8B83      1361            mov     dph,r3
04B6 8CF0      1362            mov     b,r4
04B8 ED        1363            mov     a,r5
04B9 22        1364            ret
04BA           1365   ;------------------------------------------------------------
04BA           1366   ;Allocation info for local variables in function 'SPIWrite'
04BA           1367   ;------------------------------------------------------------
04BA           1368   ;value                     Allocated to registers r2 
04BA           1369   ;------------------------------------------------------------
04BA           1370   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:386: void SPIWrite(unsigned char value)
04BA           1371   ;        -----------------------------------------
04BA           1372   ;         function SPIWrite
04BA           1373   ;        -----------------------------------------
04BA           1374   _SPIWrite:
04BA AA82      1375            mov     r2,dpl
04BC           1376   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:388: SPSTA &= (~SPIF); // Clear the SPIF flag in SPSTA
04BC 53C47F    1377            anl     _SPSTA,#0x7F
04BF           1378   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:389: SPDAT = value;
04BF 8AC5      1379            mov     _SPDAT,r2
04C1           1380   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:390: while ((SPSTA & SPIF) != SPIF); //Wait for transmission to end
04C1           1381   L013001?:
04C1 7480      1382            mov     a,#0x80
04C3 55C4      1383            anl     a,_SPSTA
04C5 FA        1384            mov     r2,a
04C6 BA8040    1385            cjne    r2,#0x80,L013001?
04C9 22        1386            ret
04CA           1387   ;------------------------------------------------------------
04CA           1388   ;Allocation info for local variables in function 'GetADC'
04CA           1389   ;------------------------------------------------------------
04CA           1390   ;channel                   Allocated to registers r2 
04CA           1391   ;adc                       Allocated to registers r2 r3 
04CA           1392   ;------------------------------------------------------------
04CA           1393   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:394: unsigned int GetADC(unsigned char channel)
04CA           1394   ;        -----------------------------------------
04CA           1395   ;         function GetADC
04CA           1396   ;        -----------------------------------------
04CA           1397   _GetADC:
04CA AA82      1398            mov     r2,dpl
04CC           1399   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:399: SPCON &= (~SPEN); // Disable SPI
04CC 53C3BF    1400            anl     _SPCON,#0xBF
04CF           1401   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:400: SPCON = MSTR | CPOL | CPHA | SPR1 | SPR0 | SSDIS;
04CF 75C33F    1402            mov     _SPCON,#0x3F
04D2           1403   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:401: SPCON |= SPEN; // Enable SPI
04D2 43C340    1404            orl     _SPCON,#0x40
04D5           1405   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:403: P1_4 = 0; // Activate the MCP3004 ADC.
04D5 C294      1406            clr     _P1_4
04D7           1407   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:404: SPIWrite(channel | 0x18);         // Send start bit, single/diff* bit, D2, D1, and D0 bits.
04D7 7418      1408            mov     a,#0x18
04D9 4A        1409            orl     a,r2
04DA F582      1410            mov     dpl,a
04DC 120100    1411            lcall   _SPIWrite
04DF           1412   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:405: for (adc=0; adc < 10; adc++); // Wait for S/H to setup
04DF 7A0A      1413            mov     r2,#0x0A
04E1 7B00      1414            mov     r3,#0x00
04E3           1415   L014003?:
04E3 1A        1416            dec     r2
04E4 BAFFC0    1417            cjne    r2,#0xff,L014009?
04E7 1B        1418            dec     r3
04E8           1419   L014009?:
04E8 EA        1420            mov     a,r2
04E9 4B        1421            orl     a,r3
04EA 7001      1422            jnz     L014003?
04EC           1423   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:406: SPIWrite(0x55); // Read bits 9 down to 4
04EC 758255    1424            mov     dpl,#0x55
04EF 120100    1425            lcall   _SPIWrite
04F2           1426   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:407: adc=((SPDAT & 0x3f) * 0x100);
04F2 743F      1427            mov     a,#0x3F
04F4 55C5      1428            anl     a,_SPDAT
04F6 FB        1429            mov     r3,a
04F7 7A00      1430            mov     r2,#0x00
04F9           1431   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:408: SPIWrite(0x55);// Read bits 3 down to 0
04F9 758255    1432            mov     dpl,#0x55
04FC C002      1433            push    ar2
04FE C003      1434            push    ar3
0500 120100    1435            lcall   _SPIWrite
0503 D003      1436            pop     ar3
0505 D002      1437            pop     ar2
0507           1438   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:409: P1_4 = 1; // Deactivate the MCP3004 ADC.
0507 D294      1439            setb    _P1_4
0509           1440   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:410: adc += (SPDAT & 0xf0); // SPDR contains the low part of the result. 
0509 74F0      1441            mov     a,#0xF0
050B 55C5      1442            anl     a,_SPDAT
050D FC        1443            mov     r4,a
050E 7D00      1444            mov     r5,#0x00
0510 EC        1445            mov     a,r4
0511 2A        1446            add     a,r2
0512 FA        1447            mov     r2,a
0513 ED        1448            mov     a,r5
0514 3B        1449            addc    a,r3
0515           1450   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:411: adc >>= 4;
0515 C4        1451            swap    a
0516 CA        1452            xch     a,r2
0517 C4        1453            swap    a
0518 540F      1454            anl     a,#0x0f
051A 6A        1455            xrl     a,r2
051B CA        1456            xch     a,r2
051C 540F      1457            anl     a,#0x0f
051E CA        1458            xch     a,r2
051F 6A        1459            xrl     a,r2
0520 CA        1460            xch     a,r2
0521           1461   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:413: return adc;
0521 8A82      1462            mov     dpl,r2
0523 F583      1463            mov     dph,a
0525 22        1464            ret
0526           1465            rseg R_CSEG
0526           1466   
0000           1467            rseg R_XINIT
0000           1468   
0000           1469            rseg R_CONST
0000           1470   _MOVESPEED:
0000 5000      1471            db 0x50,0x00    ;  80
0002           1472   _TURNSPEED:
0002 6400      1473            db 0x64,0x00    ;  100
0004           1474   _DISTANCEBUFFER:
0004 0000      1475            db 0x00,0x00    ;  0
0006           1476   _ANGLEBUFFER:
0006 0000      1477            db 0x00,0x00    ;  0
0008           1478   _NSTAGES:
0008 0C00      1479            db 0x0C,0x00    ;  12
000A           1480   _PRESETS:
000A 0500      1481            db 0x05,0x00    ; 5
000C 0A00      1482            db 0x0A,0x00    ; 10
000E 0F00      1483            db 0x0F,0x00    ; 15
0010 1400      1484            db 0x14,0x00    ; 20
0012 1900      1485            db 0x19,0x00    ; 25
0014 1E00      1486            db 0x1E,0x00    ; 30
0016 2300      1487            db 0x23,0x00    ; 35
0018 2800      1488            db 0x28,0x00    ; 40
001A 2D00      1489            db 0x2D,0x00    ; 45
001C 3200      1490            db 0x32,0x00    ; 50
001E 3700      1491            db 0x37,0x00    ; 55
0020 3C00      1492            db 0x3C,0x00    ; 60
0022           1493   __str_0:
0022 0A        1494            db 0x0A
0023 496E7473  1495            db 'Intstruction: '
     74727563
     74696F6E
     3A20
0031 00        1496            db 0x00
0032           1497   __str_1:
0032 257564    1498            db '%ud'
0035 00        1499            db 0x00
0036           1500   __str_2:
0036 0A        1501            db 0x0A
0037 4D6F7665  1502            db 'Move forwrds'
     20666F72
     77726473
0043 00        1503            db 0x00
0044           1504   __str_3:
0044 0A        1505            db 0x0A
0045 204D6F76  1506            db ' Move back'
     65206261
     636B
004F 00        1507            db 0x00
0050           1508   __str_4:
0050 0A        1509            db 0x0A
0051 7475726E  1510            db 'turned'
     6564
0057 00        1511            db 0x00
0058           1512   __str_5:
0058 0A        1513            db 0x0A
0059 4552524F  1514            db 'ERROR'
     52
005E 00        1515            db 0x00
005F           1516   
000E           1517            CSEG
000E           1518   
000E           1519   end
