0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Tue Mar 25 11:57:38 2014
0000              5   ;--------------------------------------------------------
                  5   $name core
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _PRESETS
0000             27            public _NSTAGES
0000             28            public _ANGLEBUFFER
0000             29            public _DISTANCEBUFFER
0000             30            public _TURNSPEED
0000             31            public _MOVESPEED
0000             32            public _main
0000             33            public __c51_external_startup
0000             34            public _pwmCounter
0000             35            public _beaconSignal
0000             36            public _Stage
0000             37            public _instruction
0000             38            public _distanceRight
0000             39            public _distanceLeft
0000             40            public _rightSensor
0000             41            public _leftSensor
0000             42            public _tether
0000             43            public _direction
0000             44            public _pwmRight
0000             45            public _pwmLeft
0000             46            public _pwmCount
0000             47            public _getDistance
0000             48            public _turnCar
0000             49            public _moveCar
0000             50            public _uTurn
0000             51            public _wait2ms
0000             52            public _wait1s
0000             53            public _voltage
0000             54            public _SPIWrite
0000             55            public _GetADC
0000             56   ;--------------------------------------------------------
0000             57   ; Special Function Registers
0000             58   ;--------------------------------------------------------
0000             59   _ACC            DATA 0xe0
0000             60   _B              DATA 0xf0
0000             61   _PSW            DATA 0xd0
0000             62   _SP             DATA 0x81
0000             63   _SPX            DATA 0xef
0000             64   _DPL            DATA 0x82
0000             65   _DPH            DATA 0x83
0000             66   _DPLB           DATA 0xd4
0000             67   _DPHB           DATA 0xd5
0000             68   _PAGE           DATA 0xf6
0000             69   _AX             DATA 0xe1
0000             70   _BX             DATA 0xf7
0000             71   _DSPR           DATA 0xe2
0000             72   _FIRD           DATA 0xe3
0000             73   _MACL           DATA 0xe4
0000             74   _MACH           DATA 0xe5
0000             75   _PCON           DATA 0x87
0000             76   _AUXR           DATA 0x8e
0000             77   _AUXR1          DATA 0xa2
0000             78   _DPCF           DATA 0xa1
0000             79   _CKRL           DATA 0x97
0000             80   _CKCKON0        DATA 0x8f
0000             81   _CKCKON1        DATA 0xaf
0000             82   _CKSEL          DATA 0x85
0000             83   _CLKREG         DATA 0xae
0000             84   _OSCCON         DATA 0x85
0000             85   _IE             DATA 0xa8
0000             86   _IEN0           DATA 0xa8
0000             87   _IEN1           DATA 0xb1
0000             88   _IPH0           DATA 0xb7
0000             89   _IP             DATA 0xb8
0000             90   _IPL0           DATA 0xb8
0000             91   _IPH1           DATA 0xb3
0000             92   _IPL1           DATA 0xb2
0000             93   _P0             DATA 0x80
0000             94   _P1             DATA 0x90
0000             95   _P2             DATA 0xa0
0000             96   _P3             DATA 0xb0
0000             97   _P4             DATA 0xc0
0000             98   _P0M0           DATA 0xe6
0000             99   _P0M1           DATA 0xe7
0000            100   _P1M0           DATA 0xd6
0000            101   _P1M1           DATA 0xd7
0000            102   _P2M0           DATA 0xce
0000            103   _P2M1           DATA 0xcf
0000            104   _P3M0           DATA 0xc6
0000            105   _P3M1           DATA 0xc7
0000            106   _P4M0           DATA 0xbe
0000            107   _P4M1           DATA 0xbf
0000            108   _SCON           DATA 0x98
0000            109   _SBUF           DATA 0x99
0000            110   _SADEN          DATA 0xb9
0000            111   _SADDR          DATA 0xa9
0000            112   _BDRCON         DATA 0x9b
0000            113   _BRL            DATA 0x9a
0000            114   _TCON           DATA 0x88
0000            115   _TMOD           DATA 0x89
0000            116   _TCONB          DATA 0x91
0000            117   _TL0            DATA 0x8a
0000            118   _TH0            DATA 0x8c
0000            119   _TL1            DATA 0x8b
0000            120   _TH1            DATA 0x8d
0000            121   _RL0            DATA 0xf2
0000            122   _RH0            DATA 0xf3
0000            123   _RTL1           DATA 0xf4
0000            124   _RH1            DATA 0xf5
0000            125   _WDTRST         DATA 0xa6
0000            126   _WDTPRG         DATA 0xa7
0000            127   _T2CON          DATA 0xc8
0000            128   _T2MOD          DATA 0xc9
0000            129   _RCAP2H         DATA 0xcb
0000            130   _RCAP2L         DATA 0xca
0000            131   _TH2            DATA 0xcd
0000            132   _TL2            DATA 0xcc
0000            133   _SPCON          DATA 0xc3
0000            134   _SPSTA          DATA 0xc4
0000            135   _SPDAT          DATA 0xc5
0000            136   _SSCON          DATA 0x93
0000            137   _SSCS           DATA 0x94
0000            138   _SSDAT          DATA 0x95
0000            139   _SSADR          DATA 0x96
0000            140   _KBLS           DATA 0x9c
0000            141   _KBE            DATA 0x9d
0000            142   _KBF            DATA 0x9e
0000            143   _KBMOD          DATA 0x9f
0000            144   _BMSEL          DATA 0x92
0000            145   _FCON           DATA 0xd2
0000            146   _EECON          DATA 0xd2
0000            147   _ACSRA          DATA 0xa3
0000            148   _ACSRB          DATA 0xab
0000            149   _AREF           DATA 0xbd
0000            150   _DADC           DATA 0xa4
0000            151   _DADI           DATA 0xa5
0000            152   _DADL           DATA 0xac
0000            153   _DADH           DATA 0xad
0000            154   _CCON           DATA 0xd8
0000            155   _CMOD           DATA 0xd9
0000            156   _CL             DATA 0xe9
0000            157   _CH             DATA 0xf9
0000            158   _CCAPM0         DATA 0xda
0000            159   _CCAPM1         DATA 0xdb
0000            160   _CCAPM2         DATA 0xdc
0000            161   _CCAPM3         DATA 0xdd
0000            162   _CCAPM4         DATA 0xde
0000            163   _CCAP0H         DATA 0xfa
0000            164   _CCAP1H         DATA 0xfb
0000            165   _CCAP2H         DATA 0xfc
0000            166   _CCAP3H         DATA 0xfd
0000            167   _CCAP4H         DATA 0xfe
0000            168   _CCAP0L         DATA 0xea
0000            169   _CCAP1L         DATA 0xeb
0000            170   _CCAP2L         DATA 0xec
0000            171   _CCAP3L         DATA 0xed
0000            172   _CCAP4L         DATA 0xee
0000            173   ;--------------------------------------------------------
0000            174   ; special function bits
0000            175   ;--------------------------------------------------------
0000            176   _ACC_0          BIT 0xe0
0000            177   _ACC_1          BIT 0xe1
0000            178   _ACC_2          BIT 0xe2
0000            179   _ACC_3          BIT 0xe3
0000            180   _ACC_4          BIT 0xe4
0000            181   _ACC_5          BIT 0xe5
0000            182   _ACC_6          BIT 0xe6
0000            183   _ACC_7          BIT 0xe7
0000            184   _B_0            BIT 0xf0
0000            185   _B_1            BIT 0xf1
0000            186   _B_2            BIT 0xf2
0000            187   _B_3            BIT 0xf3
0000            188   _B_4            BIT 0xf4
0000            189   _B_5            BIT 0xf5
0000            190   _B_6            BIT 0xf6
0000            191   _B_7            BIT 0xf7
0000            192   _P              BIT 0xd0
0000            193   _F1             BIT 0xd1
0000            194   _OV             BIT 0xd2
0000            195   _RS0            BIT 0xd3
0000            196   _RS1            BIT 0xd4
0000            197   _F0             BIT 0xd5
0000            198   _AC             BIT 0xd6
0000            199   _CY             BIT 0xd7
0000            200   _EX0            BIT 0xa8
0000            201   _ET0            BIT 0xa9
0000            202   _EX1            BIT 0xaa
0000            203   _ET1            BIT 0xab
0000            204   _ES             BIT 0xac
0000            205   _ET2            BIT 0xad
0000            206   _EC             BIT 0xae
0000            207   _EA             BIT 0xaf
0000            208   _PX0            BIT 0xb8
0000            209   _PT0            BIT 0xb9
0000            210   _PX1            BIT 0xba
0000            211   _PT1            BIT 0xbb
0000            212   _PS             BIT 0xbc
0000            213   _PT2            BIT 0xbd
0000            214   _IP0D           BIT 0xbf
0000            215   _PPCL           BIT 0xbe
0000            216   _PT2L           BIT 0xbd
0000            217   _PLS            BIT 0xbc
0000            218   _PT1L           BIT 0xbb
0000            219   _PX1L           BIT 0xba
0000            220   _PT0L           BIT 0xb9
0000            221   _PX0L           BIT 0xb8
0000            222   _P0_0           BIT 0x80
0000            223   _P0_1           BIT 0x81
0000            224   _P0_2           BIT 0x82
0000            225   _P0_3           BIT 0x83
0000            226   _P0_4           BIT 0x84
0000            227   _P0_5           BIT 0x85
0000            228   _P0_6           BIT 0x86
0000            229   _P0_7           BIT 0x87
0000            230   _P1_0           BIT 0x90
0000            231   _P1_1           BIT 0x91
0000            232   _P1_2           BIT 0x92
0000            233   _P1_3           BIT 0x93
0000            234   _P1_4           BIT 0x94
0000            235   _P1_5           BIT 0x95
0000            236   _P1_6           BIT 0x96
0000            237   _P1_7           BIT 0x97
0000            238   _P2_0           BIT 0xa0
0000            239   _P2_1           BIT 0xa1
0000            240   _P2_2           BIT 0xa2
0000            241   _P2_3           BIT 0xa3
0000            242   _P2_4           BIT 0xa4
0000            243   _P2_5           BIT 0xa5
0000            244   _P2_6           BIT 0xa6
0000            245   _P2_7           BIT 0xa7
0000            246   _P3_0           BIT 0xb0
0000            247   _P3_1           BIT 0xb1
0000            248   _P3_2           BIT 0xb2
0000            249   _P3_3           BIT 0xb3
0000            250   _P3_4           BIT 0xb4
0000            251   _P3_5           BIT 0xb5
0000            252   _P3_6           BIT 0xb6
0000            253   _P3_7           BIT 0xb7
0000            254   _RXD            BIT 0xb0
0000            255   _TXD            BIT 0xb1
0000            256   _INT0           BIT 0xb2
0000            257   _INT1           BIT 0xb3
0000            258   _T0             BIT 0xb4
0000            259   _T1             BIT 0xb5
0000            260   _WR             BIT 0xb6
0000            261   _RD             BIT 0xb7
0000            262   _P4_0           BIT 0xc0
0000            263   _P4_1           BIT 0xc1
0000            264   _P4_2           BIT 0xc2
0000            265   _P4_3           BIT 0xc3
0000            266   _P4_4           BIT 0xc4
0000            267   _P4_5           BIT 0xc5
0000            268   _P4_6           BIT 0xc6
0000            269   _P4_7           BIT 0xc7
0000            270   _RI             BIT 0x98
0000            271   _TI             BIT 0x99
0000            272   _RB8            BIT 0x9a
0000            273   _TB8            BIT 0x9b
0000            274   _REN            BIT 0x9c
0000            275   _SM2            BIT 0x9d
0000            276   _SM1            BIT 0x9e
0000            277   _SM0            BIT 0x9f
0000            278   _IT0            BIT 0x88
0000            279   _IE0            BIT 0x89
0000            280   _IT1            BIT 0x8a
0000            281   _IE1            BIT 0x8b
0000            282   _TR0            BIT 0x8c
0000            283   _TF0            BIT 0x8d
0000            284   _TR1            BIT 0x8e
0000            285   _TF1            BIT 0x8f
0000            286   _CP_RL2         BIT 0xc8
0000            287   _C_T2           BIT 0xc9
0000            288   _TR2            BIT 0xca
0000            289   _EXEN2          BIT 0xcb
0000            290   _TCLK           BIT 0xcc
0000            291   _RCLK           BIT 0xcd
0000            292   _EXF2           BIT 0xce
0000            293   _TF2            BIT 0xcf
0000            294   _CF             BIT 0xdf
0000            295   _CR             BIT 0xde
0000            296   _CCF4           BIT 0xdc
0000            297   _CCF3           BIT 0xdb
0000            298   _CCF2           BIT 0xda
0000            299   _CCF1           BIT 0xd9
0000            300   _CCF0           BIT 0xd8
0000            301   ;--------------------------------------------------------
0000            302   ; overlayable register banks
0000            303   ;--------------------------------------------------------
0000            304            rbank0 segment data overlay
0000            305   ;--------------------------------------------------------
0000            306   ; internal ram data
0000            307   ;--------------------------------------------------------
0000            308            rseg R_DSEG
0000            309   _pwmCount:
0000            310            ds 2
0002            311   _pwmLeft:
0002            312            ds 2
0004            313   _pwmRight:
0004            314            ds 2
0006            315   _direction:
0006            316            ds 2
0008            317   _tether:
0008            318            ds 2
000A            319   _leftSensor:
000A            320            ds 2
000C            321   _rightSensor:
000C            322            ds 2
000E            323   _distanceLeft:
000E            324            ds 2
0010            325   _distanceRight:
0010            326            ds 2
0012            327   _instruction:
0012            328            ds 2
0014            329   _Stage:
0014            330            ds 2
0016            331   ;--------------------------------------------------------
0016            332   ; overlayable items in internal ram 
0016            333   ;--------------------------------------------------------
0000            334            rseg    R_OSEG
0000            335   ;--------------------------------------------------------
0000            336   ; indirectly addressable internal ram data
0000            337   ;--------------------------------------------------------
0000            338            rseg R_ISEG
0000            339   ;--------------------------------------------------------
0000            340   ; absolute internal ram data
0000            341   ;--------------------------------------------------------
0000            342            DSEG
0000            343   ;--------------------------------------------------------
0000            344   ; bit data
0000            345   ;--------------------------------------------------------
0000            346            rseg R_BSEG
0000            347   _pwmCounter_sloc0_1_0:
0000            348            DBIT    1
0001            349   ;--------------------------------------------------------
0001            350   ; paged external ram data
0001            351   ;--------------------------------------------------------
0000            352            rseg R_PSEG
0000            353   ;--------------------------------------------------------
0000            354   ; external ram data
0000            355   ;--------------------------------------------------------
0000            356            rseg R_XSEG
0000            357   ;--------------------------------------------------------
0000            358   ; absolute external ram data
0000            359   ;--------------------------------------------------------
0000            360            XSEG
0000            361   ;--------------------------------------------------------
0000            362   ; external initialized ram data
0000            363   ;--------------------------------------------------------
0000            364            rseg R_IXSEG
0000            365            rseg R_HOME
0000            366            rseg R_GSINIT
0000            367            rseg R_CSEG
0000            368   ;--------------------------------------------------------
0000            369   ; Reset entry point and interrupt vectors
0000            370   ;--------------------------------------------------------
0000            371            CSEG at 0x0000
0000 020100     372            ljmp    _crt0
0003            373            CSEG at 0x0003
0003 020100     374            ljmp    _beaconSignal
000B            375            CSEG at 0x000b
000B 020100     376            ljmp    _pwmCounter
000E            377   ;--------------------------------------------------------
000E            378   ; global & static initialisations
000E            379   ;--------------------------------------------------------
0000            380            rseg R_HOME
0000            381            rseg R_GSINIT
0000            382            rseg R_GSINIT
0000            383   ;--------------------------------------------------------
0000            384   ; data variables initialization
0000            385   ;--------------------------------------------------------
0000            386            rseg R_DINIT
0000            387   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:81: volatile unsigned int pwmCount = 0;
0000 E4         388            clr     a
0001 F5B0       389            mov     _pwmCount,a
0003 F5B1       390            mov     (_pwmCount + 1),a
0005            391   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:86: volatile unsigned int leftSensor = 0;
0005 E4         392            clr     a
0006 F570       393            mov     _leftSensor,a
0008 F571       394            mov     (_leftSensor + 1),a
000A            395   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:87: volatile unsigned int rightSensor = 0;
000A E4         396            clr     a
000B F530       397            mov     _rightSensor,a
000D F531       398            mov     (_rightSensor + 1),a
000F            399            ; The linker places a 'ret' at the end of segment R_DINIT.
000F            400   ;--------------------------------------------------------
000F            401   ; code
000F            402   ;--------------------------------------------------------
0000            403            rseg R_CSEG
0000            404   ;------------------------------------------------------------
0000            405   ;Allocation info for local variables in function 'beaconSignal'
0000            406   ;------------------------------------------------------------
0000            407   ;------------------------------------------------------------
0000            408   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:113: void beaconSignal() interrupt 0
0000            409   ;        -----------------------------------------
0000            410   ;         function beaconSignal
0000            411   ;        -----------------------------------------
0000            412   _beaconSignal:
0000            413            using   0
0000            414   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:120: }
0000 32         415            reti
0001            416   ;        eliminated unneeded push/pop psw
0001            417   ;        eliminated unneeded push/pop dpl
0001            418   ;        eliminated unneeded push/pop dph
0001            419   ;        eliminated unneeded push/pop b
0001            420   ;        eliminated unneeded push/pop acc
0001            421   ;------------------------------------------------------------
0001            422   ;Allocation info for local variables in function 'pwmCounter'
0001            423   ;------------------------------------------------------------
0001            424   ;------------------------------------------------------------
0001            425   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:122: void pwmCounter() interrupt 1
0001            426   ;        -----------------------------------------
0001            427   ;         function pwmCounter
0001            428   ;        -----------------------------------------
0001            429   _pwmCounter:
0001 C0E0       430            push    acc
0003 C0F0       431            push    b
0005 C002       432            push    ar2
0007 C003       433            push    ar3
0009 C0D0       434            push    psw
000B 75D000     435            mov     psw,#0x00
000E            436   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:127: if(++pwmCount > 99)
000E 7401       437            mov     a,#0x01
0010 25B0       438            add     a,_pwmCount
0012 F5B0       439            mov     _pwmCount,a
0014 E4         440            clr     a
0015 35B1       441            addc    a,(_pwmCount + 1)
0017 F5B1       442            mov     (_pwmCount + 1),a
0019 C3         443            clr     c
001A 7463       444            mov     a,#0x63
001C 95B0       445            subb    a,_pwmCount
001E E4         446            clr     a
001F 95B1       447            subb    a,(_pwmCount + 1)
0021 5001       448            jnc     L003002?
0023            449   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:128: pwmCount = 0;
0023 E4         450            clr     a
0024 F5B0       451            mov     _pwmCount,a
0026 F5B1       452            mov     (_pwmCount + 1),a
0028            453   L003002?:
0028            454   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:130: if(pwmLeft > 0)
0028 C3         455            clr     c
0029 E4         456            clr     a
002A 9570       457            subb    a,_pwmLeft
002C E4         458            clr     a
002D 6480       459            xrl     a,#0x80
002F 8571F0     460            mov     b,(_pwmLeft + 1)
0032 63F080     461            xrl     b,#0x80
0035 95F0       462            subb    a,b
0037 5001       463            jnc     L003004?
0039            464   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:132: P1_1 = (pwmLeft > pwmCount) ? 0:1;
0039 AA70       465            mov     r2,_pwmLeft
003B AB71       466            mov     r3,(_pwmLeft + 1)
003D C3         467            clr     c
003E E5B0       468            mov     a,_pwmCount
0040 9A         469            subb    a,r2
0041 E5B1       470            mov     a,(_pwmCount + 1)
0043 9B         471            subb    a,r3
0044 9240       472            mov  _pwmCounter_sloc0_1_0,c
0046 B3         473            cpl     c
0047 9291       474            mov     _P1_1,c
0049            475   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:133: P1_0 = 1;
0049 D290       476            setb    _P1_0
004B            477   L003004?:
004B            478   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:135: if(pwmLeft < 0)
004B E571       479            mov     a,(_pwmLeft + 1)
004D 30E700     480            jnb     acc.7,L003006?
0050            481   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:137: P1_0 = ((-1) * pwmLeft > pwmCount) ? 0:1;
0050 C3         482            clr     c
0051 E4         483            clr     a
0052 9570       484            subb    a,_pwmLeft
0054 FA         485            mov     r2,a
0055 E4         486            clr     a
0056 9571       487            subb    a,(_pwmLeft + 1)
0058 FB         488            mov     r3,a
0059 C3         489            clr     c
005A E5B0       490            mov     a,_pwmCount
005C 9A         491            subb    a,r2
005D E5B1       492            mov     a,(_pwmCount + 1)
005F 9B         493            subb    a,r3
0060 9240       494            mov  _pwmCounter_sloc0_1_0,c
0062 B3         495            cpl     c
0063 9290       496            mov     _P1_0,c
0065            497   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:138: P1_1 = 1;
0065 D291       498            setb    _P1_1
0067            499   L003006?:
0067            500   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:142: if(pwmRight > 0)
0067 C3         501            clr     c
0068 E4         502            clr     a
0069 9530       503            subb    a,_pwmRight
006B E4         504            clr     a
006C 6480       505            xrl     a,#0x80
006E 8531F0     506            mov     b,(_pwmRight + 1)
0071 63F080     507            xrl     b,#0x80
0074 95F0       508            subb    a,b
0076 5001       509            jnc     L003008?
0078            510   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:144: P1_4 = (pwmRight > pwmCount) ? 0:1;
0078 AA30       511            mov     r2,_pwmRight
007A AB31       512            mov     r3,(_pwmRight + 1)
007C C3         513            clr     c
007D E5B0       514            mov     a,_pwmCount
007F 9A         515            subb    a,r2
0080 E5B1       516            mov     a,(_pwmCount + 1)
0082 9B         517            subb    a,r3
0083 9240       518            mov  _pwmCounter_sloc0_1_0,c
0085 B3         519            cpl     c
0086 9294       520            mov     _P1_4,c
0088            521   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:145: P1_3 = 1;
0088 D293       522            setb    _P1_3
008A            523   L003008?:
008A            524   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:147: if(pwmRight < 0)
008A E531       525            mov     a,(_pwmRight + 1)
008C 30E780     526            jnb     acc.7,L003011?
008F            527   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:149: P1_3 = ((-1) * pwmRight > pwmCount) ? 0:1;
008F C3         528            clr     c
0090 E4         529            clr     a
0091 9530       530            subb    a,_pwmRight
0093 FA         531            mov     r2,a
0094 E4         532            clr     a
0095 9531       533            subb    a,(_pwmRight + 1)
0097 FB         534            mov     r3,a
0098 C3         535            clr     c
0099 E5B0       536            mov     a,_pwmCount
009B 9A         537            subb    a,r2
009C E5B1       538            mov     a,(_pwmCount + 1)
009E 9B         539            subb    a,r3
009F 9240       540            mov  _pwmCounter_sloc0_1_0,c
00A1 B3         541            cpl     c
00A2 9293       542            mov     _P1_3,c
00A4            543   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:150: P1_4 = 1;
00A4 D294       544            setb    _P1_4
00A6            545   L003011?:
00A6 D0D0       546            pop     psw
00A8 D003       547            pop     ar3
00AA D002       548            pop     ar2
00AC D0F0       549            pop     b
00AE D0E0       550            pop     acc
00B0 32         551            reti
00B1            552   ;        eliminated unneeded push/pop dpl
00B1            553   ;        eliminated unneeded push/pop dph
00B1            554   ;------------------------------------------------------------
00B1            555   ;Allocation info for local variables in function '_c51_external_startup'
00B1            556   ;------------------------------------------------------------
00B1            557   ;------------------------------------------------------------
00B1            558   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:156: unsigned char _c51_external_startup(void)
00B1            559   ;        -----------------------------------------
00B1            560   ;         function _c51_external_startup
00B1            561   ;        -----------------------------------------
00B1            562   __c51_external_startup:
00B1            563   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:159: P0M0 = 0;         P0M1 = 0;
00B1 75E600     564            mov     _P0M0,#0x00
00B4 75E700     565            mov     _P0M1,#0x00
00B7            566   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:160: P1M0 = 0;         P1M1 = 0;
00B7 75D600     567            mov     _P1M0,#0x00
00BA 75D700     568            mov     _P1M1,#0x00
00BD            569   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:161: P2M0 = 0;         P2M1 = 0;
00BD 75CE00     570            mov     _P2M0,#0x00
00C0 75CF00     571            mov     _P2M1,#0x00
00C3            572   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:162: P3M0 = 0;         P3M1 = 0;
00C3 75C600     573            mov     _P3M0,#0x00
00C6 75C700     574            mov     _P3M1,#0x00
00C9            575   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:163: AUXR = 0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
00C9 758E11     576            mov     _AUXR,#0x11
00CC            577   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:164: P4M0 = 0;         P4M1 = 0;
00CC 75BE00     578            mov     _P4M0,#0x00
00CF 75BF00     579            mov     _P4M1,#0x00
00D2            580   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:168: PCON |= 0x80;
00D2 438780     581            orl     _PCON,#0x80
00D5            582   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:169: SCON = 0x52;
00D5 759852     583            mov     _SCON,#0x52
00D8            584   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:170: BDRCON = 0;
00D8 759B00     585            mov     _BDRCON,#0x00
00DB            586   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:171: BRL = BRG_VAL;
00DB 759AFA     587            mov     _BRL,#0xFA
00DE            588   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:172: BDRCON = BRR | TBCK | RBCK | SPD;
00DE 759B1E     589            mov     _BDRCON,#0x1E
00E1            590   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:174: TMOD = 0x01;      // Timer 0 as 16-bit timer      
00E1 758901     591            mov     _TMOD,#0x01
00E4            592   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:175: TH0 = RH0 = TIMER0_RELOAD_VALUE / 0x100;
00E4 75F3FF     593            mov     _RH0,#0xFF
00E7 758CFF     594            mov     _TH0,#0xFF
00EA            595   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:176: TL0 = RL0 = TIMER0_RELOAD_VALUE % 0x100;
00EA 75F248     596            mov     _RL0,#0x48
00ED 758A48     597            mov     _TL0,#0x48
00F0            598   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:177: TR0 = 1;
00F0 D28C       599            setb    _TR0
00F2            600   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:178: ET0 = 1;  // Enable timer 0 interrupt
00F2 D2A9       601            setb    _ET0
00F4            602   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:179: EX0 = 1;  // Enable external interrupt 0
00F4 D2A8       603            setb    _EX0
00F6            604   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:180: IT0 = 1;
00F6 D288       605            setb    _IT0
00F8            606   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:181: EA = 1;   // Enable global interrupts
00F8 D2AF       607            setb    _EA
00FA            608   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:182: tether=0;
00FA E4         609            clr     a
00FB F5B0       610            mov     _tether,a
00FD F5B1       611            mov     (_tether + 1),a
00FF            612   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:183: direction=1;
00FF 75F001     613            mov     _direction,#0x01
0102 E4         614            clr     a
0103 F5F1       615            mov     (_direction + 1),a
0105            616   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:184: P2_2=1;
0105 D2A2       617            setb    _P2_2
0107            618   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:185: P2_1=1;
0107 D2A1       619            setb    _P2_1
0109            620   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:186: P2_0=1;
0109 D2A0       621            setb    _P2_0
010B            622   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:187: return 0;
010B 758200     623            mov     dpl,#0x00
010E 22         624            ret
010F            625   ;------------------------------------------------------------
010F            626   ;Allocation info for local variables in function 'main'
010F            627   ;------------------------------------------------------------
010F            628   ;i                         Allocated to registers r2 r3 
010F            629   ;------------------------------------------------------------
010F            630   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:191: int main (void)
010F            631   ;        -----------------------------------------
010F            632   ;         function main
010F            633   ;        -----------------------------------------
010F            634   _main:
010F            635   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:193: distanceLeft=15;
010F 75F00F     636            mov     _distanceLeft,#0x0F
0112 E4         637            clr     a
0113 F5F1       638            mov     (_distanceLeft + 1),a
0115            639   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:194: distanceRight=15;         
0115 75B00F     640            mov     _distanceRight,#0x0F
0118 E4         641            clr     a
0119 F5B1       642            mov     (_distanceRight + 1),a
011B            643   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:195: Stage=2;
011B 753002     644            mov     _Stage,#0x02
011E E4         645            clr     a
011F F531       646            mov     (_Stage + 1),a
0121            647   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:196: pwmLeft=0;
0121            648   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:197: pwmRight=0;
0121 E4         649            clr     a
0122 F570       650            mov     _pwmLeft,a
0124 F571       651            mov     (_pwmLeft + 1),a
0126 F530       652            mov     _pwmRight,a
0128 F531       653            mov     (_pwmRight + 1),a
012A            654   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:198: while (1)
012A            655   L005030?:
012A            656   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:200: instruction = 0;
012A E4         657            clr     a
012B F570       658            mov     _instruction,a
012D F571       659            mov     (_instruction + 1),a
012F            660   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:202: while (instruction == 0)
012F            661   L005001?:
012F E570       662            mov     a,_instruction
0131 4571       663            orl     a,(_instruction + 1)
0133 7001       664            jnz     L005003?
0135            665   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:205: if(distanceLeft != distanceRight)
0135 E5B0       666            mov     a,_distanceRight
0137 E5B1       667            mov     a,(_distanceRight + 1)
0139 E5F0       668            mov     a,_distanceLeft
013B E5F1       669            mov     a,(_distanceLeft + 1)
013D            670   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:210: P2_2=1;
013D D2A2       671            setb    _P2_2
013F            672   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:211: P2_1=1;
013F D2A1       673            setb    _P2_1
0141            674   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:212: P2_0=0;
0141 C2A0       675            clr     _P2_0
0143            676   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:213: printf("\nIntstruction: ");
0143 74C0       677            mov     a,#__str_0
0145 C0E0       678            push    acc
0147 7484       679            mov     a,#(__str_0 >> 8)
0149 C0E0       680            push    acc
014B 7480       681            mov     a,#0x80
014D C0E0       682            push    acc
014F 120100     683            lcall   _printf
0152 1581       684            dec     sp
0154 1581       685            dec     sp
0156 1581       686            dec     sp
0158            687   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:214: scanf("%ud", &instruction);
0158 7470       688            mov     a,#_instruction
015A C0E0       689            push    acc
015C 7440       690            mov     a,#(_instruction >> 8)
015E C0E0       691            push    acc
0160 7440       692            mov     a,#0x40
0162 C0E0       693            push    acc
0164 7480       694            mov     a,#__str_1
0166 C0E0       695            push    acc
0168 7485       696            mov     a,#(__str_1 >> 8)
016A C0E0       697            push    acc
016C 7480       698            mov     a,#0x80
016E C0E0       699            push    acc
0170 120100     700            lcall   _scanf
0173 E581       701            mov     a,sp
0175 24FA       702            add     a,#0xfa
0177 F581       703            mov     sp,a
0179 8001       704            sjmp    L005001?
017B            705   L005003?:
017B            706   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:217: if(instruction==1)                        //move forward
017B 7401       707            mov     a,#0x01
017D B57000     708            cjne    a,_instruction,L005055?
0180 E4         709            clr     a
0181 B57100     710            cjne    a,(_instruction + 1),L005055?
0184 8001       711            sjmp    L005056?
0186            712   L005055?:
0186 8001       713            sjmp    L005027?
0188            714   L005056?:
0188            715   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:219: if(Stage!=0)
0188 E530       716            mov     a,_Stage
018A 4531       717            orl     a,(_Stage + 1)
018C 6001       718            jz      L005005?
018E            719   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:220: Stage--;
018E 1530       720            dec     _Stage
0190 74FF       721            mov     a,#0xff
0192 B53000     722            cjne    a,_Stage,L005058?
0195 1531       723            dec     (_Stage + 1)
0197            724   L005058?:
0197            725   L005005?:
0197            726   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:221: printf("\nMove forwrds");
0197 7440       727            mov     a,#__str_2
0199 C0E0       728            push    acc
019B 7487       729            mov     a,#(__str_2 >> 8)
019D C0E0       730            push    acc
019F 7480       731            mov     a,#0x80
01A1 C0E0       732            push    acc
01A3 120100     733            lcall   _printf
01A6 1581       734            dec     sp
01A8 1581       735            dec     sp
01AA 1581       736            dec     sp
01AC 020100     737            ljmp    L005030?
01AF            738   L005027?:
01AF            739   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:222: }else if(instruction==2)                  //move backwards
01AF 7402       740            mov     a,#0x02
01B1 B57080     741            cjne    a,_instruction,L005059?
01B4 E4         742            clr     a
01B5 B57180     743            cjne    a,(_instruction + 1),L005059?
01B8 8001       744            sjmp    L005060?
01BA            745   L005059?:
01BA 8001       746            sjmp    L005024?
01BC            747   L005060?:
01BC            748   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:224: if(Stage!=NSTAGES)
01BC 9012F0     749            mov     dptr,#_NSTAGES
01BF E4         750            clr     a
01C0 93         751            movc    a,@a+dptr
01C1 FA         752            mov     r2,a
01C2 7401       753            mov     a,#0x01
01C4 93         754            movc    a,@a+dptr
01C5 FB         755            mov     r3,a
01C6 EA         756            mov     a,r2
01C7 B53040     757            cjne    a,_Stage,L005061?
01CA EB         758            mov     a,r3
01CB B53140     759            cjne    a,(_Stage + 1),L005061?
01CE 8001       760            sjmp    L005007?
01D0            761   L005061?:
01D0            762   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:225: Stage++;
01D0 7401       763            mov     a,#0x01
01D2 2530       764            add     a,_Stage
01D4 F530       765            mov     _Stage,a
01D6 E4         766            clr     a
01D7 3531       767            addc    a,(_Stage + 1)
01D9 F531       768            mov     (_Stage + 1),a
01DB            769   L005007?:
01DB            770   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:226: printf("\n Move back");   
01DB 74C0       771            mov     a,#__str_3
01DD C0E0       772            push    acc
01DF 7488       773            mov     a,#(__str_3 >> 8)
01E1 C0E0       774            push    acc
01E3 7480       775            mov     a,#0x80
01E5 C0E0       776            push    acc
01E7 120100     777            lcall   _printf
01EA 1581       778            dec     sp
01EC 1581       779            dec     sp
01EE 1581       780            dec     sp
01F0 020100     781            ljmp    L005030?
01F3            782   L005024?:
01F3            783   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:227: }else if(instruction==3)                  //uturn
01F3 7403       784            mov     a,#0x03
01F5 B57000     785            cjne    a,_instruction,L005062?
01F8 E4         786            clr     a
01F9 B57100     787            cjne    a,(_instruction + 1),L005062?
01FC 8001       788            sjmp    L005063?
01FE            789   L005062?:
01FE 8001       790            sjmp    L005021?
0200            791   L005063?:
0200            792   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:229: uTurn();
0200 120100     793            lcall   _uTurn
0203            794   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:230: printf("\nturned");
0203 74C0       795            mov     a,#__str_4
0205 C0E0       796            push    acc
0207 7489       797            mov     a,#(__str_4 >> 8)
0209 C0E0       798            push    acc
020B 7480       799            mov     a,#0x80
020D C0E0       800            push    acc
020F 120100     801            lcall   _printf
0212 1581       802            dec     sp
0214 1581       803            dec     sp
0216 1581       804            dec     sp
0218 020100     805            ljmp    L005030?
021B            806   L005021?:
021B            807   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:231: }else if(instruction==4)                  //parralell park
021B 7404       808            mov     a,#0x04
021D B57000     809            cjne    a,_instruction,L005064?
0220 E4         810            clr     a
0221 B57100     811            cjne    a,(_instruction + 1),L005064?
0224 020100     812            ljmp    L005030?
0227            813   L005064?:
0227            814   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:234: }else if(instruction==5)
0227 7405       815            mov     a,#0x05
0229 B57040     816            cjne    a,_instruction,L005065?
022C E4         817            clr     a
022D B57140     818            cjne    a,(_instruction + 1),L005065?
0230 8001       819            sjmp    L005066?
0232            820   L005065?:
0232 020100     821            ljmp    L005015?
0235            822   L005066?:
0235            823   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:238: instruction=0;
0235 E4         824            clr     a
0236 F570       825            mov     _instruction,a
0238 F571       826            mov     (_instruction + 1),a
023A            827   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:239: while(instruction!=5);
023A            828   L005008?:
023A 7405       829            mov     a,#0x05
023C B57040     830            cjne    a,_instruction,L005067?
023F E4         831            clr     a
0240 B57140     832            cjne    a,(_instruction + 1),L005067?
0243 8001       833            sjmp    L005068?
0245            834   L005067?:
0245 8001       835            sjmp    L005008?
0247            836   L005068?:
0247            837   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:241: for(i=0;i<NSTAGES;i++)
0247 7A00       838            mov     r2,#0x00
0249 7B00       839            mov     r3,#0x00
024B            840   L005032?:
024B 9012F0     841            mov     dptr,#_NSTAGES
024E E4         842            clr     a
024F 93         843            movc    a,@a+dptr
0250 FC         844            mov     r4,a
0251 7401       845            mov     a,#0x01
0253 93         846            movc    a,@a+dptr
0254 FD         847            mov     r5,a
0255 C3         848            clr     c
0256 EA         849            mov     a,r2
0257 9C         850            subb    a,r4
0258 EB         851            mov     a,r3
0259 6480       852            xrl     a,#0x80
025B 8DF0       853            mov     b,r5
025D 63F080     854            xrl     b,#0x80
0260 95F0       855            subb    a,b
0262 4001       856            jc      L005069?
0264 020100     857            ljmp    L005030?
0267            858   L005069?:
0267            859   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:243: if(distanceLeft>PRESETS[i]-3 && distanceLeft<PRESETS[i]+3)
0267 8A04       860            mov     ar4,r2
0269 EB         861            mov     a,r3
026A CC         862            xch     a,r4
026B 25E0       863            add     a,acc
026D CC         864            xch     a,r4
026E 33         865            rlc     a
026F FD         866            mov     r5,a
0270 EC         867            mov     a,r4
0271 24B0       868            add     a,#_PRESETS
0273 F582       869            mov     dpl,a
0275 ED         870            mov     a,r5
0276 3412       871            addc    a,#(_PRESETS >> 8)
0278 F583       872            mov     dph,a
027A E4         873            clr     a
027B 93         874            movc    a,@a+dptr
027C FC         875            mov     r4,a
027D A3         876            inc     dptr
027E E4         877            clr     a
027F 93         878            movc    a,@a+dptr
0280 FD         879            mov     r5,a
0281 EC         880            mov     a,r4
0282 24FD       881            add     a,#0xfd
0284 FE         882            mov     r6,a
0285 ED         883            mov     a,r5
0286 34FF       884            addc    a,#0xff
0288 FF         885            mov     r7,a
0289 A8F0       886            mov     r0,_distanceLeft
028B A9F1       887            mov     r1,(_distanceLeft + 1)
028D C3         888            clr     c
028E EE         889            mov     a,r6
028F 98         890            subb    a,r0
0290 EF         891            mov     a,r7
0291 99         892            subb    a,r1
0292 5001       893            jnc     L005034?
0294 7403       894            mov     a,#0x03
0296 2C         895            add     a,r4
0297 FC         896            mov     r4,a
0298 E4         897            clr     a
0299 3D         898            addc    a,r5
029A FD         899            mov     r5,a
029B AEF0       900            mov     r6,_distanceLeft
029D AFF1       901            mov     r7,(_distanceLeft + 1)
029F C3         902            clr     c
02A0 EE         903            mov     a,r6
02A1 9C         904            subb    a,r4
02A2 EF         905            mov     a,r7
02A3 9D         906            subb    a,r5
02A4 5001       907            jnc     L005034?
02A6            908   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:244: Stage=i;
02A6 8A30       909            mov     _Stage,r2
02A8 8B31       910            mov     (_Stage + 1),r3
02AA            911   L005034?:
02AA            912   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:241: for(i=0;i<NSTAGES;i++)
02AA 0A         913            inc     r2
02AB BA00C0     914            cjne    r2,#0x00,L005032?
02AE 0B         915            inc     r3
02AF 8001       916            sjmp    L005032?
02B1            917   L005015?:
02B1            918   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:249: printf("\nERROR");
02B1 74C0       919            mov     a,#__str_5
02B3 C0E0       920            push    acc
02B5 748C       921            mov     a,#(__str_5 >> 8)
02B7 C0E0       922            push    acc
02B9 7480       923            mov     a,#0x80
02BB C0E0       924            push    acc
02BD 120100     925            lcall   _printf
02C0 1581       926            dec     sp
02C2 1581       927            dec     sp
02C4 1581       928            dec     sp
02C6            929   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:250: P2_2=0;
02C6 C2A2       930            clr     _P2_2
02C8            931   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:251: P2_1=1;
02C8 D2A1       932            setb    _P2_1
02CA            933   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:252: P2_0=1;
02CA D2A0       934            setb    _P2_0
02CC            935   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:255: return 0;
02CC 020100     936            ljmp    L005030?
02CF            937   ;------------------------------------------------------------
02CF            938   ;Allocation info for local variables in function 'getDistance'
02CF            939   ;------------------------------------------------------------
02CF            940   ;------------------------------------------------------------
02CF            941   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:266: void getDistance() 
02CF            942   ;        -----------------------------------------
02CF            943   ;         function getDistance
02CF            944   ;        -----------------------------------------
02CF            945   _getDistance:
02CF            946   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:270: }
02CF 22         947            ret
02D0            948   ;------------------------------------------------------------
02D0            949   ;Allocation info for local variables in function 'turnCar'
02D0            950   ;------------------------------------------------------------
02D0            951   ;------------------------------------------------------------
02D0            952   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:277: void turnCar()
02D0            953   ;        -----------------------------------------
02D0            954   ;         function turnCar
02D0            955   ;        -----------------------------------------
02D0            956   _turnCar:
02D0            957   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:279: P2_2=1;
02D0 D2A2       958            setb    _P2_2
02D2            959   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:280: P2_1=0;
02D2 C2A1       960            clr     _P2_1
02D4            961   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:281: P2_0=1;
02D4 D2A0       962            setb    _P2_0
02D6            963   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:283: while(distanceLeft < distanceRight+ANGLEBUFFER)
02D6            964   L007001?:
02D6 901330     965            mov     dptr,#_ANGLEBUFFER
02D9 E4         966            clr     a
02DA 93         967            movc    a,@a+dptr
02DB FA         968            mov     r2,a
02DC 7401       969            mov     a,#0x01
02DE 93         970            movc    a,@a+dptr
02DF FB         971            mov     r3,a
02E0 EA         972            mov     a,r2
02E1 25B0       973            add     a,_distanceRight
02E3 FC         974            mov     r4,a
02E4 EB         975            mov     a,r3
02E5 35B1       976            addc    a,(_distanceRight + 1)
02E7 FD         977            mov     r5,a
02E8 C3         978            clr     c
02E9 E5F0       979            mov     a,_distanceLeft
02EB 9C         980            subb    a,r4
02EC E5F1       981            mov     a,(_distanceLeft + 1)
02EE 6480       982            xrl     a,#0x80
02F0 8DF0       983            mov     b,r5
02F2 63F080     984            xrl     b,#0x80
02F5 95F0       985            subb    a,b
02F7 5001       986            jnc     L007004?
02F9            987   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:285: pwmLeft = TURNSPEED;
02F9 9013B0     988            mov     dptr,#_TURNSPEED
02FC E4         989            clr     a
02FD 93         990            movc    a,@a+dptr
02FE FC         991            mov     r4,a
02FF 7401       992            mov     a,#0x01
0301 93         993            movc    a,@a+dptr
0302 FD         994            mov     r5,a
0303 8C70       995            mov     _pwmLeft,r4
0305 8D71       996            mov     (_pwmLeft + 1),r5
0307            997   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:286: pwmRight = (-TURNSPEED);
0307 C3         998            clr     c
0308 E4         999            clr     a
0309 9C        1000            subb    a,r4
030A F530      1001            mov     _pwmRight,a
030C E4        1002            clr     a
030D 9D        1003            subb    a,r5
030E F531      1004            mov     (_pwmRight + 1),a
0310           1005   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:288: while(distanceLeft+ANGLEBUFFER > distanceRight)
0310 8001      1006            sjmp    L007001?
0312           1007   L007004?:
0312 EA        1008            mov     a,r2
0313 25F0      1009            add     a,_distanceLeft
0315 FC        1010            mov     r4,a
0316 EB        1011            mov     a,r3
0317 35F1      1012            addc    a,(_distanceLeft + 1)
0319 FD        1013            mov     r5,a
031A C3        1014            clr     c
031B E5B0      1015            mov     a,_distanceRight
031D 9C        1016            subb    a,r4
031E E5B1      1017            mov     a,(_distanceRight + 1)
0320 6480      1018            xrl     a,#0x80
0322 8DF0      1019            mov     b,r5
0324 63F080    1020            xrl     b,#0x80
0327 95F0      1021            subb    a,b
0329 5001      1022            jnc     L007006?
032B           1023   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:290: pwmLeft = (-TURNSPEED);
032B 9013B0    1024            mov     dptr,#_TURNSPEED
032E E4        1025            clr     a
032F 93        1026            movc    a,@a+dptr
0330 FC        1027            mov     r4,a
0331 7401      1028            mov     a,#0x01
0333 93        1029            movc    a,@a+dptr
0334 FD        1030            mov     r5,a
0335 C3        1031            clr     c
0336 E4        1032            clr     a
0337 9C        1033            subb    a,r4
0338 F570      1034            mov     _pwmLeft,a
033A E4        1035            clr     a
033B 9D        1036            subb    a,r5
033C F571      1037            mov     (_pwmLeft + 1),a
033E           1038   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:291: pwmRight = TURNSPEED;
033E 8C30      1039            mov     _pwmRight,r4
0340 8D31      1040            mov     (_pwmRight + 1),r5
0342 8001      1041            sjmp    L007004?
0344           1042   L007006?:
0344           1043   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:293: pwmLeft=pwmRight=0;
0344 E4        1044            clr     a
0345 F530      1045            mov     _pwmRight,a
0347 F531      1046            mov     (_pwmRight + 1),a
0349 F570      1047            mov     _pwmLeft,a
034B F571      1048            mov     (_pwmLeft + 1),a
034D           1049   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:294: return;
034D 22        1050            ret
034E           1051   ;------------------------------------------------------------
034E           1052   ;Allocation info for local variables in function 'moveCar'
034E           1053   ;------------------------------------------------------------
034E           1054   ;------------------------------------------------------------
034E           1055   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:302: void moveCar()
034E           1056   ;        -----------------------------------------
034E           1057   ;         function moveCar
034E           1058   ;        -----------------------------------------
034E           1059   _moveCar:
034E           1060   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:305: while (distanceRight+DISTANCEBUFFER > PRESETS[Stage] && distanceLeft==distanceRight)
034E           1061   L008002?:
034E 901370    1062            mov     dptr,#_DISTANCEBUFFER
0351 E4        1063            clr     a
0352 93        1064            movc    a,@a+dptr
0353 FA        1065            mov     r2,a
0354 7401      1066            mov     a,#0x01
0356 93        1067            movc    a,@a+dptr
0357 FB        1068            mov     r3,a
0358 EA        1069            mov     a,r2
0359 25B0      1070            add     a,_distanceRight
035B FC        1071            mov     r4,a
035C EB        1072            mov     a,r3
035D 35B1      1073            addc    a,(_distanceRight + 1)
035F FD        1074            mov     r5,a
0360 E530      1075            mov     a,_Stage
0362 25E0      1076            add     a,acc
0364 FE        1077            mov     r6,a
0365 E531      1078            mov     a,(_Stage + 1)
0367 33        1079            rlc     a
0368 FF        1080            mov     r7,a
0369 EE        1081            mov     a,r6
036A 24B0      1082            add     a,#_PRESETS
036C F582      1083            mov     dpl,a
036E EF        1084            mov     a,r7
036F 3412      1085            addc    a,#(_PRESETS >> 8)
0371 F583      1086            mov     dph,a
0373 E4        1087            clr     a
0374 93        1088            movc    a,@a+dptr
0375 FE        1089            mov     r6,a
0376 A3        1090            inc     dptr
0377 E4        1091            clr     a
0378 93        1092            movc    a,@a+dptr
0379 FF        1093            mov     r7,a
037A C3        1094            clr     c
037B EE        1095            mov     a,r6
037C 9C        1096            subb    a,r4
037D EF        1097            mov     a,r7
037E 9D        1098            subb    a,r5
037F 5001      1099            jnc     L008006?
0381 E5B0      1100            mov     a,_distanceRight
0383 B5F000    1101            cjne    a,_distanceLeft,L008006?
0386 E5B1      1102            mov     a,(_distanceRight + 1)
0388 B5F100    1103            cjne    a,(_distanceLeft + 1),L008006?
038B           1104   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:307: P2_2=1;
038B D2A2      1105            setb    _P2_2
038D           1106   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:308: P2_1=0;
038D C2A1      1107            clr     _P2_1
038F           1108   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:309: P2_0=1;
038F D2A0      1109            setb    _P2_0
0391           1110   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:310: pwmLeft = MOVESPEED;
0391 9013F0    1111            mov     dptr,#_MOVESPEED
0394 E4        1112            clr     a
0395 93        1113            movc    a,@a+dptr
0396 FC        1114            mov     r4,a
0397 7401      1115            mov     a,#0x01
0399 93        1116            movc    a,@a+dptr
039A FD        1117            mov     r5,a
039B 8C70      1118            mov     _pwmLeft,r4
039D 8D71      1119            mov     (_pwmLeft + 1),r5
039F           1120   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:311: pwmRight = MOVESPEED;
039F 8C30      1121            mov     _pwmRight,r4
03A1 8D31      1122            mov     (_pwmRight + 1),r5
03A3           1123   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:314: while(distanceRight < PRESETS[Stage]+DISTANCEBUFFER && distanceLeft==distanceRight)
03A3 8001      1124            sjmp    L008002?
03A5           1125   L008006?:
03A5 E530      1126            mov     a,_Stage
03A7 25E0      1127            add     a,acc
03A9 FC        1128            mov     r4,a
03AA E531      1129            mov     a,(_Stage + 1)
03AC 33        1130            rlc     a
03AD FD        1131            mov     r5,a
03AE EC        1132            mov     a,r4
03AF 24B0      1133            add     a,#_PRESETS
03B1 F582      1134            mov     dpl,a
03B3 ED        1135            mov     a,r5
03B4 3412      1136            addc    a,#(_PRESETS >> 8)
03B6 F583      1137            mov     dph,a
03B8 E4        1138            clr     a
03B9 93        1139            movc    a,@a+dptr
03BA FC        1140            mov     r4,a
03BB A3        1141            inc     dptr
03BC E4        1142            clr     a
03BD 93        1143            movc    a,@a+dptr
03BE FD        1144            mov     r5,a
03BF EA        1145            mov     a,r2
03C0 2C        1146            add     a,r4
03C1 FC        1147            mov     r4,a
03C2 EB        1148            mov     a,r3
03C3 3D        1149            addc    a,r5
03C4 FD        1150            mov     r5,a
03C5 AEB0      1151            mov     r6,_distanceRight
03C7 AFB1      1152            mov     r7,(_distanceRight + 1)
03C9 C3        1153            clr     c
03CA EE        1154            mov     a,r6
03CB 9C        1155            subb    a,r4
03CC EF        1156            mov     a,r7
03CD 9D        1157            subb    a,r5
03CE 5001      1158            jnc     L008008?
03D0 E5B0      1159            mov     a,_distanceRight
03D2 B5F040    1160            cjne    a,_distanceLeft,L008008?
03D5 E5B1      1161            mov     a,(_distanceRight + 1)
03D7 B5F140    1162            cjne    a,(_distanceLeft + 1),L008008?
03DA           1163   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:316: pwmLeft = (-MOVESPEED); 
03DA 9013F0    1164            mov     dptr,#_MOVESPEED
03DD E4        1165            clr     a
03DE 93        1166            movc    a,@a+dptr
03DF FC        1167            mov     r4,a
03E0 7401      1168            mov     a,#0x01
03E2 93        1169            movc    a,@a+dptr
03E3 FD        1170            mov     r5,a
03E4 C3        1171            clr     c
03E5 E4        1172            clr     a
03E6 9C        1173            subb    a,r4
03E7 FC        1174            mov     r4,a
03E8 E4        1175            clr     a
03E9 9D        1176            subb    a,r5
03EA FD        1177            mov     r5,a
03EB 8C70      1178            mov     _pwmLeft,r4
03ED 8D71      1179            mov     (_pwmLeft + 1),r5
03EF           1180   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:317: pwmRight = (-MOVESPEED);          
03EF 8C30      1181            mov     _pwmRight,r4
03F1 8D31      1182            mov     (_pwmRight + 1),r5
03F3           1183   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:318: P2_2=1;
03F3 D2A2      1184            setb    _P2_2
03F5           1185   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:319: P2_1=0;
03F5 C2A1      1186            clr     _P2_1
03F7           1187   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:320: P2_0=1;
03F7 D2A0      1188            setb    _P2_0
03F9 8001      1189            sjmp    L008006?
03FB           1190   L008008?:
03FB           1191   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:323: pwmLeft=pwmRight=0;
03FB E4        1192            clr     a
03FC F530      1193            mov     _pwmRight,a
03FE F531      1194            mov     (_pwmRight + 1),a
0400 F570      1195            mov     _pwmLeft,a
0402 F571      1196            mov     (_pwmLeft + 1),a
0404           1197   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:324: return;
0404 22        1198            ret
0405           1199   ;------------------------------------------------------------
0405           1200   ;Allocation info for local variables in function 'uTurn'
0405           1201   ;------------------------------------------------------------
0405           1202   ;------------------------------------------------------------
0405           1203   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:327: void uTurn()
0405           1204   ;        -----------------------------------------
0405           1205   ;         function uTurn
0405           1206   ;        -----------------------------------------
0405           1207   _uTurn:
0405           1208   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:329: P2_2=1;
0405 D2A2      1209            setb    _P2_2
0407           1210   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:330: P2_1=0;
0407 C2A1      1211            clr     _P2_1
0409           1212   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:331: P2_0=1;
0409 D2A0      1213            setb    _P2_0
040B           1214   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:332: pwmLeft=TURNSPEED;
040B 9013B0    1215            mov     dptr,#_TURNSPEED
040E E4        1216            clr     a
040F 93        1217            movc    a,@a+dptr
0410 FA        1218            mov     r2,a
0411 7401      1219            mov     a,#0x01
0413 93        1220            movc    a,@a+dptr
0414 FB        1221            mov     r3,a
0415 8A70      1222            mov     _pwmLeft,r2
0417 8B71      1223            mov     (_pwmLeft + 1),r3
0419           1224   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:333: pwmRight=(-TURNSPEED);
0419 C3        1225            clr     c
041A E4        1226            clr     a
041B 9A        1227            subb    a,r2
041C F530      1228            mov     _pwmRight,a
041E E4        1229            clr     a
041F 9B        1230            subb    a,r3
0420 F531      1231            mov     (_pwmRight + 1),a
0422           1232   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:334: wait1s();
0422 120100    1233            lcall   _wait1s
0425           1234   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:335: pwmLeft=0;
0425           1235   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:336: pwmRight=0;
0425 E4        1236            clr     a
0426 F570      1237            mov     _pwmLeft,a
0428 F571      1238            mov     (_pwmLeft + 1),a
042A F530      1239            mov     _pwmRight,a
042C F531      1240            mov     (_pwmRight + 1),a
042E           1241   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:337: return;
042E 22        1242            ret
042F           1243   ;------------------------------------------------------------
042F           1244   ;Allocation info for local variables in function 'wait2ms'
042F           1245   ;------------------------------------------------------------
042F           1246   ;------------------------------------------------------------
042F           1247   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:341: void wait2ms (void)
042F           1248   ;        -----------------------------------------
042F           1249   ;         function wait2ms
042F           1250   ;        -----------------------------------------
042F           1251   _wait2ms:
042F           1252   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:351: _endasm;
042F           1253            
042F           1254     ;For a 22.1184MHz crystal one machine cycle
042F           1255     ;takes 12/22.1184MHz=0.5425347us
042F           1256             J3:
042F 7C0A      1257            mov R4, #10
0431           1258             J2:
0431 7BB8      1259            mov R3, #184
0433           1260             J1:
0433 DB00      1261            djnz R3, J1 ; 2 machine cycles-> 2*0.5425347us*184=200us
0435 DCC0      1262                 djnz R4, J2 ; 200us*250=0.05s
0437 22        1263                 ret
0438           1264                
0438 22        1265            ret
0439           1266   ;------------------------------------------------------------
0439           1267   ;Allocation info for local variables in function 'wait1s'
0439           1268   ;------------------------------------------------------------
0439           1269   ;------------------------------------------------------------
0439           1270   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:355: void wait1s (void)
0439           1271   ;        -----------------------------------------
0439           1272   ;         function wait1s
0439           1273   ;        -----------------------------------------
0439           1274   _wait1s:
0439           1275   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:367: _endasm;
0439           1276            
0439           1277     ;For a 22.1184MHz crystal one machine cycle
0439           1278     ;takes 12/22.1184MHz=0.5425347us
0439 7A5A      1279                 mov R2, #90
043B           1280             L3:
043B 79B4      1281            mov R1, #180
043D           1282             L2:
043D 78B4      1283            mov R0, #180
043F           1284             L1:
043F D8C0      1285            djnz R0, L1 ; 2 machine cycles-> 2*0.5425347us*184=200us
0441 D980      1286                 djnz R1, L2 ; 200us*250=0.05s
0443 DA40      1287                 djnz R2, L3 ; 0.05s*20=1s
0445 22        1288                 ret
0446           1289                
0446 22        1290            ret
0447           1291   ;------------------------------------------------------------
0447           1292   ;Allocation info for local variables in function 'voltage'
0447           1293   ;------------------------------------------------------------
0447           1294   ;channel                   Allocated to registers 
0447           1295   ;------------------------------------------------------------
0447           1296   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:375: float voltage (unsigned char channel)
0447           1297   ;        -----------------------------------------
0447           1298   ;         function voltage
0447           1299   ;        -----------------------------------------
0447           1300   _voltage:
0447           1301   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:377: return ((GetADC(channel) * 4.84) / 1023.0); // VCC=4.84V (measured)
0447 120100    1302            lcall   _GetADC
044A 120100    1303            lcall   ___uint2fs
044D AA82      1304            mov     r2,dpl
044F AB83      1305            mov     r3,dph
0451 ACF0      1306            mov     r4,b
0453 FD        1307            mov     r5,a
0454 C002      1308            push    ar2
0456 C003      1309            push    ar3
0458 C004      1310            push    ar4
045A C005      1311            push    ar5
045C 90E148    1312            mov     dptr,#0xE148
045F 75F09A    1313            mov     b,#0x9A
0462 7440      1314            mov     a,#0x40
0464 120100    1315            lcall   ___fsmul
0467 AA82      1316            mov     r2,dpl
0469 AB83      1317            mov     r3,dph
046B ACF0      1318            mov     r4,b
046D FD        1319            mov     r5,a
046E E581      1320            mov     a,sp
0470 24FC      1321            add     a,#0xfc
0472 F581      1322            mov     sp,a
0474 E4        1323            clr     a
0475 C0E0      1324            push    acc
0477 74C0      1325            mov     a,#0xC0
0479 C0E0      1326            push    acc
047B 747F      1327            mov     a,#0x7F
047D C0E0      1328            push    acc
047F 7444      1329            mov     a,#0x44
0481 C0E0      1330            push    acc
0483 8A82      1331            mov     dpl,r2
0485 8B83      1332            mov     dph,r3
0487 8CF0      1333            mov     b,r4
0489 ED        1334            mov     a,r5
048A 120100    1335            lcall   ___fsdiv
048D AA82      1336            mov     r2,dpl
048F AB83      1337            mov     r3,dph
0491 ACF0      1338            mov     r4,b
0493 FD        1339            mov     r5,a
0494 E581      1340            mov     a,sp
0496 24FC      1341            add     a,#0xfc
0498 F581      1342            mov     sp,a
049A 8A82      1343            mov     dpl,r2
049C 8B83      1344            mov     dph,r3
049E 8CF0      1345            mov     b,r4
04A0 ED        1346            mov     a,r5
04A1 22        1347            ret
04A2           1348   ;------------------------------------------------------------
04A2           1349   ;Allocation info for local variables in function 'SPIWrite'
04A2           1350   ;------------------------------------------------------------
04A2           1351   ;value                     Allocated to registers r2 
04A2           1352   ;------------------------------------------------------------
04A2           1353   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:380: void SPIWrite(unsigned char value)
04A2           1354   ;        -----------------------------------------
04A2           1355   ;         function SPIWrite
04A2           1356   ;        -----------------------------------------
04A2           1357   _SPIWrite:
04A2 AA82      1358            mov     r2,dpl
04A4           1359   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:382: SPSTA &= (~SPIF); // Clear the SPIF flag in SPSTA
04A4 53C47F    1360            anl     _SPSTA,#0x7F
04A7           1361   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:383: SPDAT = value;
04A7 8AC5      1362            mov     _SPDAT,r2
04A9           1363   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:384: while ((SPSTA & SPIF) != SPIF); //Wait for transmission to end
04A9           1364   L013001?:
04A9 7480      1365            mov     a,#0x80
04AB 55C4      1366            anl     a,_SPSTA
04AD FA        1367            mov     r2,a
04AE BA80C0    1368            cjne    r2,#0x80,L013001?
04B1 22        1369            ret
04B2           1370   ;------------------------------------------------------------
04B2           1371   ;Allocation info for local variables in function 'GetADC'
04B2           1372   ;------------------------------------------------------------
04B2           1373   ;channel                   Allocated to registers r2 
04B2           1374   ;adc                       Allocated to registers r2 r3 
04B2           1375   ;------------------------------------------------------------
04B2           1376   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:388: unsigned int GetADC(unsigned char channel)
04B2           1377   ;        -----------------------------------------
04B2           1378   ;         function GetADC
04B2           1379   ;        -----------------------------------------
04B2           1380   _GetADC:
04B2 AA82      1381            mov     r2,dpl
04B4           1382   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:393: SPCON &= (~SPEN); // Disable SPI
04B4 53C3BF    1383            anl     _SPCON,#0xBF
04B7           1384   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:394: SPCON = MSTR | CPOL | CPHA | SPR1 | SPR0 | SSDIS;
04B7 75C33F    1385            mov     _SPCON,#0x3F
04BA           1386   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:395: SPCON |= SPEN; // Enable SPI
04BA 43C340    1387            orl     _SPCON,#0x40
04BD           1388   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:397: P1_4 = 0; // Activate the MCP3004 ADC.
04BD C294      1389            clr     _P1_4
04BF           1390   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:398: SPIWrite(channel | 0x18);         // Send start bit, single/diff* bit, D2, D1, and D0 bits.
04BF 7418      1391            mov     a,#0x18
04C1 4A        1392            orl     a,r2
04C2 F582      1393            mov     dpl,a
04C4 120100    1394            lcall   _SPIWrite
04C7           1395   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:399: for (adc=0; adc < 10; adc++); // Wait for S/H to setup
04C7 7A0A      1396            mov     r2,#0x0A
04C9 7B00      1397            mov     r3,#0x00
04CB           1398   L014003?:
04CB 1A        1399            dec     r2
04CC BAFF40    1400            cjne    r2,#0xff,L014009?
04CF 1B        1401            dec     r3
04D0           1402   L014009?:
04D0 EA        1403            mov     a,r2
04D1 4B        1404            orl     a,r3
04D2 7001      1405            jnz     L014003?
04D4           1406   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:400: SPIWrite(0x55); // Read bits 9 down to 4
04D4 758255    1407            mov     dpl,#0x55
04D7 120100    1408            lcall   _SPIWrite
04DA           1409   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:401: adc=((SPDAT & 0x3f) * 0x100);
04DA 743F      1410            mov     a,#0x3F
04DC 55C5      1411            anl     a,_SPDAT
04DE FB        1412            mov     r3,a
04DF 7A00      1413            mov     r2,#0x00
04E1           1414   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:402: SPIWrite(0x55);// Read bits 3 down to 0
04E1 758255    1415            mov     dpl,#0x55
04E4 C002      1416            push    ar2
04E6 C003      1417            push    ar3
04E8 120100    1418            lcall   _SPIWrite
04EB D003      1419            pop     ar3
04ED D002      1420            pop     ar2
04EF           1421   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:403: P1_4 = 1; // Deactivate the MCP3004 ADC.
04EF D294      1422            setb    _P1_4
04F1           1423   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:404: adc += (SPDAT & 0xf0); // SPDR contains the low part of the result. 
04F1 74F0      1424            mov     a,#0xF0
04F3 55C5      1425            anl     a,_SPDAT
04F5 FC        1426            mov     r4,a
04F6 7D00      1427            mov     r5,#0x00
04F8 EC        1428            mov     a,r4
04F9 2A        1429            add     a,r2
04FA FA        1430            mov     r2,a
04FB ED        1431            mov     a,r5
04FC 3B        1432            addc    a,r3
04FD           1433   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:405: adc >>= 4;
04FD C4        1434            swap    a
04FE CA        1435            xch     a,r2
04FF C4        1436            swap    a
0500 540F      1437            anl     a,#0x0f
0502 6A        1438            xrl     a,r2
0503 CA        1439            xch     a,r2
0504 540F      1440            anl     a,#0x0f
0506 CA        1441            xch     a,r2
0507 6A        1442            xrl     a,r2
0508 CA        1443            xch     a,r2
0509           1444   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:407: return adc;
0509 8A82      1445            mov     dpl,r2
050B F583      1446            mov     dph,a
050D 22        1447            ret
050E           1448            rseg R_CSEG
050E           1449   
0000           1450            rseg R_XINIT
0000           1451   
0000           1452            rseg R_CONST
0000           1453   _MOVESPEED:
0000 5000      1454            db 0x50,0x00    ;  80
0002           1455   _TURNSPEED:
0002 5000      1456            db 0x50,0x00    ;  80
0004           1457   _DISTANCEBUFFER:
0004 0000      1458            db 0x00,0x00    ;  0
0006           1459   _ANGLEBUFFER:
0006 0000      1460            db 0x00,0x00    ;  0
0008           1461   _NSTAGES:
0008 0C00      1462            db 0x0C,0x00    ;  12
000A           1463   _PRESETS:
000A 0500      1464            db 0x05,0x00    ; 5
000C 0A00      1465            db 0x0A,0x00    ; 10
000E 0F00      1466            db 0x0F,0x00    ; 15
0010 1400      1467            db 0x14,0x00    ; 20
0012 1900      1468            db 0x19,0x00    ; 25
0014 1E00      1469            db 0x1E,0x00    ; 30
0016 2300      1470            db 0x23,0x00    ; 35
0018 2800      1471            db 0x28,0x00    ; 40
001A 2D00      1472            db 0x2D,0x00    ; 45
001C 3200      1473            db 0x32,0x00    ; 50
001E 3700      1474            db 0x37,0x00    ; 55
0020 3C00      1475            db 0x3C,0x00    ; 60
0022           1476   __str_0:
0022 0A        1477            db 0x0A
0023 496E7473  1478            db 'Intstruction: '
     74727563
     74696F6E
     3A20
0031 00        1479            db 0x00
0032           1480   __str_1:
0032 257564    1481            db '%ud'
0035 00        1482            db 0x00
0036           1483   __str_2:
0036 0A        1484            db 0x0A
0037 4D6F7665  1485            db 'Move forwrds'
     20666F72
     77726473
0043 00        1486            db 0x00
0044           1487   __str_3:
0044 0A        1488            db 0x0A
0045 204D6F76  1489            db ' Move back'
     65206261
     636B
004F 00        1490            db 0x00
0050           1491   __str_4:
0050 0A        1492            db 0x0A
0051 7475726E  1493            db 'turned'
     6564
0057 00        1494            db 0x00
0058           1495   __str_5:
0058 0A        1496            db 0x0A
0059 4552524F  1497            db 'ERROR'
     52
005E 00        1498            db 0x00
005F           1499   
000E           1500            CSEG
000E           1501   
000E           1502   end
