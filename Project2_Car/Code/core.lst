0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Mon Mar 17 16:24:42 2014
0000              5   ;--------------------------------------------------------
                  5   $name core
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public __c51_external_startup
0000             28            public _pwmCounter
0000             29            public _beaconSignal
0000             30            public _Stage
0000             31            public _instruction
0000             32            public _distanceRight
0000             33            public _distanceLeft
0000             34            public _rightSensor
0000             35            public _leftSensor
0000             36            public _pwmRight
0000             37            public _pwmLeft
0000             38            public _pwmCount
0000             39            public _getDistance
0000             40            public _turnCar
0000             41            public _moveCar
0000             42            public _wait2ms
0000             43            public _wait1s
0000             44            public _voltage
0000             45            public _SPIWrite
0000             46            public _GetADC
0000             47   ;--------------------------------------------------------
0000             48   ; Special Function Registers
0000             49   ;--------------------------------------------------------
0000             50   _ACC            DATA 0xe0
0000             51   _B              DATA 0xf0
0000             52   _PSW            DATA 0xd0
0000             53   _SP             DATA 0x81
0000             54   _SPX            DATA 0xef
0000             55   _DPL            DATA 0x82
0000             56   _DPH            DATA 0x83
0000             57   _DPLB           DATA 0xd4
0000             58   _DPHB           DATA 0xd5
0000             59   _PAGE           DATA 0xf6
0000             60   _AX             DATA 0xe1
0000             61   _BX             DATA 0xf7
0000             62   _DSPR           DATA 0xe2
0000             63   _FIRD           DATA 0xe3
0000             64   _MACL           DATA 0xe4
0000             65   _MACH           DATA 0xe5
0000             66   _PCON           DATA 0x87
0000             67   _AUXR           DATA 0x8e
0000             68   _AUXR1          DATA 0xa2
0000             69   _DPCF           DATA 0xa1
0000             70   _CKRL           DATA 0x97
0000             71   _CKCKON0        DATA 0x8f
0000             72   _CKCKON1        DATA 0xaf
0000             73   _CKSEL          DATA 0x85
0000             74   _CLKREG         DATA 0xae
0000             75   _OSCCON         DATA 0x85
0000             76   _IE             DATA 0xa8
0000             77   _IEN0           DATA 0xa8
0000             78   _IEN1           DATA 0xb1
0000             79   _IPH0           DATA 0xb7
0000             80   _IP             DATA 0xb8
0000             81   _IPL0           DATA 0xb8
0000             82   _IPH1           DATA 0xb3
0000             83   _IPL1           DATA 0xb2
0000             84   _P0             DATA 0x80
0000             85   _P1             DATA 0x90
0000             86   _P2             DATA 0xa0
0000             87   _P3             DATA 0xb0
0000             88   _P4             DATA 0xc0
0000             89   _P0M0           DATA 0xe6
0000             90   _P0M1           DATA 0xe7
0000             91   _P1M0           DATA 0xd6
0000             92   _P1M1           DATA 0xd7
0000             93   _P2M0           DATA 0xce
0000             94   _P2M1           DATA 0xcf
0000             95   _P3M0           DATA 0xc6
0000             96   _P3M1           DATA 0xc7
0000             97   _P4M0           DATA 0xbe
0000             98   _P4M1           DATA 0xbf
0000             99   _SCON           DATA 0x98
0000            100   _SBUF           DATA 0x99
0000            101   _SADEN          DATA 0xb9
0000            102   _SADDR          DATA 0xa9
0000            103   _BDRCON         DATA 0x9b
0000            104   _BRL            DATA 0x9a
0000            105   _TCON           DATA 0x88
0000            106   _TMOD           DATA 0x89
0000            107   _TCONB          DATA 0x91
0000            108   _TL0            DATA 0x8a
0000            109   _TH0            DATA 0x8c
0000            110   _TL1            DATA 0x8b
0000            111   _TH1            DATA 0x8d
0000            112   _RL0            DATA 0xf2
0000            113   _RH0            DATA 0xf3
0000            114   _RTL1           DATA 0xf4
0000            115   _RH1            DATA 0xf5
0000            116   _WDTRST         DATA 0xa6
0000            117   _WDTPRG         DATA 0xa7
0000            118   _T2CON          DATA 0xc8
0000            119   _T2MOD          DATA 0xc9
0000            120   _RCAP2H         DATA 0xcb
0000            121   _RCAP2L         DATA 0xca
0000            122   _TH2            DATA 0xcd
0000            123   _TL2            DATA 0xcc
0000            124   _SPCON          DATA 0xc3
0000            125   _SPSTA          DATA 0xc4
0000            126   _SPDAT          DATA 0xc5
0000            127   _SSCON          DATA 0x93
0000            128   _SSCS           DATA 0x94
0000            129   _SSDAT          DATA 0x95
0000            130   _SSADR          DATA 0x96
0000            131   _KBLS           DATA 0x9c
0000            132   _KBE            DATA 0x9d
0000            133   _KBF            DATA 0x9e
0000            134   _KBMOD          DATA 0x9f
0000            135   _BMSEL          DATA 0x92
0000            136   _FCON           DATA 0xd2
0000            137   _EECON          DATA 0xd2
0000            138   _ACSRA          DATA 0xa3
0000            139   _ACSRB          DATA 0xab
0000            140   _AREF           DATA 0xbd
0000            141   _DADC           DATA 0xa4
0000            142   _DADI           DATA 0xa5
0000            143   _DADL           DATA 0xac
0000            144   _DADH           DATA 0xad
0000            145   _CCON           DATA 0xd8
0000            146   _CMOD           DATA 0xd9
0000            147   _CL             DATA 0xe9
0000            148   _CH             DATA 0xf9
0000            149   _CCAPM0         DATA 0xda
0000            150   _CCAPM1         DATA 0xdb
0000            151   _CCAPM2         DATA 0xdc
0000            152   _CCAPM3         DATA 0xdd
0000            153   _CCAPM4         DATA 0xde
0000            154   _CCAP0H         DATA 0xfa
0000            155   _CCAP1H         DATA 0xfb
0000            156   _CCAP2H         DATA 0xfc
0000            157   _CCAP3H         DATA 0xfd
0000            158   _CCAP4H         DATA 0xfe
0000            159   _CCAP0L         DATA 0xea
0000            160   _CCAP1L         DATA 0xeb
0000            161   _CCAP2L         DATA 0xec
0000            162   _CCAP3L         DATA 0xed
0000            163   _CCAP4L         DATA 0xee
0000            164   ;--------------------------------------------------------
0000            165   ; special function bits
0000            166   ;--------------------------------------------------------
0000            167   _ACC_0          BIT 0xe0
0000            168   _ACC_1          BIT 0xe1
0000            169   _ACC_2          BIT 0xe2
0000            170   _ACC_3          BIT 0xe3
0000            171   _ACC_4          BIT 0xe4
0000            172   _ACC_5          BIT 0xe5
0000            173   _ACC_6          BIT 0xe6
0000            174   _ACC_7          BIT 0xe7
0000            175   _B_0            BIT 0xf0
0000            176   _B_1            BIT 0xf1
0000            177   _B_2            BIT 0xf2
0000            178   _B_3            BIT 0xf3
0000            179   _B_4            BIT 0xf4
0000            180   _B_5            BIT 0xf5
0000            181   _B_6            BIT 0xf6
0000            182   _B_7            BIT 0xf7
0000            183   _P              BIT 0xd0
0000            184   _F1             BIT 0xd1
0000            185   _OV             BIT 0xd2
0000            186   _RS0            BIT 0xd3
0000            187   _RS1            BIT 0xd4
0000            188   _F0             BIT 0xd5
0000            189   _AC             BIT 0xd6
0000            190   _CY             BIT 0xd7
0000            191   _EX0            BIT 0xa8
0000            192   _ET0            BIT 0xa9
0000            193   _EX1            BIT 0xaa
0000            194   _ET1            BIT 0xab
0000            195   _ES             BIT 0xac
0000            196   _ET2            BIT 0xad
0000            197   _EC             BIT 0xae
0000            198   _EA             BIT 0xaf
0000            199   _PX0            BIT 0xb8
0000            200   _PT0            BIT 0xb9
0000            201   _PX1            BIT 0xba
0000            202   _PT1            BIT 0xbb
0000            203   _PS             BIT 0xbc
0000            204   _PT2            BIT 0xbd
0000            205   _IP0D           BIT 0xbf
0000            206   _PPCL           BIT 0xbe
0000            207   _PT2L           BIT 0xbd
0000            208   _PLS            BIT 0xbc
0000            209   _PT1L           BIT 0xbb
0000            210   _PX1L           BIT 0xba
0000            211   _PT0L           BIT 0xb9
0000            212   _PX0L           BIT 0xb8
0000            213   _P0_0           BIT 0x80
0000            214   _P0_1           BIT 0x81
0000            215   _P0_2           BIT 0x82
0000            216   _P0_3           BIT 0x83
0000            217   _P0_4           BIT 0x84
0000            218   _P0_5           BIT 0x85
0000            219   _P0_6           BIT 0x86
0000            220   _P0_7           BIT 0x87
0000            221   _P1_0           BIT 0x90
0000            222   _P1_1           BIT 0x91
0000            223   _P1_2           BIT 0x92
0000            224   _P1_3           BIT 0x93
0000            225   _P1_4           BIT 0x94
0000            226   _P1_5           BIT 0x95
0000            227   _P1_6           BIT 0x96
0000            228   _P1_7           BIT 0x97
0000            229   _P2_0           BIT 0xa0
0000            230   _P2_1           BIT 0xa1
0000            231   _P2_2           BIT 0xa2
0000            232   _P2_3           BIT 0xa3
0000            233   _P2_4           BIT 0xa4
0000            234   _P2_5           BIT 0xa5
0000            235   _P2_6           BIT 0xa6
0000            236   _P2_7           BIT 0xa7
0000            237   _P3_0           BIT 0xb0
0000            238   _P3_1           BIT 0xb1
0000            239   _P3_2           BIT 0xb2
0000            240   _P3_3           BIT 0xb3
0000            241   _P3_4           BIT 0xb4
0000            242   _P3_5           BIT 0xb5
0000            243   _P3_6           BIT 0xb6
0000            244   _P3_7           BIT 0xb7
0000            245   _RXD            BIT 0xb0
0000            246   _TXD            BIT 0xb1
0000            247   _INT0           BIT 0xb2
0000            248   _INT1           BIT 0xb3
0000            249   _T0             BIT 0xb4
0000            250   _T1             BIT 0xb5
0000            251   _WR             BIT 0xb6
0000            252   _RD             BIT 0xb7
0000            253   _P4_0           BIT 0xc0
0000            254   _P4_1           BIT 0xc1
0000            255   _P4_2           BIT 0xc2
0000            256   _P4_3           BIT 0xc3
0000            257   _P4_4           BIT 0xc4
0000            258   _P4_5           BIT 0xc5
0000            259   _P4_6           BIT 0xc6
0000            260   _P4_7           BIT 0xc7
0000            261   _RI             BIT 0x98
0000            262   _TI             BIT 0x99
0000            263   _RB8            BIT 0x9a
0000            264   _TB8            BIT 0x9b
0000            265   _REN            BIT 0x9c
0000            266   _SM2            BIT 0x9d
0000            267   _SM1            BIT 0x9e
0000            268   _SM0            BIT 0x9f
0000            269   _IT0            BIT 0x88
0000            270   _IE0            BIT 0x89
0000            271   _IT1            BIT 0x8a
0000            272   _IE1            BIT 0x8b
0000            273   _TR0            BIT 0x8c
0000            274   _TF0            BIT 0x8d
0000            275   _TR1            BIT 0x8e
0000            276   _TF1            BIT 0x8f
0000            277   _CP_RL2         BIT 0xc8
0000            278   _C_T2           BIT 0xc9
0000            279   _TR2            BIT 0xca
0000            280   _EXEN2          BIT 0xcb
0000            281   _TCLK           BIT 0xcc
0000            282   _RCLK           BIT 0xcd
0000            283   _EXF2           BIT 0xce
0000            284   _TF2            BIT 0xcf
0000            285   _CF             BIT 0xdf
0000            286   _CR             BIT 0xde
0000            287   _CCF4           BIT 0xdc
0000            288   _CCF3           BIT 0xdb
0000            289   _CCF2           BIT 0xda
0000            290   _CCF1           BIT 0xd9
0000            291   _CCF0           BIT 0xd8
0000            292   ;--------------------------------------------------------
0000            293   ; overlayable register banks
0000            294   ;--------------------------------------------------------
0000            295            rbank0 segment data overlay
0000            296   ;--------------------------------------------------------
0000            297   ; overlayable bit register bank
0000            298   ;--------------------------------------------------------
0000            299            rseg BIT_BANK
0000            300   bits:
0000            301            ds 1
0001            302            b0 equ  bits.0 
0001            303            b1 equ  bits.1 
0001            304            b2 equ  bits.2 
0001            305            b3 equ  bits.3 
0001            306            b4 equ  bits.4 
0001            307            b5 equ  bits.5 
0001            308            b6 equ  bits.6 
0001            309            b7 equ  bits.7 
0001            310   ;--------------------------------------------------------
0001            311   ; internal ram data
0001            312   ;--------------------------------------------------------
0000            313            rseg R_DSEG
0000            314   _pwmCount:
0000            315            ds 2
0002            316   _pwmLeft:
0002            317            ds 2
0004            318   _pwmRight:
0004            319            ds 2
0006            320   _leftSensor:
0006            321            ds 2
0008            322   _rightSensor:
0008            323            ds 2
000A            324   _distanceLeft:
000A            325            ds 2
000C            326   _distanceRight:
000C            327            ds 2
000E            328   _instruction:
000E            329            ds 2
0010            330   _Stage:
0010            331            ds 2
0012            332   ;--------------------------------------------------------
0012            333   ; overlayable items in internal ram 
0012            334   ;--------------------------------------------------------
0000            335            rseg    R_OSEG
0000            336            rseg    R_OSEG
0000            337   ;--------------------------------------------------------
0000            338   ; indirectly addressable internal ram data
0000            339   ;--------------------------------------------------------
0000            340            rseg R_ISEG
0000            341   ;--------------------------------------------------------
0000            342   ; absolute internal ram data
0000            343   ;--------------------------------------------------------
0000            344            DSEG
0000            345   ;--------------------------------------------------------
0000            346   ; bit data
0000            347   ;--------------------------------------------------------
0000            348            rseg R_BSEG
0000            349   _pwmCounter_sloc0_1_0:
0000            350            DBIT    1
0001            351   ;--------------------------------------------------------
0001            352   ; paged external ram data
0001            353   ;--------------------------------------------------------
0000            354            rseg R_PSEG
0000            355   ;--------------------------------------------------------
0000            356   ; external ram data
0000            357   ;--------------------------------------------------------
0000            358            rseg R_XSEG
0000            359   ;--------------------------------------------------------
0000            360   ; absolute external ram data
0000            361   ;--------------------------------------------------------
0000            362            XSEG
0000            363   ;--------------------------------------------------------
0000            364   ; external initialized ram data
0000            365   ;--------------------------------------------------------
0000            366            rseg R_IXSEG
0000            367            rseg R_HOME
0000            368            rseg R_GSINIT
0000            369            rseg R_CSEG
0000            370   ;--------------------------------------------------------
0000            371   ; Reset entry point and interrupt vectors
0000            372   ;--------------------------------------------------------
0000            373            CSEG at 0x0000
0000 020100     374            ljmp    _crt0
0003            375            CSEG at 0x0003
0003 020100     376            ljmp    _beaconSignal
000B            377            CSEG at 0x000b
000B 020100     378            ljmp    _pwmCounter
000E            379   ;--------------------------------------------------------
000E            380   ; global & static initialisations
000E            381   ;--------------------------------------------------------
0000            382            rseg R_HOME
0000            383            rseg R_GSINIT
0000            384            rseg R_GSINIT
0000            385   ;--------------------------------------------------------
0000            386   ; data variables initialization
0000            387   ;--------------------------------------------------------
0000            388            rseg R_DINIT
0000            389   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:35: volatile unsigned int pwmCount = 0;
0000 E4         390            clr     a
0001 F5B0       391            mov     _pwmCount,a
0003 F5B1       392            mov     (_pwmCount + 1),a
0005            393   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:36: volatile int pwmLeft = 0;
0005 E4         394            clr     a
0006 F570       395            mov     _pwmLeft,a
0008 F571       396            mov     (_pwmLeft + 1),a
000A            397   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:37: volatile int pwmRight = 0;
000A E4         398            clr     a
000B F530       399            mov     _pwmRight,a
000D F531       400            mov     (_pwmRight + 1),a
000F            401   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:38: volatile unsigned int leftSensor = 0;
000F E4         402            clr     a
0010 F5F0       403            mov     _leftSensor,a
0012 F5F1       404            mov     (_leftSensor + 1),a
0014            405   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:39: volatile unsigned int rightSensor = 0;
0014 E4         406            clr     a
0015 F5C0       407            mov     _rightSensor,a
0017 F5C1       408            mov     (_rightSensor + 1),a
0019            409            ; The linker places a 'ret' at the end of segment R_DINIT.
0019            410   ;--------------------------------------------------------
0019            411   ; code
0019            412   ;--------------------------------------------------------
0000            413            rseg R_CSEG
0000            414   ;------------------------------------------------------------
0000            415   ;Allocation info for local variables in function 'beaconSignal'
0000            416   ;------------------------------------------------------------
0000            417   ;------------------------------------------------------------
0000            418   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:61: void beaconSignal() interrupt 0
0000            419   ;        -----------------------------------------
0000            420   ;         function beaconSignal
0000            421   ;        -----------------------------------------
0000            422   _beaconSignal:
0000            423            using   0
0000            424   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:67: }
0000 32         425            reti
0001            426   ;        eliminated unneeded push/pop psw
0001            427   ;        eliminated unneeded push/pop dpl
0001            428   ;        eliminated unneeded push/pop dph
0001            429   ;        eliminated unneeded push/pop b
0001            430   ;        eliminated unneeded push/pop acc
0001            431   ;------------------------------------------------------------
0001            432   ;Allocation info for local variables in function 'pwmCounter'
0001            433   ;------------------------------------------------------------
0001            434   ;------------------------------------------------------------
0001            435   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:69: void pwmCounter() interrupt 1
0001            436   ;        -----------------------------------------
0001            437   ;         function pwmCounter
0001            438   ;        -----------------------------------------
0001            439   _pwmCounter:
0001 C0F0       440            push    bits
0003 C0E0       441            push    acc
0005 C0F0       442            push    b
0007 C082       443            push    dpl
0009 C083       444            push    dph
000B C002       445            push    (0+2)
000D C003       446            push    (0+3)
000F C004       447            push    (0+4)
0011 C005       448            push    (0+5)
0013 C006       449            push    (0+6)
0015 C007       450            push    (0+7)
0017 C000       451            push    (0+0)
0019 C001       452            push    (0+1)
001B C0D0       453            push    psw
001D 75D000     454            mov     psw,#0x00
0020            455   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:72: if(++pwmCount>99)
0020 7401       456            mov     a,#0x01
0022 25B0       457            add     a,_pwmCount
0024 F5B0       458            mov     _pwmCount,a
0026 E4         459            clr     a
0027 35B1       460            addc    a,(_pwmCount + 1)
0029 F5B1       461            mov     (_pwmCount + 1),a
002B C3         462            clr     c
002C 7463       463            mov     a,#0x63
002E 95B0       464            subb    a,_pwmCount
0030 E4         465            clr     a
0031 95B1       466            subb    a,(_pwmCount + 1)
0033 5001       467            jnc     L003002?
0035            468   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:73: pwmCount = 0;
0035 E4         469            clr     a
0036 F5B0       470            mov     _pwmCount,a
0038 F5B1       471            mov     (_pwmCount + 1),a
003A            472   L003002?:
003A            473   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:77: getDistance();
003A 120100     474            lcall   _getDistance
003D            475   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:78: if(distanceLeft!=distanceRight)
003D E540       476            mov     a,_distanceRight
003F B58008     477            cjne    a,_distanceLeft,L003022?
0042 E541       478            mov     a,(_distanceRight + 1)
0044 B58108     479            cjne    a,(_distanceLeft + 1),L003022?
0047 8001       480            sjmp    L003004?
0049            481   L003022?:
0049            482   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:79: turnCar();
0049 120100     483            lcall   _turnCar
004C            484   L003004?:
004C            485   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:82: if(pwmLeft>0)
004C C3         486            clr     c
004D E4         487            clr     a
004E 9570       488            subb    a,_pwmLeft
0050 E4         489            clr     a
0051 6480       490            xrl     a,#0x80
0053 8571F0     491            mov     b,(_pwmLeft + 1)
0056 63F080     492            xrl     b,#0x80
0059 95F0       493            subb    a,b
005B 5001       494            jnc     L003006?
005D            495   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:84: P1_0=(pwmLeft>pwmCount)?0:1;
005D AA70       496            mov     r2,_pwmLeft
005F AB71       497            mov     r3,(_pwmLeft + 1)
0061 C3         498            clr     c
0062 E5B0       499            mov     a,_pwmCount
0064 9A         500            subb    a,r2
0065 E5B1       501            mov     a,(_pwmCount + 1)
0067 9B         502            subb    a,r3
0068 9208       503            mov  _pwmCounter_sloc0_1_0,c
006A B3         504            cpl     c
006B 9290       505            mov     _P1_0,c
006D            506   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:85: P1_1=1;
006D D291       507            setb    _P1_1
006F            508   L003006?:
006F            509   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:87: if(pwmLeft<0)
006F E571       510            mov     a,(_pwmLeft + 1)
0071 30E7C8     511            jnb     acc.7,L003008?
0074            512   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:89: P1_1=((-1)*pwmLeft>pwmCount)?0:1;
0074 C3         513            clr     c
0075 E4         514            clr     a
0076 9570       515            subb    a,_pwmLeft
0078 FA         516            mov     r2,a
0079 E4         517            clr     a
007A 9571       518            subb    a,(_pwmLeft + 1)
007C FB         519            mov     r3,a
007D C3         520            clr     c
007E E5B0       521            mov     a,_pwmCount
0080 9A         522            subb    a,r2
0081 E5B1       523            mov     a,(_pwmCount + 1)
0083 9B         524            subb    a,r3
0084 9208       525            mov  _pwmCounter_sloc0_1_0,c
0086 B3         526            cpl     c
0087 9291       527            mov     _P1_1,c
0089            528   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:90: P1_0=1;
0089 D290       529            setb    _P1_0
008B            530   L003008?:
008B            531   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:93: if(pwmRight>0)
008B C3         532            clr     c
008C E4         533            clr     a
008D 9530       534            subb    a,_pwmRight
008F E4         535            clr     a
0090 6480       536            xrl     a,#0x80
0092 8531F0     537            mov     b,(_pwmRight + 1)
0095 63F080     538            xrl     b,#0x80
0098 95F0       539            subb    a,b
009A 5001       540            jnc     L003010?
009C            541   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:95: P1_0=(pwmRight>pwmCount)?0:1;
009C AA30       542            mov     r2,_pwmRight
009E AB31       543            mov     r3,(_pwmRight + 1)
00A0 C3         544            clr     c
00A1 E5B0       545            mov     a,_pwmCount
00A3 9A         546            subb    a,r2
00A4 E5B1       547            mov     a,(_pwmCount + 1)
00A6 9B         548            subb    a,r3
00A7 9208       549            mov  _pwmCounter_sloc0_1_0,c
00A9 B3         550            cpl     c
00AA 9290       551            mov     _P1_0,c
00AC            552   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:96: P1_1=1;
00AC D291       553            setb    _P1_1
00AE            554   L003010?:
00AE            555   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:98: if(pwmRight<0)
00AE E531       556            mov     a,(_pwmRight + 1)
00B0 30E748     557            jnb     acc.7,L003013?
00B3            558   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:100: P1_1=((-1)*pwmRight>pwmCount)?0:1;
00B3 C3         559            clr     c
00B4 E4         560            clr     a
00B5 9530       561            subb    a,_pwmRight
00B7 FA         562            mov     r2,a
00B8 E4         563            clr     a
00B9 9531       564            subb    a,(_pwmRight + 1)
00BB FB         565            mov     r3,a
00BC C3         566            clr     c
00BD E5B0       567            mov     a,_pwmCount
00BF 9A         568            subb    a,r2
00C0 E5B1       569            mov     a,(_pwmCount + 1)
00C2 9B         570            subb    a,r3
00C3 9208       571            mov  _pwmCounter_sloc0_1_0,c
00C5 B3         572            cpl     c
00C6 9291       573            mov     _P1_1,c
00C8            574   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:101: P1_0=1;
00C8 D290       575            setb    _P1_0
00CA            576   L003013?:
00CA D0D0       577            pop     psw
00CC D001       578            pop     (0+1)
00CE D000       579            pop     (0+0)
00D0 D007       580            pop     (0+7)
00D2 D006       581            pop     (0+6)
00D4 D005       582            pop     (0+5)
00D6 D004       583            pop     (0+4)
00D8 D003       584            pop     (0+3)
00DA D002       585            pop     (0+2)
00DC D083       586            pop     dph
00DE D082       587            pop     dpl
00E0 D0F0       588            pop     b
00E2 D0E0       589            pop     acc
00E4 D0F0       590            pop     bits
00E6 32         591            reti
00E7            592   ;------------------------------------------------------------
00E7            593   ;Allocation info for local variables in function '_c51_external_startup'
00E7            594   ;------------------------------------------------------------
00E7            595   ;------------------------------------------------------------
00E7            596   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:109: unsigned char _c51_external_startup(void)
00E7            597   ;        -----------------------------------------
00E7            598   ;         function _c51_external_startup
00E7            599   ;        -----------------------------------------
00E7            600   __c51_external_startup:
00E7            601   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:112: P0M0 = 0;         P0M1 = 0;
00E7 75E600     602            mov     _P0M0,#0x00
00EA 75E700     603            mov     _P0M1,#0x00
00ED            604   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:113: P1M0 = 0;         P1M1 = 0;
00ED 75D600     605            mov     _P1M0,#0x00
00F0 75D700     606            mov     _P1M1,#0x00
00F3            607   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:114: P2M0 = 0;         P2M1 = 0;
00F3 75CE00     608            mov     _P2M0,#0x00
00F6 75CF00     609            mov     _P2M1,#0x00
00F9            610   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:115: P3M0 = 0;         P3M1 = 0;
00F9 75C600     611            mov     _P3M0,#0x00
00FC 75C700     612            mov     _P3M1,#0x00
00FF            613   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:116: AUXR = 0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
00FF 758E11     614            mov     _AUXR,#0x11
0102            615   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:117: P4M0 = 0;         P4M1 = 0;
0102 75BE00     616            mov     _P4M0,#0x00
0105 75BF00     617            mov     _P4M1,#0x00
0108            618   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:120: TMOD = 0x01;      // Timer 0 as 16-bit timer      
0108 758901     619            mov     _TMOD,#0x01
010B            620   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:121: TH0 = RH0 = TIMER0_RELOAD_VALUE / 0x100;
010B 75F3FF     621            mov     _RH0,#0xFF
010E 758CFF     622            mov     _TH0,#0xFF
0111            623   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:122: TL0 = RL0 = TIMER0_RELOAD_VALUE % 0x100;
0111 75F248     624            mov     _RL0,#0x48
0114 758A48     625            mov     _TL0,#0x48
0117            626   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:123: TR0 = 1;
0117 D28C       627            setb    _TR0
0119            628   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:124: ET0 = 1;  // Enable timer 0 interrupt
0119 D2A9       629            setb    _ET0
011B            630   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:125: EX0 = 1;  // Enable external interrupt 0
011B D2A8       631            setb    _EX0
011D            632   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:126: IT0 = 1;
011D D288       633            setb    _IT0
011F            634   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:127: EA = 1;   // Enable global interrupts
011F D2AF       635            setb    _EA
0121            636   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:128: instruction=0;
0121 E4         637            clr     a
0122 F500       638            mov     _instruction,a
0124 F501       639            mov     (_instruction + 1),a
0126            640   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:129: Stage=3;
0126 75C003     641            mov     _Stage,#0x03
0129 E4         642            clr     a
012A F5C1       643            mov     (_Stage + 1),a
012C            644   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:130: return 0;
012C 758200     645            mov     dpl,#0x00
012F 22         646            ret
0130            647   ;------------------------------------------------------------
0130            648   ;Allocation info for local variables in function 'main'
0130            649   ;------------------------------------------------------------
0130            650   ;------------------------------------------------------------
0130            651   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:134: int main (void)
0130            652   ;        -----------------------------------------
0130            653   ;         function main
0130            654   ;        -----------------------------------------
0130            655   _main:
0130            656   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:139: while (instruction==0)
0130            657   L005001?:
0130 E500       658            mov     a,_instruction
0132 4501       659            orl     a,(_instruction + 1)
0134 7001       660            jnz     L005003?
0136            661   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:141: moveCar();
0136 120100     662            lcall   _moveCar
0139 8001       663            sjmp    L005001?
013B            664   L005003?:
013B            665   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:144: switch (instruction)
013B C3         666            clr     c
013C 7405       667            mov     a,#0x05
013E 9500       668            subb    a,_instruction
0140 E4         669            clr     a
0141 9501       670            subb    a,(_instruction + 1)
0143 4001       671            jc      L005014?
0145 E500       672            mov     a,_instruction
0147 2500       673            add     a,_instruction
0149 2500       674            add     a,_instruction
014B 908648     675            mov     dptr,#L005027?
014E 73         676            jmp     @a+dptr
014F            677   L005027?:
014F 020100     678            ljmp    L005013?
0152 020100     679            ljmp    L005004?
0155 020100     680            ljmp    L005007?
0158 020100     681            ljmp    L005010?
015B 020100     682            ljmp    L005011?
015E 020100     683            ljmp    L005012?
0161            684   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:146: case 1: //Move Forward
0161            685   L005004?:
0161            686   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:147: if(Stage!=0)
0161 E5C0       687            mov     a,_Stage
0163 45C1       688            orl     a,(_Stage + 1)
0165 6001       689            jz      L005014?
0167            690   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:148: Stage--;
0167 15C0       691            dec     _Stage
0169 74FF       692            mov     a,#0xff
016B B5C008     693            cjne    a,_Stage,L005029?
016E 15C1       694            dec     (_Stage + 1)
0170            695   L005029?:
0170            696   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:149: break;
0170            697   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:150: case 2: //Move Backwards
0170 8001       698            sjmp    L005014?
0172            699   L005007?:
0172            700   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:151: if(Stage!=7)
0172 7407       701            mov     a,#0x07
0174 B5C048     702            cjne    a,_Stage,L005030?
0177 E4         703            clr     a
0178 B5C148     704            cjne    a,(_Stage + 1),L005030?
017B 8001       705            sjmp    L005014?
017D            706   L005030?:
017D            707   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:152: Stage++;  
017D 05C0       708            inc     _Stage
017F E4         709            clr     a
0180            710   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:153: break;
0180            711   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:154: case 3: //180 Turn
0180 B5C008     712            cjne    a,_Stage,L005014?
0183 05C1       713            inc     (_Stage + 1)
0185 8001       714            sjmp    L005014?
0187            715   L005010?:
0187            716   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:156: break;
0187            717   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:157: case 4: //Park
0187 8001       718            sjmp    L005014?
0189            719   L005011?:
0189            720   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:159: break;
0189            721   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:160: case 5:
0189 8001       722            sjmp    L005014?
018B            723   L005012?:
018B            724   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:162: break;
018B            725   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:163: default: //Turn on LED for bad instrucion         
018B            726   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:164: }
018B            727   L005013?:
018B            728   L005014?:
018B            729   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:165: instruction=0;
018B E4         730            clr     a
018C F500       731            mov     _instruction,a
018E F501       732            mov     (_instruction + 1),a
0190            733   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:167: return 0;
0190 8001       734            sjmp    L005001?
0192            735   ;------------------------------------------------------------
0192            736   ;Allocation info for local variables in function 'getDistance'
0192            737   ;------------------------------------------------------------
0192            738   ;------------------------------------------------------------
0192            739   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:178: void getDistance() 
0192            740   ;        -----------------------------------------
0192            741   ;         function getDistance
0192            742   ;        -----------------------------------------
0192            743   _getDistance:
0192            744   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:181: }
0192 22         745            ret
0193            746   ;------------------------------------------------------------
0193            747   ;Allocation info for local variables in function 'turnCar'
0193            748   ;------------------------------------------------------------
0193            749   ;tempL                     Allocated to registers r2 r3 
0193            750   ;tempR                     Allocated to registers r4 r5 
0193            751   ;------------------------------------------------------------
0193            752   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:188: void turnCar()
0193            753   ;        -----------------------------------------
0193            754   ;         function turnCar
0193            755   ;        -----------------------------------------
0193            756   _turnCar:
0193            757   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:191: int tempL=pwmLeft;
0193 AA70       758            mov     r2,_pwmLeft
0195 AB71       759            mov     r3,(_pwmLeft + 1)
0197            760   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:192: int tempR=pwmRight;
0197 AC30       761            mov     r4,_pwmRight
0199 AD31       762            mov     r5,(_pwmRight + 1)
019B            763   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:194: while(distanceLeft<distanceRight)
019B            764   L007001?:
019B C3         765            clr     c
019C E580       766            mov     a,_distanceLeft
019E 9540       767            subb    a,_distanceRight
01A0 E581       768            mov     a,(_distanceLeft + 1)
01A2 9541       769            subb    a,(_distanceRight + 1)
01A4 E4         770            clr     a
01A5 33         771            rlc     a
01A6 FE         772            mov     r6,a
01A7 6001       773            jz      L007004?
01A9            774   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:196: pwmLeft=50;
01A9 757032     775            mov     _pwmLeft,#0x32
01AC E4         776            clr     a
01AD F571       777            mov     (_pwmLeft + 1),a
01AF            778   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:197: pwmRight=(-50);
01AF 7530CE     779            mov     _pwmRight,#0xCE
01B2 7531FF     780            mov     (_pwmRight + 1),#0xFF
01B5            781   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:199: while(distanceLeft<distanceRight)
01B5 8001       782            sjmp    L007001?
01B7            783   L007004?:
01B7 EE         784            mov     a,r6
01B8 6001       785            jz      L007006?
01BA            786   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:201: pwmLeft=(-50);
01BA 7570CE     787            mov     _pwmLeft,#0xCE
01BD 7571FF     788            mov     (_pwmLeft + 1),#0xFF
01C0            789   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:202: pwmRight=50;
01C0 753032     790            mov     _pwmRight,#0x32
01C3 E4         791            clr     a
01C4 F531       792            mov     (_pwmRight + 1),a
01C6 8001       793            sjmp    L007004?
01C8            794   L007006?:
01C8            795   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:205: pwmRight=tempR;
01C8 8C30       796            mov     _pwmRight,r4
01CA 8D31       797            mov     (_pwmRight + 1),r5
01CC            798   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:206: pwmLeft=tempL;
01CC 8A70       799            mov     _pwmLeft,r2
01CE 8B71       800            mov     (_pwmLeft + 1),r3
01D0 22         801            ret
01D1            802   ;------------------------------------------------------------
01D1            803   ;Allocation info for local variables in function 'moveCar'
01D1            804   ;------------------------------------------------------------
01D1            805   ;------------------------------------------------------------
01D1            806   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:214: void moveCar()
01D1            807   ;        -----------------------------------------
01D1            808   ;         function moveCar
01D1            809   ;        -----------------------------------------
01D1            810   _moveCar:
01D1            811   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:219: if(distanceRight>PRESETS[Stage])
01D1 E5C0       812            mov     a,_Stage
01D3 25C0       813            add     a,_Stage
01D5 FA         814            mov     r2,a
01D6 E5C1       815            mov     a,(_Stage + 1)
01D8 33         816            rlc     a
01D9 FB         817            mov     r3,a
01DA EA         818            mov     a,r2
01DB 2448       819            add     a,#_PRESETS
01DD F582       820            mov     dpl,a
01DF EB         821            mov     a,r3
01E0 3489       822            addc    a,#(_PRESETS >> 8)
01E2 F583       823            mov     dph,a
01E4 E4         824            clr     a
01E5 93         825            movc    a,@a+dptr
01E6 FA         826            mov     r2,a
01E7 A3         827            inc     dptr
01E8 E4         828            clr     a
01E9 93         829            movc    a,@a+dptr
01EA FB         830            mov     r3,a
01EB 8A04       831            mov     ar4,r2
01ED 8B05       832            mov     ar5,r3
01EF C3         833            clr     c
01F0 EC         834            mov     a,r4
01F1 9540       835            subb    a,_distanceRight
01F3 ED         836            mov     a,r5
01F4 9541       837            subb    a,(_distanceRight + 1)
01F6 5001       838            jnc     L008002?
01F8            839   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:220: pwmLeft=pwmRight=75;
01F8 75304B     840            mov     _pwmRight,#0x4B
01FB E4         841            clr     a
01FC F531       842            mov     (_pwmRight + 1),a
01FE 75704B     843            mov     _pwmLeft,#0x4B
0201 E4         844            clr     a
0202 F571       845            mov     (_pwmLeft + 1),a
0204            846   L008002?:
0204            847   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:221: if(distanceRight>PRESETS[Stage])
0204 C3         848            clr     c
0205 EA         849            mov     a,r2
0206 9540       850            subb    a,_distanceRight
0208 EB         851            mov     a,r3
0209 9541       852            subb    a,(_distanceRight + 1)
020B 5001       853            jnc     L008004?
020D            854   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:222: pwmLeft=pwmRight=(-75);           
020D 7530B5     855            mov     _pwmRight,#0xB5
0210 7531FF     856            mov     (_pwmRight + 1),#0xFF
0213 7570B5     857            mov     _pwmLeft,#0xB5
0216 7571FF     858            mov     (_pwmLeft + 1),#0xFF
0219            859   L008004?:
0219            860   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:223: return;
0219 22         861            ret
021A            862   ;------------------------------------------------------------
021A            863   ;Allocation info for local variables in function 'wait2ms'
021A            864   ;------------------------------------------------------------
021A            865   ;------------------------------------------------------------
021A            866   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:227: void wait2ms (void)
021A            867   ;        -----------------------------------------
021A            868   ;         function wait2ms
021A            869   ;        -----------------------------------------
021A            870   _wait2ms:
021A            871   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:237: _endasm;
021A            872            
021A            873     ;For a 22.1184MHz crystal one machine cycle
021A            874     ;takes 12/22.1184MHz=0.5425347us
021A            875             J3:
021A 7C0A       876            mov R4, #10
021C            877             J2:
021C 7BB8       878            mov R3, #184
021E            879             J1:
021E DB88       880            djnz R3, J1 ; 2 machine cycles-> 2*0.5425347us*184=200us
0220 DC48       881                 djnz R4, J2 ; 200us*250=0.05s
0222 22         882                 ret
0223            883                
0223 22         884            ret
0224            885   ;------------------------------------------------------------
0224            886   ;Allocation info for local variables in function 'wait1s'
0224            887   ;------------------------------------------------------------
0224            888   ;------------------------------------------------------------
0224            889   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:241: void wait1s (void)
0224            890   ;        -----------------------------------------
0224            891   ;         function wait1s
0224            892   ;        -----------------------------------------
0224            893   _wait1s:
0224            894   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:253: _endasm;
0224            895            
0224            896     ;For a 22.1184MHz crystal one machine cycle
0224            897     ;takes 12/22.1184MHz=0.5425347us
0224 7A14       898                 mov R2, #20
0226            899             L3:
0226 79F8       900            mov R1, #248
0228            901             L2:
0228 78B8       902            mov R0, #184
022A            903             L1:
022A D848       904            djnz R0, L1 ; 2 machine cycles-> 2*0.5425347us*184=200us
022C D908       905                 djnz R1, L2 ; 200us*250=0.05s
022E DAC8       906                 djnz R2, L3 ; 0.05s*20=1s
0230 22         907                 ret
0231            908                
0231 22         909            ret
0232            910   ;------------------------------------------------------------
0232            911   ;Allocation info for local variables in function 'voltage'
0232            912   ;------------------------------------------------------------
0232            913   ;channel                   Allocated to registers 
0232            914   ;------------------------------------------------------------
0232            915   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:261: float voltage (unsigned char channel)
0232            916   ;        -----------------------------------------
0232            917   ;         function voltage
0232            918   ;        -----------------------------------------
0232            919   _voltage:
0232            920   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:263: return ((GetADC(channel) * 4.84) / 1023.0); // VCC=4.84V (measured)
0232 120100     921            lcall   _GetADC
0235 120100     922            lcall   ___uint2fs
0238 AA82       923            mov     r2,dpl
023A AB83       924            mov     r3,dph
023C ACF0       925            mov     r4,b
023E FD         926            mov     r5,a
023F C002       927            push    ar2
0241 C003       928            push    ar3
0243 C004       929            push    ar4
0245 C005       930            push    ar5
0247 90E148     931            mov     dptr,#0xE148
024A 75F09A     932            mov     b,#0x9A
024D 7440       933            mov     a,#0x40
024F 120100     934            lcall   ___fsmul
0252 AA82       935            mov     r2,dpl
0254 AB83       936            mov     r3,dph
0256 ACF0       937            mov     r4,b
0258 FD         938            mov     r5,a
0259 E581       939            mov     a,sp
025B 24FC       940            add     a,#0xfc
025D F581       941            mov     sp,a
025F E4         942            clr     a
0260 C0E0       943            push    acc
0262 74C0       944            mov     a,#0xC0
0264 C0E0       945            push    acc
0266 747F       946            mov     a,#0x7F
0268 C0E0       947            push    acc
026A 7444       948            mov     a,#0x44
026C C0E0       949            push    acc
026E 8A82       950            mov     dpl,r2
0270 8B83       951            mov     dph,r3
0272 8CF0       952            mov     b,r4
0274 ED         953            mov     a,r5
0275 120100     954            lcall   ___fsdiv
0278 AA82       955            mov     r2,dpl
027A AB83       956            mov     r3,dph
027C ACF0       957            mov     r4,b
027E FD         958            mov     r5,a
027F E581       959            mov     a,sp
0281 24FC       960            add     a,#0xfc
0283 F581       961            mov     sp,a
0285 8A82       962            mov     dpl,r2
0287 8B83       963            mov     dph,r3
0289 8CF0       964            mov     b,r4
028B ED         965            mov     a,r5
028C 22         966            ret
028D            967   ;------------------------------------------------------------
028D            968   ;Allocation info for local variables in function 'SPIWrite'
028D            969   ;------------------------------------------------------------
028D            970   ;value                     Allocated to registers r2 
028D            971   ;------------------------------------------------------------
028D            972   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:266: void SPIWrite(unsigned char value)
028D            973   ;        -----------------------------------------
028D            974   ;         function SPIWrite
028D            975   ;        -----------------------------------------
028D            976   _SPIWrite:
028D AA82       977            mov     r2,dpl
028F            978   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:268: SPSTA &= (~SPIF); // Clear the SPIF flag in SPSTA
028F 53C47F     979            anl     _SPSTA,#0x7F
0292            980   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:269: SPDAT = value;
0292 8AC5       981            mov     _SPDAT,r2
0294            982   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:270: while ((SPSTA & SPIF) != SPIF); //Wait for transmission to end
0294            983   L012001?:
0294 7480       984            mov     a,#0x80
0296 55C4       985            anl     a,_SPSTA
0298 FA         986            mov     r2,a
0299 BA8088     987            cjne    r2,#0x80,L012001?
029C 22         988            ret
029D            989   ;------------------------------------------------------------
029D            990   ;Allocation info for local variables in function 'GetADC'
029D            991   ;------------------------------------------------------------
029D            992   ;channel                   Allocated to registers r2 
029D            993   ;adc                       Allocated to registers r2 r3 
029D            994   ;------------------------------------------------------------
029D            995   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:274: unsigned int GetADC(unsigned char channel)
029D            996   ;        -----------------------------------------
029D            997   ;         function GetADC
029D            998   ;        -----------------------------------------
029D            999   _GetADC:
029D AA82      1000            mov     r2,dpl
029F           1001   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:279: SPCON &= (~SPEN); // Disable SPI
029F 53C3BF    1002            anl     _SPCON,#0xBF
02A2           1003   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:280: SPCON = MSTR | CPOL | CPHA | SPR1 | SPR0 | SSDIS;
02A2 75C33F    1004            mov     _SPCON,#0x3F
02A5           1005   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:281: SPCON |= SPEN; // Enable SPI
02A5 43C340    1006            orl     _SPCON,#0x40
02A8           1007   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:283: P1_4 = 0; // Activate the MCP3004 ADC.
02A8 C294      1008            clr     _P1_4
02AA           1009   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:284: SPIWrite(channel | 0x18);         // Send start bit, single/diff* bit, D2, D1, and D0 bits.
02AA 7418      1010            mov     a,#0x18
02AC 4A        1011            orl     a,r2
02AD F582      1012            mov     dpl,a
02AF 120100    1013            lcall   _SPIWrite
02B2           1014   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:285: for (adc=0; adc < 10; adc++); // Wait for S/H to setup
02B2 7A0A      1015            mov     r2,#0x0A
02B4 7B00      1016            mov     r3,#0x00
02B6           1017   L013003?:
02B6 1A        1018            dec     r2
02B7 BAFF08    1019            cjne    r2,#0xff,L013009?
02BA 1B        1020            dec     r3
02BB           1021   L013009?:
02BB EA        1022            mov     a,r2
02BC 4B        1023            orl     a,r3
02BD 7001      1024            jnz     L013003?
02BF           1025   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:286: SPIWrite(0x55); // Read bits 9 down to 4
02BF 758255    1026            mov     dpl,#0x55
02C2 120100    1027            lcall   _SPIWrite
02C5           1028   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:287: adc=((SPDAT & 0x3f) * 0x100);
02C5 743F      1029            mov     a,#0x3F
02C7 55C5      1030            anl     a,_SPDAT
02C9 FB        1031            mov     r3,a
02CA 7A00      1032            mov     r2,#0x00
02CC           1033   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:288: SPIWrite(0x55);// Read bits 3 down to 0
02CC 758255    1034            mov     dpl,#0x55
02CF C002      1035            push    ar2
02D1 C003      1036            push    ar3
02D3 120100    1037            lcall   _SPIWrite
02D6 D003      1038            pop     ar3
02D8 D002      1039            pop     ar2
02DA           1040   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:289: P1_4 = 1; // Deactivate the MCP3004 ADC.
02DA D294      1041            setb    _P1_4
02DC           1042   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:290: adc += (SPDAT & 0xf0); // SPDR contains the low part of the result. 
02DC 74F0      1043            mov     a,#0xF0
02DE 55C5      1044            anl     a,_SPDAT
02E0 FC        1045            mov     r4,a
02E1 7D00      1046            mov     r5,#0x00
02E3 EC        1047            mov     a,r4
02E4 2A        1048            add     a,r2
02E5 FA        1049            mov     r2,a
02E6 ED        1050            mov     a,r5
02E7 3B        1051            addc    a,r3
02E8           1052   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:291: adc >>= 4;
02E8 C4        1053            swap    a
02E9 CA        1054            xch     a,r2
02EA C4        1055            swap    a
02EB 540F      1056            anl     a,#0x0f
02ED 6A        1057            xrl     a,r2
02EE CA        1058            xch     a,r2
02EF 540F      1059            anl     a,#0x0f
02F1 CA        1060            xch     a,r2
02F2 6A        1061            xrl     a,r2
02F3 CA        1062            xch     a,r2
02F4           1063   ;        C:\Users\q9x8\Documents\GitHub\Projects\Project2_Car\Code\core.c:293: return adc;
02F4 8A82      1064            mov     dpl,r2
02F6 F583      1065            mov     dph,a
02F8 22        1066            ret
02F9           1067            rseg R_CSEG
02F9           1068   
0000           1069            rseg R_XINIT
0000           1070   
0000           1071            rseg R_CONST
0000           1072   _PRESETS:
0000 0500      1073            db 0x05,0x00    ;  5
0002 0A00      1074            db 0x0A,0x00    ;  10
0004 0F00      1075            db 0x0F,0x00    ;  15
0006 1400      1076            db 0x14,0x00    ;  20
0008 1900      1077            db 0x19,0x00    ;  25
000A 1E00      1078            db 0x1E,0x00    ;  30
000C 2300      1079            db 0x23,0x00    ;  35
000E 2800      1080            db 0x28,0x00    ;  40
0010 2D00      1081            db 0x2D,0x00    ;  45
0012 3200      1082            db 0x32,0x00    ;  50
0014 3700      1083            db 0x37,0x00    ;  55
0016 3C00      1084            db 0x3C,0x00    ;  60
0018           1085   
000E           1086            CSEG
000E           1087   
000E           1088   end
